{"_id":"eosjs","_rev":"240-497f3fda47d43e50b570a71b6c32deb9","name":"eosjs","dist-tags":{"latest":"21.0.3","edge":"21.1.0-23-08dc543","RC":"21.0.2-rc3"},"versions":{"1.0.0":{"name":"eosjs","version":"1.0.0","description":"","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":"","license":"ISC","_id":"eosjs@1.0.0","_shasum":"39f61123edc50a1695873f0f19155f237c9c4718","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.0","_npmUser":{"name":"denkomanceski","email":"denkomanceski@gmail.com"},"dist":{"shasum":"39f61123edc50a1695873f0f19155f237c9c4718","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.0.tgz"},"maintainers":[{"name":"denkomanceski","email":"denkomanceski@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.0.tgz_1498995020634_0.9612280826549977"},"directories":{}},"0.0.2":{"name":"eosjs","version":"0.0.2","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":"","license":"ISC","_id":"eosjs@0.0.2","_shasum":"9c464743312491bbbd8ad26948f78c939dde909d","_from":".","_npmVersion":"3.10.10","_nodeVersion":"6.10.0","_npmUser":{"name":"denkomanceski","email":"denkomanceski@gmail.com"},"dist":{"shasum":"9c464743312491bbbd8ad26948f78c939dde909d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-0.0.2.tgz"},"maintainers":[{"name":"denkomanceski","email":"denkomanceski@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-0.0.2.tgz_1498995139070_0.827121744863689"},"directories":{}},"1.0.1":{"name":"eosjs","version":"1.0.1","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.2","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.2","fcbuffer":"^1.0.1"},"gitHead":"88548b6f1956d6d9b743de8bc8bec372ecee9f6d","_id":"eosjs@1.0.1","_shasum":"1b9d4e7798ee9789c6894f6b6dbcfe0d95307dbf","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"jamesc","email":"james@jcalfee.info"},"dist":{"shasum":"1b9d4e7798ee9789c6894f6b6dbcfe0d95307dbf","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.1.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.1.tgz_1499358366186_0.41532052494585514"},"directories":{}},"1.0.2":{"name":"eosjs","version":"1.0.2","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.2","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.2","fcbuffer":"^1.0.1"},"gitHead":"e14db6da01e0e2fcebfde44151ee99c87522b556","_id":"eosjs@1.0.2","_shasum":"48d7312a70c096e5ade4b1d634431350eee092fb","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"jamesc","email":"james@jcalfee.info"},"dist":{"shasum":"48d7312a70c096e5ade4b1d634431350eee092fb","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.2.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.2.tgz_1499359670362_0.4421408523339778"},"directories":{}},"1.0.3":{"name":"eosjs","version":"1.0.3","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.2","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.2","fcbuffer":"^1.0.1"},"gitHead":"0284dbfe824b34c0a71527d1cd8be0eccae989eb","_id":"eosjs@1.0.3","_shasum":"4fec3af75083940bfa7ec27781833b09d47d007f","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"jamesc","email":"james@jcalfee.info"},"dist":{"shasum":"4fec3af75083940bfa7ec27781833b09d47d007f","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.3.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.3.tgz_1499359821356_0.048745677107945085"},"directories":{}},"1.0.4":{"name":"eosjs","version":"1.0.4","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.4","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.2","fcbuffer":"^1.0.1"},"gitHead":"cac9f0612cac4fde21c2b05ea65d59d5f5cc689b","_id":"eosjs@1.0.4","_shasum":"86afc29692af41e0a1098fe4318678a03b72df68","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"jamesc","email":"james@jcalfee.info"},"dist":{"shasum":"86afc29692af41e0a1098fe4318678a03b72df68","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.4.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.4.tgz_1499450772245_0.023329457035288215"},"directories":{}},"1.0.5":{"name":"eosjs","version":"1.0.5","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.4","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.2","fcbuffer":"^1.0.1"},"gitHead":"23ab7601ddf8272e5ba89dcf4ce9d336f02451e0","_id":"eosjs@1.0.5","_shasum":"7d0c7ee33a3076a9cfd3d7b4195deee423e3bee3","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"jamesc","email":"james@jcalfee.info"},"dist":{"shasum":"7d0c7ee33a3076a9cfd3d7b4195deee423e3bee3","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.5.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.5.tgz_1499514475576_0.5482877055183053"},"directories":{}},"1.0.6":{"name":"eosjs","version":"1.0.6","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.4","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.3","fcbuffer":"^1.0.1"},"gitHead":"d6bc2ef50364fb79f13e4cb8eeaa71b832fe78c9","_id":"eosjs@1.0.6","_shasum":"265fbac6786c281f9b4da3d0e69f8b15cca59c39","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"jamesc","email":"james@jcalfee.info"},"dist":{"shasum":"265fbac6786c281f9b4da3d0e69f8b15cca59c39","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.6.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.6.tgz_1499515401060_0.8142822191584855"},"directories":{}},"1.0.7":{"name":"eosjs","version":"1.0.7","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.6","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.3","fcbuffer":"^1.0.3"},"gitHead":"79dcb51bbe73b7493e0dcea719e9065aadd871db","_id":"eosjs@1.0.7","_shasum":"37e1cdb4e36abb33460bb9c546f9f91a0ca55b2a","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"jamesc","email":"james@jcalfee.info"},"dist":{"shasum":"37e1cdb4e36abb33460bb9c546f9f91a0ca55b2a","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.7.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.7.tgz_1499803271846_0.2520362895447761"},"directories":{}},"1.0.8":{"name":"eosjs","version":"1.0.8","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.6","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.4","fcbuffer":"^1.0.3"},"gitHead":"f99157d178cec8ca2f77e6184f0d82cae24275ff","_id":"eosjs@1.0.8","_shasum":"9f8703100c6d6b42a1c812b2f749fbe8add96936","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"jamesc","email":"james@jcalfee.info"},"dist":{"shasum":"9f8703100c6d6b42a1c812b2f749fbe8add96936","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.8.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.8.tgz_1499878336434_0.5752703514881432"},"directories":{}},"1.0.9":{"name":"eosjs","version":"1.0.9","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.7","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.6","fcbuffer":"^1.0.5"},"gitHead":"885473c82ef56e2d404cd3eeecfee7a486828079","_id":"eosjs@1.0.9","_shasum":"b7bdafa82d911401cce2f65e5c5b6af954e7993c","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"shasum":"b7bdafa82d911401cce2f65e5c5b6af954e7993c","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.9.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.9.tgz_1501381460131_0.24891090602613986"},"directories":{}},"1.0.10":{"name":"eosjs","version":"1.0.10","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.7","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.7","fcbuffer":"^1.0.5"},"gitHead":"852fd58eb14273a3411fa5ea43b5fae0fb3ccad2","_id":"eosjs@1.0.10","_shasum":"6321c678f9ffb5b240c9d9241a612936206fafab","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"shasum":"6321c678f9ffb5b240c9d9241a612936206fafab","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.10.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.10.tgz_1501599604371_0.07309330115094781"},"directories":{}},"1.0.11":{"name":"eosjs","version":"1.0.11","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.9","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.7","fcbuffer":"^1.0.5"},"gitHead":"721500a6da8003890f75726f834221cd7c816d75","_id":"eosjs@1.0.11","_npmVersion":"5.3.0","_nodeVersion":"8.1.4","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-A38vDK6HYoDg6E5QKoBtnVxNVdd9oxfCGvq4GwbNpMxr2+QLm7+5tyZ0xiJHg7eUL7isvxBaFS/gyKExmTO8UQ==","shasum":"84d9c381a919b75086c7b290521530e9f6f74e63","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.11.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.11.tgz_1501768995160_0.31724891858175397"},"directories":{}},"1.0.12":{"name":"eosjs","version":"1.0.12","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.9","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.7","fcbuffer":"^1.0.5"},"gitHead":"db900a38914817958fcc5ac6b3ca4b7b5e84a8e7","_id":"eosjs@1.0.12","_shasum":"827cbf8f03f34d027c1580c8cdd6d42b1cb0dfdf","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"shasum":"827cbf8f03f34d027c1580c8cdd6d42b1cb0dfdf","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.12.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.12.tgz_1501774260554_0.3265926653984934"},"directories":{}},"1.0.13":{"name":"eosjs","version":"1.0.13","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.10","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.8","fcbuffer":"^1.0.6"},"gitHead":"d56f5813524a02d801de1fe9442111d1a63868ec","_id":"eosjs@1.0.13","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-cP82hBbIjz6HeW1kOrAlmNnoxfmDBR9o0YhR2WOrIedOxK5mN9CnWVYSI/oTkCdQo4zRJM45/vLSNjgMCtvmuw==","shasum":"d5548aea1d00008e3e1bcbab11c5635568d7e08c","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.13.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.13.tgz_1503457105573_0.6994901937432587"},"directories":{}},"1.0.14":{"name":"eosjs","version":"1.0.14","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/eosjs/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/eosjs/eosjs/issues"},"homepage":"https://github.com/eosjs/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.14","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.8","fcbuffer":"^1.0.7"},"gitHead":"7331fa13f2e57bdef8dcf56ba855b2e74c9991f0","_id":"eosjs@1.0.14","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-E89V0M8U+P8SJI11hHN/G7C/dz0n908yM/S3sEXooPOS79rqtOfz2nDY7jGt8wJSf70hGv+syOSaizDoh+A1LQ==","shasum":"c8e4f1959ffa204327b1288d833bc7ed77cabc8d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.14.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.14.tgz_1503773080048_0.3027517374139279"},"directories":{}},"1.0.15":{"name":"eosjs","version":"1.0.15","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.14","eosjs-ecc":"^1.0.3","eosjs-json":"^1.0.8","fcbuffer":"^1.0.7"},"gitHead":"6428ba9b47594f1efc2581772b7bc8a0a8325d25","_id":"eosjs@1.0.15","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-CqL38JWDrxfFdWwg9hySX3+05Es9Oya85PV0JB0F3rrFRpQHIDOgyvEPDf/liydxoMuOnmFQCjJsvK4Sd0HHhQ==","shasum":"52a1d70f49be3c6a389d649ad774ae23c26b50de","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.0.15.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.0.15.tgz_1503774239689_0.5344428776297718"},"directories":{}},"1.1.0":{"name":"eosjs","version":"1.1.0","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.0.15","eosjs-ecc":"^1.1.0","eosjs-json":"^1.1.0","fcbuffer":"^1.0.7"},"gitHead":"0f5684a261c43b03d57c2130a30266f1d3073e06","_id":"eosjs@1.1.0","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-yT/GIxZ8wujoAdforapsdpkbkntWwrIoFl5DQv4eKhRnMP3vknUU7jiTPreNxthIORHZUQIODtLtJY890pku9w==","shasum":"b746c5fe7e96219adab4d57b6898ee15b92156ff","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.1.0.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.1.0.tgz_1504644716749_0.4483757447451353"},"directories":{}},"1.2.0":{"name":"eosjs","version":"1.2.0","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.1.0","eosjs-ecc":"^1.1.0","eosjs-json":"^1.1.0","fcbuffer":"^1.1.0"},"gitHead":"73ea4e35b7f7eb91421580b6ad70cdefcad69cb7","_id":"eosjs@1.2.0","_npmVersion":"5.3.0","_nodeVersion":"8.2.1","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-Zx665Xvo+H3QXgdnvmyoBMXwXQRIQ62AJnSpcrtJkD4tS8M7dvwnnunFgQToLzjzQ5jSKXJV12Wbp5/d9TNy8g==","shasum":"e7886eb6206d73fef81065b81a0530291c429ba6","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.2.0.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.2.0.tgz_1504919308555_0.7171311171259731"},"directories":{}},"1.3.0":{"name":"eosjs","version":"1.3.0","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"create-hash":"^1.1.3","eosjs-api":"^1.2.0","eosjs-ecc":"^1.1.0","eosjs-json":"^1.2.0","fcbuffer":"^1.1.0"},"gitHead":"d26639ba3cfb7338b89d8123c6b047e9dc244ef7","_id":"eosjs@1.3.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-zaPNT47Op+L2u9PDbkQpLtPPpUQ0Pgmxyp4SRzpMuGPgTNwFCriS6epgFJbwhET623mWLhIgef02QtL+lIsCvQ==","shasum":"6d0cd9401426cd6aeff5c86977ab8b2c807534f8","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.3.0.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.3.0.tgz_1505149722870_0.7149711307138205"},"directories":{}},"1.4.0":{"name":"eosjs","version":"1.4.0","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"ISC","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.2","eosjs-ecc":"^1.2.0","eosjs-json":"^1.3.0","fcbuffer":"^1.2.0"},"gitHead":"e6d74c6815b09f2ecdfde0fdfcfeff0731a0a675","_id":"eosjs@1.4.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-21EZTaF3uFRM2mSAu9+jM1UwPgDp5uZGmqs1Sw1wq77plbipWrfmInbTvTuhHy0nheFkD2ntjz11yeKs+F+txQ==","shasum":"6a6b59e38039e60f67a5eea65aa450243da5f539","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.4.0.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.4.0.tgz_1505401456087_0.6613646522164345"},"directories":{}},"1.4.1":{"name":"eosjs","version":"1.4.1","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.3","eosjs-ecc":"^1.3.2","eosjs-json":"^1.3.0","fcbuffer":"^1.2.0"},"gitHead":"76499d3dc8323930aec1f0c4023d693251f2c463","_id":"eosjs@1.4.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-7Wb4OrJwgwy4wdS/IqmTb2STXpWXmSZdK2MPFH+NNFtag+ViXe4c/JgmjWWMc/NqGetmGAjssqVaiqeoWTkifA==","shasum":"4507cc20729a50f79c33fbb8587fc1353fbd23b0","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.4.1.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.4.1.tgz_1505917987907_0.671572970924899"},"directories":{}},"1.4.2":{"name":"eosjs","version":"1.4.2","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.3","eosjs-ecc":"^1.3.2","eosjs-json":"^1.3.0","fcbuffer":"^1.2.0"},"gitHead":"b30ef3a9a4b48cc64ffe4145342b8a7c9acf1496","_id":"eosjs@1.4.2","_shasum":"97f3ac38ec011c2932a2ed3779ceb0941317345f","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.5.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"shasum":"97f3ac38ec011c2932a2ed3779ceb0941317345f","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.4.2.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.4.2.tgz_1506092348938_0.6762305027805269"},"directories":{}},"1.4.3":{"name":"eosjs","version":"1.4.3","description":"General purpose library for the EOS blockchain.","main":"index.js","scripts":{"test":"mocha index.test.js **/*.test.js","coverage":"istanbul cover _mocha -- -R spec index.test.js **/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.5","eosjs-ecc":"^1.3.2","eosjs-json":"^1.4.0","fcbuffer":"^1.2.0"},"gitHead":"14ad25a47439235703ef16874f17ad0e61e97102","_id":"eosjs@1.4.3","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-1GswVIahjTuX2l+24GLK2u/BLcrMTK1DVYQaHNBB6CpVqM+cVOkJzugN8+d+Je4TmWZus16D/PMpRQCx8D0cQA==","shasum":"cc5fc7fff3aba68eb02d925b57925e88744badbf","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.4.3.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.4.3.tgz_1506445772983_0.7995263773482293"},"directories":{}},"1.4.6":{"name":"eosjs","version":"1.4.6","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"node_modules/babel-cli/bin/babel.js src --out-dir lib","prepublish":"npm run build"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.7","eosjs-ecc":"^1.3.2","eosjs-json":"^1.4.1","fcbuffer":"^1.2.3"},"babel":{"presets":["es2015"]},"gitHead":"55bd1a99ca9d46e6b67f76701cfdfd7a1876892e","_id":"eosjs@1.4.6","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-s0S36ko1VEncHN1w43/OD+DfLQqYUTE7EewwKeeNdSAXp0VbpM7AhRWtoso99EYMMcInZc1M2qhtNKcB9dZzHg==","shasum":"057e0b6c2a15538e774e5a961eb7204c3c46da59","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-1.4.6.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-1.4.6.tgz_1507041748605_0.9023902928456664"},"directories":{}},"2.0.0":{"name":"eosjs","version":"2.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"node_modules/babel-cli/bin/babel.js src --out-dir lib","build":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.7","eosjs-ecc":"^1.3.2","eosjs-json":"^1.4.1","fcbuffer":"^1.2.3"},"babel":{"presets":["es2015"]},"gitHead":"e90fa865afbb94e887b995efd419b55b51de9beb","_id":"eosjs@2.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-ygmB3gYfnzsN2ZdNco/fl4Vz/6nl2LK5jeEKY/p1r5pnTXZoP3HTUWjcGkpaLd6yYa3nnxzaaaS5lnF+U4opEQ==","shasum":"0795726141276dbf950734899aed57702869d439","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-2.0.0.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-2.0.0.tgz_1507920400920_0.6543327865656465"},"directories":{}},"2.0.1":{"name":"eosjs","version":"2.0.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"node_modules/babel-cli/bin/babel.js src --out-dir lib","build":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.7","eosjs-ecc":"^1.3.2","eosjs-json":"^1.4.1","fcbuffer":"^1.2.3"},"babel":{"presets":["es2015"]},"gitHead":"5e734ddecc2444b495df163c76292e32daed626a","_id":"eosjs@2.0.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-yHD8xWslskJmI4VBpMAoEGgPCePTJrZd4R5pjCjfbAK+lK8J0RjQQtxxmgJpfKBZU7zttMSI8rXORAyNCJP9ig==","shasum":"fc71a7415b7279fc7facaf13d8772b81b55c1ceb","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-2.0.1.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-2.0.1.tgz_1507921041881_0.8804720577318221"},"directories":{}},"2.1.0":{"name":"eosjs","version":"2.1.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"node_modules/babel-cli/bin/babel.js src --out-dir lib","build":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.7","eosjs-ecc":"^1.3.2","eosjs-json":"^1.4.1","fcbuffer":"^1.2.3"},"babel":{"presets":["es2015"]},"gitHead":"89ef1ac29098473c64a03388d65b1c1682b4779c","_id":"eosjs@2.1.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-CpH8z2ndzAWP2za4TxrBT9v6kT5zCvFwNUlWPPQWYM1QhUprOnK1Q873RXSd+6jRFWhBki/Itysb9R/p7TKvpg==","shasum":"62128d4b6d6cb237e8c60cd1692e26145ef7f3f7","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-2.1.0.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-2.1.0.tgz_1508012160160_0.15061855921521783"},"directories":{}},"2.1.1":{"name":"eosjs","version":"2.1.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"node_modules/babel-cli/bin/babel.js src --out-dir lib","build":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.7","eosjs-ecc":"^1.3.2","eosjs-json":"^1.4.1","fcbuffer":"^1.2.3"},"babel":{"presets":["es2015"]},"gitHead":"a55c1524eb39679deedfa8153c283b6818ec685c","_id":"eosjs@2.1.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-dR3E3jy3PF2UO7BtIQa02Jn5/SxkAp/we+Nqhe108l3iKfZGWOp2Ec447vz7AkgqBqO/X2dxpuKCbloPm/2sag==","shasum":"d06344592358cea3df97378ec53e17ba3fbef0dd","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-2.1.1.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-2.1.1.tgz_1508032408158_0.6365786329843104"},"directories":{}},"3.0.0":{"name":"eosjs","version":"3.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"node_modules/babel-cli/bin/babel.js src --out-dir lib","build":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.7","eosjs-ecc":"^1.3.2","eosjs-json":"^1.4.1","fcbuffer":"^1.2.3"},"babel":{"presets":["es2015"]},"gitHead":"1589f65dad54fe9927c065df18091733e2d368d4","_id":"eosjs@3.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-0hsVp4AwyS0kt0k4JhLoMY6CWzmSQlk2gJZuO1LSx/brRQA0QaHU0TKu+6LoQTkyZ6hLCOg1tRlzFWoJT8OV9Q==","shasum":"81c234d7dd9f24725df9600185a40b618f930537","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-3.0.0.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-3.0.0.tgz_1508185326807_0.09658244345337152"},"directories":{}},"3.0.1":{"name":"eosjs","version":"3.0.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"node_modules/babel-cli/bin/babel.js src --out-dir lib","build":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.7","eosjs-ecc":"^1.3.2","eosjs-json":"^1.4.1","fcbuffer":"^1.2.4"},"babel":{"presets":["es2015"]},"gitHead":"9af54d32c15de4e8243a43d7c67d41ab328bf9c5","_id":"eosjs@3.0.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-hiGzW5w0rwq/8yXfQOHjzO+1j0fC3rIwleznUPSlodJFdjap1+LjiN7SyzMK7Xb65jbMC+41DrYpU22WT3Z7ew==","shasum":"b7b385aac5f55298f53cc16676b5e67e85aba356","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-3.0.1.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-3.0.1.tgz_1508511032332_0.6170464120805264"},"directories":{}},"3.0.2":{"name":"eosjs","version":"3.0.2","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"node_modules/babel-cli/bin/babel.js src --out-dir lib","build":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.7","eosjs-ecc":"^1.3.2","eosjs-json":"^1.4.1","fcbuffer":"^1.2.4"},"babel":{"presets":["es2015"]},"gitHead":"c924b3ec4f8e0d58e64e6f397f312798fc510ebd","_id":"eosjs@3.0.2","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-0sMPivV/Qr+rT5XC1mYBR+mRFcSpIyoKnDd2rbksevcjgnHBWjJyQMLW/edcY7PtG5jFinuoo1Pf0O2qzELjhg==","shasum":"be0acbbabb919ad21f6cc19e8962bf5a4bb76b78","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-3.0.2.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-3.0.2.tgz_1508518663790_0.5179131347686052"},"directories":{}},"3.0.3":{"name":"eosjs","version":"3.0.3","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"node_modules/babel-cli/bin/babel.js src --out-dir lib","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.7","eosjs-ecc":"^1.4.0","eosjs-json":"^1.4.1","fcbuffer":"^1.2.4"},"babel":{"presets":["es2015"]},"gitHead":"b52804017def3b275c38ce3eff9e3592a511e625","_id":"eosjs@3.0.3","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-puogi0S9wCV24/g/FM74TFrPdFgUzuQjn2+YHBzwmNuOFYpMXL5xWHfD71NfkV7HJsFoWjD3dxUu5iH0JbFPyA==","shasum":"399e2efc7d7e4197cd5322fcbf75c08badc11c8e","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-3.0.3.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-3.0.3.tgz_1509134080149_0.7128051933832467"},"directories":{}},"3.0.4":{"name":"eosjs","version":"3.0.4","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"node_modules/babel-cli/bin/babel.js src --out-dir lib","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.11","eosjs-ecc":"^1.4.0","eosjs-json":"^1.4.1","fcbuffer":"^1.2.4"},"babel":{"presets":["es2015"]},"gitHead":"89dbba46f6d857172c6d0ad2e4bece1a8bbec028","_id":"eosjs@3.0.4","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-YUJL5EfDU11rGbg4bva+GBpJ84kdZD6Fy8QsMNLj8AxiiVMUA2M19kUjCV4bB4Licde32419V4aB759eU4ad9w==","shasum":"2f90f47eb5f8e16c37246f4009f3625b55f4784f","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-3.0.4.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-3.0.4.tgz_1510610966055_0.46584843937307596"},"directories":{}},"3.0.5":{"name":"eosjs","version":"3.0.5","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"node_modules/babel-cli/bin/babel.js src --out-dir lib","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^1.2.11","eosjs-ecc":"^1.4.0","eosjs-json":"^1.4.1","fcbuffer":"^1.2.4"},"babel":{"presets":["es2015"]},"gitHead":"7f305152a50568548bb58305a7f6259483a928bc","_id":"eosjs@3.0.5","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-DcRtOIP4ZEY72EZ/oGVbIDzzktomnU0qLL3fd7dnfuuuiJnrPP1GS3/ebwu7wkH6eUXSQUuLeZmUbG6KcXrOiQ==","shasum":"e71bb2cdecae0dd2ee76727c1d08b01183992fe3","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-3.0.5.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-3.0.5.tgz_1510682799645_0.05572435609064996"},"directories":{}},"4.0.1":{"name":"eosjs","version":"4.0.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"node_modules/babel-cli/bin/babel.js src --out-dir lib","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^2.0.1","eosjs-ecc":"^1.6.1","eosjs-json":"^2.0.2","fcbuffer":"^2.0.0"},"babel":{"presets":["es2015"]},"gitHead":"46f8663dd32579aa393514365d771ee5c47428c0","_id":"eosjs@4.0.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-D4g8pQoHdF/DHY9MCQunpEtKwRwZxE4jZz8njRbFkdas9wPBwasgilwkuNZT+CZADulBSbPIVxC656Urb7X1gw==","shasum":"2da8cfe103af656f655c3bab5e8802604dc5af7b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-4.0.1.tgz"},"maintainers":[{"name":"jamesc","email":"james@jcalfee.info"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-4.0.1.tgz_1511199372375_0.2204655483365059"},"directories":{}},"4.0.2":{"name":"eosjs","version":"4.0.2","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test","prepublish_lib":"node_modules/babel-cli/bin/babel.js src --out-dir lib","prepublish_test":"mocha lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^2.0.1","eosjs-ecc":"^1.6.1","eosjs-json":"^2.0.2","fcbuffer":"^2.0.0"},"babel":{"presets":["es2015"]},"gitHead":"013926c277c812d1199aac39005d82724b37d71f","_id":"eosjs@4.0.2","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-WUz7GsySZAr7MmTCOe33xBRHDQq686gLQx60/s6Z+M24ZKMLk6Rb8j/Wem238JAuG2LwTaJEl0EzqDLHXRbtAA==","shasum":"f7e44eae72344114922e84c0513626bbeefd2302","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-4.0.2.tgz"},"maintainers":[{"email":"serg.metelin@gmail.com","name":"smetelin"},{"email":"jslim180@gmail.com","name":"jamesc"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-4.0.2.tgz_1511389692527_0.06675492459908128"},"directories":{}},"5.0.0":{"name":"eosjs","version":"5.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.0","eosjs-ecc":"^1.6.1","eosjs-json":"^2.0.2","fcbuffer":"^2.0.0"},"babel":{"presets":["es2015"]},"gitHead":"f1e037e37c4b63e48c4170c644bb759254961779","_id":"eosjs@5.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-C6sBqCwuAllQ82kqpdvSwHaUqViPV44tgtCtLubAe/ghAclXgzTShthpXYDPwrjfciAtTrWzm5kuknwSpECr2Q==","shasum":"3495f822fb7a6e9f29f3affe062e5d49643878e3","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-5.0.0.tgz"},"maintainers":[{"email":"serg.metelin@gmail.com","name":"smetelin"},{"email":"jslim180@gmail.com","name":"jamesc"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-5.0.0.tgz_1512485428920_0.9336050311103463"},"directories":{}},"5.1.0":{"name":"eosjs","version":"5.1.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.0","eosjs-ecc":"^1.6.1","eosjs-json":"^2.0.2","fcbuffer":"^2.0.0"},"babel":{"presets":["es2015"]},"gitHead":"5816b84bfc11bf4497067296975570cd94005c34","_id":"eosjs@5.1.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-bUquVO9smiLHsgv+SMU2Gc42I7nvCvkmYFuMaRtx8otR9XkVPdw0tJcq3iZhGPSqD2l4GIGo/15JuZ64AIDN7A==","shasum":"1f15770ceb1e605e3501ee80ffefd31b92a19b61","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-5.1.0.tgz"},"maintainers":[{"email":"serg.metelin@gmail.com","name":"smetelin"},{"email":"jslim180@gmail.com","name":"jamesc"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-5.1.0.tgz_1512682691506_0.46457196143455803"},"directories":{}},"5.1.1":{"name":"eosjs","version":"5.1.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.0","eosjs-ecc":"^1.6.1","eosjs-json":"^2.0.2","fcbuffer":"^2.0.0"},"babel":{"presets":["es2015"]},"gitHead":"31ca86ca4d58b13d4f888be22981e8be8e4adb62","_id":"eosjs@5.1.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-Bn1NI47xZrRtMb6G9F8HrkW1fBP16BD92hjvVTETV8ZW3IzperputP0/RSSeOSQckWd9WWO2pEj8JytwZ/6+VA==","shasum":"3a0060697d9df16bac21e92bb283302e98c2f2cd","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-5.1.1.tgz"},"maintainers":[{"email":"serg.metelin@gmail.com","name":"smetelin"},{"email":"jslim180@gmail.com","name":"jamesc"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-5.1.1.tgz_1512683699665_0.517590309958905"},"directories":{}},"5.1.2":{"name":"eosjs","version":"5.1.2","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.0","eosjs-ecc":"^1.6.3","eosjs-json":"^2.0.2","fcbuffer":"^2.0.0"},"babel":{"presets":["es2015"]},"gitHead":"d3b1e121064237a7adc4a7cc4f325c1381193ee3","_id":"eosjs@5.1.2","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-jxmIYFPhIFm49e+2VY+vitY6cgzb2PPsiWsHxvU/xsjJ+5VyxnsDm8o654S2MTwXGp52kKJS9PH11m0CM8l2uw==","shasum":"d1de928506eab2e249e07bcddf1d0096f36d1569","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-5.1.2.tgz"},"maintainers":[{"email":"serg.metelin@gmail.com","name":"smetelin"},{"email":"jslim180@gmail.com","name":"jamesc"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-5.1.2.tgz_1513183588418_0.7513296506367624"},"directories":{}},"6.0.0":{"name":"eosjs","version":"6.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.0","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.2","fcbuffer":"^2.0.0"},"babel":{"presets":["es2015"]},"gitHead":"3bb1a15e2dbeaac3875b4bacbaf9c2580e2841b5","_id":"eosjs@6.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-1BMc/p2KX9/t2HzODjuAwGFGLAzWzboR4Opw5F07CugzAjsDzXmy0AJi+y9eRnCpu/M7VW2iba2dUxCITw9jAQ==","shasum":"f8091f5530cf2b6e395d1708fb0aa4330804d840","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.0.0.tgz"},"maintainers":[{"email":"serg.metelin@gmail.com","name":"smetelin"},{"email":"jslim180@gmail.com","name":"jamesc"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-6.0.0.tgz_1513278603238_0.9189598769880831"},"directories":{}},"6.0.1":{"name":"eosjs","version":"6.0.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","istanbul":"^0.4.5","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.0","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.2","fcbuffer":"^2.0.1"},"babel":{"presets":["es2015"]},"gitHead":"95cfe057a2807eceff2f13d90aca1cfba9120ef3","_id":"eosjs@6.0.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-En6L0Sjxx2rW0KW4GztWxFK1/mPJHQib8OdbLQ0jwn3yxaoj6vHeQaFAsilgcNyu7XdlyjJnORzjZnHqhfbywg==","shasum":"6fa187f3653cbc725d65503e985d222606d77ca8","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.0.1.tgz"},"maintainers":[{"email":"serg.metelin@gmail.com","name":"smetelin"},{"email":"jslim180@gmail.com","name":"jamesc"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-6.0.1.tgz_1513724069162_0.389823526609689"},"directories":{}},"6.0.2":{"name":"eosjs","version":"6.0.2","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","istanbul":"^0.4.5","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.0","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.1"},"babel":{"presets":["es2015"]},"gitHead":"48bd907efae35e79cc6b8558e7b713a66180588a","_id":"eosjs@6.0.2","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-UYADEUGBNKRrKqGti0VvlgztLJ7HUNAOqUOsoByyFUc3F+asuQG5WYZfaVKYBvm9J+YTGvDNtG3ZWCr45iFCGQ==","shasum":"27a977658b2923a1e8fbc047bcc4b001d19db07f","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.0.2.tgz"},"maintainers":[{"email":"serg.metelin@gmail.com","name":"smetelin"},{"email":"jslim180@gmail.com","name":"jamesc"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-6.0.2.tgz_1516287492103_0.10023950785398483"},"directories":{}},"6.0.3":{"name":"eosjs","version":"6.0.3","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"istanbul cover _mocha -- -R spec src/*.test.js","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","istanbul":"^0.4.5","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.0","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.1"},"babel":{"presets":["es2015"]},"gitHead":"0794a9f66d46b906439a94cfea2645b11c46ee25","_id":"eosjs@6.0.3","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-a8DUrb4IxCVnauhe11APZqqGkASku6eg/CwEDqkYmxkwAYx/HnRRFycCdpkfd1WhdiENIPVMj8cP9Hef8A62XQ==","shasum":"955b679e0580a1ce5b7dd223d6d6f619c6184f1b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.0.3.tgz"},"maintainers":[{"email":"serg.metelin@gmail.com","name":"smetelin"},{"email":"jslim180@gmail.com","name":"jamesc"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-6.0.3.tgz_1516298919679_0.22733172425068915"},"directories":{}},"6.1.0":{"name":"eosjs","version":"6.1.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.1","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.1"},"babel":{"presets":["es2015"]},"gitHead":"c2e31e16ba2520befcb75d60ba41c2fea8d9c7e1","_id":"eosjs@6.1.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-4hyBqI/IjSOEkB8F8bUSnohuK8mULteWwMRnBWemO3HLT9Ul1SgjckhiYSKJyg5yXnS/SGq4fKwzKN4cnSE1Kg==","shasum":"966a58aded38a0a90f0ba1de3fb1e5a149f0e745","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.1.0.tgz"},"maintainers":[{"email":"serg.metelin@gmail.com","name":"smetelin"},{"email":"jslim180@gmail.com","name":"jamesc"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-6.1.0.tgz_1516734316106_0.5187818026170135"},"directories":{}},"6.1.1":{"name":"eosjs","version":"6.1.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.1","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.2"},"babel":{"presets":["es2015"]},"gitHead":"4b5de873ef70e36c7f5a86da1ad68aab3d060b3a","_id":"eosjs@6.1.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-t26tplzMgP2BM5Z9fYf29ZfHpQy/i6oyp+aFLMHSuKkdqmSTYbTYlurmgh2C4qKf42q81dcfmho4bYkEEw7wjw==","shasum":"4c7f8102de8d7e6261e0ad14e58255bee1a0cf2b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.1.1.tgz"},"maintainers":[{"email":"serg.metelin@gmail.com","name":"smetelin"},{"email":"jslim180@gmail.com","name":"jamesc"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-6.1.1.tgz_1517520528509_0.8247495868708938"},"directories":{}},"6.1.2":{"name":"eosjs","version":"6.1.2","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.1","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.3"},"babel":{"presets":["es2015"]},"gitHead":"6d7da477c4c68b05f4053755921b2d429e6ff928","_id":"eosjs@6.1.2","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-tglYsi/5zJqtKM3xDa1MDaYFBn+tJgwtySRd7B2oBwLczM6/tDYH75ID/T0+mNgGMfQi1y2mpRiFyC/ZprSw4Q==","shasum":"aa4fd425589f25fc24fa09e201f93a7388ada9c9","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.1.2.tgz"},"maintainers":[{"email":"serg.metelin@gmail.com","name":"smetelin"},{"email":"jslim180@gmail.com","name":"jamesc"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs-6.1.2.tgz_1517946576471_0.9332959055900574"},"directories":{}},"6.1.3":{"name":"eosjs","version":"6.1.3","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.1","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.3"},"babel":{"presets":["es2015"]},"gitHead":"f3d76f0eda796b2bc3d24fe5b346268bf9d1d44d","_id":"eosjs@6.1.3","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-yIyfM/7Y+mxZ8L+8VPSILSOfw0Du/KFLSe/s1A6IYQd4U8xSB07/D7ooYh7TVkNiUobkDCJk/0ujSkZRdKZJ2w==","shasum":"a11bb5c33123737566c4a28e20d6aef57f236860","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.1.3.tgz","fileCount":21,"unpackedSize":1876473},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_6.1.3_1518103702396_0.9128333178277299"},"_hasShrinkwrap":false},"6.1.4":{"name":"eosjs","version":"6.1.4","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.1","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.4"},"babel":{"presets":["es2015"]},"gitHead":"30176741cf611d86f66c059de92b14b23ac26293","_id":"eosjs@6.1.4","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-UpPiYXusxgpcjZKVcSwMA7rHd8fanEKXnerCZbDz4rumUlzD03YuEEwdf47OpnmBl24vkbII86MfHVIMRtjDRg==","shasum":"de8a228e601629681f507817788b7a10dbadb0ea","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.1.4.tgz","fileCount":21,"unpackedSize":1876606},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_6.1.4_1518108991087_0.8236132171314787"},"_hasShrinkwrap":false},"6.1.5":{"name":"eosjs","version":"6.1.5","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.1","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.5"},"babel":{"presets":["es2015"]},"gitHead":"f6c4545aab8d908dad7d5586929efa841223cc87","_id":"eosjs@6.1.5","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-Q8USDEQl2gkMdIaDL71MnKcOIoUGd6odoTKt12FruFCLbT4a2NgigCdPwGWnG1IZY16tjZkHJWPXnt6IAeOseg==","shasum":"ad309799444aba691a9b52b53b3d68ad4f8bd403","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.1.5.tgz","fileCount":21,"unpackedSize":1922456},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_6.1.5_1518476964901_0.5768412340771594"},"_hasShrinkwrap":false},"6.1.6":{"name":"eosjs","version":"6.1.6","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.1","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.6"},"babel":{"presets":["es2015"]},"gitHead":"da1873bb68b1a3a71fa9ed34a2795611bfe335e5","_id":"eosjs@6.1.6","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-hBnJO+G0cBk9dNGyYd8EiQkhyCAXsN58jgNILu3nOQIp97j3XbkmeGXyhjDeotGQYglR00CxegXCrH5azaFO+Q==","shasum":"15f1897448893a4d838e4c51d971445a6c2c0275","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.1.6.tgz","fileCount":21,"unpackedSize":1922456},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_6.1.6_1518634534191_0.03974795014286281"},"_hasShrinkwrap":false},"6.1.7":{"name":"eosjs","version":"6.1.7","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.1","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.6"},"babel":{"presets":["es2015"]},"gitHead":"d8d635e80d97d30bc0336e7c905980a2f973b8fa","_id":"eosjs@6.1.7","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-Xsw/6JuAV19CjhQ5J1x07FODt0AGuFiVg/BMdNhD17h0oNfyKDZkhmvR70eksqI1x/8A+kmPpUWfIbsGnI2Kmw==","shasum":"4718181fc46eca1433177428ccad7987fc1ceb48","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.1.7.tgz","fileCount":21,"unpackedSize":1924195},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_6.1.7_1519660488130_0.30752377431646427"},"_hasShrinkwrap":false},"6.1.8":{"name":"eosjs","version":"6.1.8","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.1","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.6"},"babel":{"presets":["es2015"]},"gitHead":"3a76b24e24dc9a8de3da6893337d0d3df7a577fb","_id":"eosjs@6.1.8","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-tdyoMdD3ruyYpQ7q0TO2siuE7wbFlFY6QpQ+VqyIaShj3dxVRKtF3sHEMuMq90ctw1p44pdDGgcYllXP3Tw28g==","shasum":"eb73cbf37f4ef027a90f26122759b0e1dff14078","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.1.8.tgz","fileCount":21,"unpackedSize":1928371},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_6.1.8_1519666285866_0.033351030492806855"},"_hasShrinkwrap":false},"7.0.0":{"name":"eosjs","version":"7.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^4.0.0","eosjs-ecc":"^3.0.0","eosjs-json":"^3.0.0","fcbuffer":"^2.1.0"},"babel":{"presets":["es2015"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// API, note: to use a local testnet, use Eos.Localnet()\nlet eos = Eos.Testnet()\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need eosd running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  eosd.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from this [schema](https://github.com/EOSIO/eosjs-json/blob/master/schema/generated.json).\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://www.npmjs.com/package/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n```bash\nnpm i binaryen\n```\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and eosd binary format will change between releases\nso you may need to start `eosd` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are exported from `eosjs` or may be used separately.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (eosd)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* eosjs-json [[Github](https://github.com/eosio/eosjs-json), [NPM](https://www.npmjs.org/package/eosjs-json)]\n  * Blockchain definitions (api method names, blockchain operations, etc)\n  * Maybe used by any language that can parse json\n  * Kept up-to-date\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Essential so the client knows what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n\nReact Native should work, create an issue if you find a bug.\n","readmeFilename":"README.md","gitHead":"59a95c8bef112a12c917fd5f9ded98973354d5a8","_id":"eosjs@7.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-Z3+cJoCGUSuR9SLROAL1BltDDT85inBnwPVNbSb0T1tWRwDwSTcpoEhr29GM3RdhqZAdYVhOKeBgVN0I8gTjGg==","shasum":"8fbe8671eb2d3758ef7f025865a22559a89f7846","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-7.0.0.tgz","fileCount":22,"unpackedSize":1932046},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_7.0.0_1520611229493_0.13677587852258055"},"_hasShrinkwrap":false},"7.0.1":{"name":"eosjs","version":"7.0.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^4.0.0","eosjs-ecc":"^3.0.1","eosjs-json":"^3.0.0","fcbuffer":"^2.1.0"},"babel":{"presets":["es2015"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// API, note: to use a local testnet, use Eos.Localnet()\nlet eos = Eos.Testnet()\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need eosd running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  eosd.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from this [schema](https://github.com/EOSIO/eosjs-json/blob/master/schema/generated.json).\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://www.npmjs.com/package/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n```bash\nnpm i binaryen\n```\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and eosd binary format will change between releases\nso you may need to start `eosd` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are exported from `eosjs` or may be used separately.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (eosd)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* eosjs-json [[Github](https://github.com/eosio/eosjs-json), [NPM](https://www.npmjs.org/package/eosjs-json)]\n  * Blockchain definitions (api method names, blockchain operations, etc)\n  * Maybe used by any language that can parse json\n  * Kept up-to-date\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Essential so the client knows what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n\nReact Native should work, create an issue if you find a bug.\n","readmeFilename":"README.md","gitHead":"1b5e78f4692e859da955c65c58707331d4dc7886","_id":"eosjs@7.0.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-u7i9Fb8eX7FAaLRnwlxx/RRs54ZdTLhZckgq0T01wvZHgYEtA3FD6ZKD3sUH9M/007e43yERZbnbHAkYa++54Q==","shasum":"efd32377790fd7a49d377b5cd6929cfeeb9cafc1","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-7.0.1.tgz","fileCount":22,"unpackedSize":1932046},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_7.0.1_1520619349908_0.8284061399415972"},"_hasShrinkwrap":false},"7.0.2":{"name":"eosjs","version":"7.0.2","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^4.0.0","eosjs-ecc":"^3.0.1","eosjs-json":"^3.0.0","fcbuffer":"^2.1.1"},"babel":{"presets":["es2015"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// API, note: to use a local testnet, use Eos.Localnet()\nlet eos = Eos.Testnet()\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need eosd running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  eosd.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from this [schema](https://github.com/EOSIO/eosjs-json/blob/master/schema/generated.json).\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://www.npmjs.com/package/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n```bash\nnpm i binaryen\n```\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and eosd binary format will change between releases\nso you may need to start `eosd` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are exported from `eosjs` or may be used separately.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (eosd)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* eosjs-json [[Github](https://github.com/eosio/eosjs-json), [NPM](https://www.npmjs.org/package/eosjs-json)]\n  * Blockchain definitions (api method names, blockchain operations, etc)\n  * Maybe used by any language that can parse json\n  * Kept up-to-date\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Essential so the client knows what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n\nReact Native should work, create an issue if you find a bug.\n","readmeFilename":"README.md","gitHead":"fb81d8861bdb6f08269ef71678724e67c1ce7134","_id":"eosjs@7.0.2","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-Z86VEyEOJ9IfXrLtAybLK/N8ukIWP3H6Xa71vs3Q2BEO36sEq2xnUyIwVSbyb4EiGm4gBFviIrEmS+vel6CT7g==","shasum":"b449b746ae9964b4e7ad601599bc574f44d17c75","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-7.0.2.tgz","fileCount":22,"unpackedSize":1932046},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_7.0.2_1520866168265_0.044654628701201515"},"_hasShrinkwrap":false},"6.1.9":{"name":"eosjs","version":"6.1.9","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.2","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.6"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"9ed2818c2a7be74a679763f49f7e2dd6f6f6780a","_id":"eosjs@6.1.9","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-P5fyYDBL0Zu6GPnjw9g1MRWLnmfp8+hGqMm2/+jVt6n2PREp86r0SK5WdB16aDH81/nYDRAqWmdyxaelHAZDCA==","shasum":"dd885f8d1e6d0872c5cc7fccecbd9d173791b100","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.1.9.tgz","fileCount":22,"unpackedSize":2226105},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_6.1.9_1520868726813_0.6634919774728651"},"_hasShrinkwrap":false},"6.1.10":{"name":"eosjs","version":"6.1.10","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.2","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.6"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"7c5a65c26188ecb40dd46b2d78db5e0fb27e4181","_id":"eosjs@6.1.10","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-fdP2kH+SwHSOZYsTyytKWt11pmvGQC9xiE1cB1ySINkgQe0w5h9sfEDh6vfOP1aDg9AEe+vRGe81IAJDhuzeAA==","shasum":"24c6afcce9125497adfae2b1bbee977ba5cedf32","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.1.10.tgz","fileCount":22,"unpackedSize":2226285},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_6.1.10_1521475258358_0.92099212733236"},"_hasShrinkwrap":false},"7.1.1":{"name":"eosjs","version":"7.1.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublishOnly":"npm run prepublishOnly_lib && npm run prepublishOnly_test && npm run docs","prepublishOnly_lib":"babel src --out-dir lib","prepublishOnly_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos src/index.js","build":"npm run browserify && npm run docs","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^4.0.0","eosjs-ecc":"^3.0.2","eosjs-json":"^3.0.1","fcbuffer":"^2.1.2"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// API, note: to use a local testnet, use Eos.Localnet()\nlet eos = Eos.Testnet()\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need eosd running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  eosd.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from this [schema](https://github.com/EOSIO/eosjs-json/blob/master/schema/generated.json).\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://www.npmjs.com/package/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n```bash\nnpm i binaryen\n```\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and eosd binary format will change between releases\nso you may need to start `eosd` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n\n// Creating the instance `eos` means that common blockchain data-structures are\n// available for a given network (Testnet, Mainnet, etc).\neos = Eos.Localnet()\n```\n\n* Fcbuffer\n\nThe `eos` instance can provide more convenient serialization:\n\n```javascript\n// 'nonce' is a struct but could be any type or struct like: uint8 or transaction\nnonce = {value: '..'}\nnonceBuffer = eos.fc.toBuffer('nonce', nonce)\nassert.deepEqual(nonce, eos.fc.fromBuffer('nonce', nonceBuffer))\n\n// Serialization for a smart-contract's Abi:\neos.contract('currency', (error, c) => currency = c)\nissue = {to: 'inita', quantity: '1.0000 CUR'}\nissueBuffer = currency.fc.toBuffer('issue', issue)\nassert.deepEqual(issue, eos.fc.fromBuffer('issue', issueBuffer))\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are exported from `eosjs` or may be used separately.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (eosd)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* eosjs-json [[Github](https://github.com/eosio/eosjs-json), [NPM](https://www.npmjs.org/package/eosjs-json)]\n  * Blockchain definitions (api method names, blockchain operations, etc)\n  * Maybe used by any language that can parse json\n  * Kept up-to-date\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Essential so the client knows what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n\nReact Native should work, create an issue if you find a bug.\n","readmeFilename":"README.md","gitHead":"2929d04591a8938d35fb25e222dbd74646b3ab8c","_id":"eosjs@7.1.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-YPkuLUteGaIOnYPotoSwSaPeZdes3i5n+LoMlXyT0oek/SNnL14gXyGwB2U3lb31nFXS8vSWKAJpz1Wtv51FZg==","shasum":"9c329446cbcd0aeefae8bd69e58672b1eb1fef04","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-7.1.1.tgz","fileCount":28,"unpackedSize":2233491},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_7.1.1_1521815540988_0.10071387771021079"},"_hasShrinkwrap":false},"6.1.11":{"name":"eosjs","version":"6.1.11","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublish":"npm run prepublish_lib && npm run prepublish_test && npm run docs","prepublish_lib":"babel src --out-dir lib","prepublish_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build":"npm run prepublish && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^3.0.2","eosjs-ecc":"^2.0.1","eosjs-json":"^2.0.3","fcbuffer":"^2.0.6"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"7aefccc09d5e926b968c1e0db7e87169516946bf","_id":"eosjs@6.1.11","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-8eiJYwjs3LeYsgCHSSVXz6yoNMna68yt6DxPkafpcf9HGlt844T/Kpo3pxToVFUg7k7K6ArQzjf2R8fUkQpjqg==","shasum":"eef85f299c072f92346d3aedf77366eaecc3a26f","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-6.1.11.tgz","fileCount":23,"unpackedSize":3348377},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_6.1.11_1522100898580_0.7060936983731012"},"_hasShrinkwrap":false},"7.1.2":{"name":"eosjs","version":"7.1.2","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublishOnly":"npm run prepublishOnly_lib && npm run prepublishOnly_test && npm run docs","prepublishOnly_lib":"babel src --out-dir lib","prepublishOnly_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build":"npm run prepublishOnly && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^4.0.0","eosjs-ecc":"^3.0.2","eosjs-json":"^3.0.1","fcbuffer":"^2.1.2"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// API, note: to use a local testnet, use Eos.Localnet()\nlet eos = Eos.Testnet()\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need eosd running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  eosd.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from this [schema](https://github.com/EOSIO/eosjs-json/blob/master/schema/generated.json).\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://www.npmjs.com/package/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n```bash\nnpm i binaryen\n```\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and eosd binary format will change between releases\nso you may need to start `eosd` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n\n// Creating the instance `eos` means that common blockchain data-structures are\n// available for a given network (Testnet, Mainnet, etc).\neos = Eos.Localnet()\n```\n\n* Fcbuffer\n\nThe `eos` instance can provide more convenient serialization:\n\n```javascript\n// 'nonce' is a struct but could be any type or struct like: uint8 or transaction\nnonce = {value: '..'}\nnonceBuffer = eos.fc.toBuffer('nonce', nonce)\nassert.deepEqual(nonce, eos.fc.fromBuffer('nonce', nonceBuffer))\n\n// Serialization for a smart-contract's Abi:\neos.contract('currency', (error, c) => currency = c)\nissue = {to: 'inita', quantity: '1.0000 CUR'}\nissueBuffer = currency.fc.toBuffer('issue', issue)\nassert.deepEqual(issue, eos.fc.fromBuffer('issue', issueBuffer))\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are exported from `eosjs` or may be used separately.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (eosd)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* eosjs-json [[Github](https://github.com/eosio/eosjs-json), [NPM](https://www.npmjs.org/package/eosjs-json)]\n  * Blockchain definitions (api method names, blockchain operations, etc)\n  * Maybe used by any language that can parse json\n  * Kept up-to-date\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Essential so the client knows what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n\nReact Native should work, create an issue if you find a bug.\n","readmeFilename":"README.md","gitHead":"37d2d5a1ba1a87d6e0d6a60ed42535f59156007d","_id":"eosjs@7.1.2","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-6CNvMysjBSiKIjtnpYBtzQ6AK+qcxJMzSDO79rzPKK0fduAM5t52hKhJ85cgQ55atnMHsrJz3gJna+6PRNVV3w==","shasum":"d6f5213257568cf0b2b142316de4cc9d657ca05d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-7.1.2.tgz","fileCount":28,"unpackedSize":3355565},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_7.1.2_1522163515368_0.6790560473625968"},"_hasShrinkwrap":false},"7.1.3":{"name":"eosjs","version":"7.1.3","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","prepublishOnly":"npm run prepublishOnly_lib && npm run prepublishOnly_test && npm run docs","prepublishOnly_lib":"babel src --out-dir lib","prepublishOnly_test":"mocha --use_strict lib/*.test.js","browserify":"mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build":"npm run prepublishOnly && npm run browserify","build_browser_test":"mkdir -p dist && browserify -o dist/mocha-test.js src/*.test.js","docs":"jsdoc2md src/format.js > docs/format.md"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^4.0.0","eosjs-ecc":"^3.0.2","eosjs-json":"^3.0.1","fcbuffer":"^2.1.4"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n### The current release of eosjs is built for the last stable eos build Dawn 2.x\nYou can find the current stable branch of eos here: https://github.com/EOSIO/eos/tree/dawn-2.x\n\nA Dawn 3.x pre-release version of eosjs is available:\n`npm i eosjs@dawn3`\n\nYou can run the latest Dawn 3.x node from the default master branch at: http://github.com/eosio/eos\n\n| Version | [EOSIO/eosjs](/EOSIO/eosjs) | [Npm](https://www.npmjs.com/package/eosjs) | [EOSIO/eos](/EOSIO/eos) | [Docker](https://hub.docker.com/r/eosio/eos/) | Node |\n| --- | --- | --- | --- | --- | --- |\n| dawn3 | branch: master | `npm install eosjs@dawn3` | branch: master | eosio/eos:20180322 | [local docker](https://github.com/EOSIO/eosjs/tree/master/docker) |\n| dawn2 | branch: dawn2 | `npm install eosjs` | branch: dawn-2.x | eosio/eos:dawn2x | http or [https://t1readonly.eos.io](https://t1readonly.eos.io/v1/chain/get_info) |\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// eos = Eos.Localnet() // 127.0.0.1:8888\neos = Eos.Testnet() // testnet at eos.io\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need eosd running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  eosd.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from this [schema](https://github.com/EOSIO/eosjs-json/blob/master/schema/generated.json).\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://www.npmjs.com/package/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n```bash\nnpm i binaryen\n```\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and eosd binary format will change between releases\nso you may need to start `eosd` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n\n// Creating the instance `eos` means that common blockchain data-structures are\n// available for a given network (Testnet, Mainnet, etc).\neos = Eos.Localnet()\n```\n\n* Fcbuffer\n\nThe `eos` instance can provide more convenient serialization:\n\n```javascript\n// 'nonce' is a struct but could be any type or struct like: uint8 or transaction\nnonce = {value: '..'}\nnonceBuffer = eos.fc.toBuffer('nonce', nonce)\nassert.deepEqual(nonce, eos.fc.fromBuffer('nonce', nonceBuffer))\n\n// Serialization for a smart-contract's Abi:\neos.contract('currency', (error, c) => currency = c)\nissue = {to: 'inita', quantity: '1.0000 CUR'}\nissueBuffer = currency.fc.toBuffer('issue', issue)\nassert.deepEqual(issue, eos.fc.fromBuffer('issue', issueBuffer))\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are exported from `eosjs` or may be used separately.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (eosd)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* eosjs-json [[Github](https://github.com/eosio/eosjs-json), [NPM](https://www.npmjs.org/package/eosjs-json)]\n  * Blockchain definitions (api method names, blockchain operations, etc)\n  * Maybe used by any language that can parse json\n  * Kept up-to-date\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Essential so the client knows what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n\nReact Native should work, create an issue if you find a bug.\n","readmeFilename":"README.md","gitHead":"b13d3ad8c68cc958df4491446a723c18e851c598","_id":"eosjs@7.1.3","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-Cez3kQ6kyKAkjBk+RlhAY4y3FZp/oKEMudmZxxQvCCve9zVLKzvj+JyVoCaIvIvW94W4u48Q8+huPFTr+ClHCw==","shasum":"191d371dada9b4a3473dbac563fc0930be452430","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-7.1.3.tgz","fileCount":31,"unpackedSize":2248140},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_7.1.3_1522937448123_0.13111881007531978"},"_hasShrinkwrap":false},"7.1.4":{"name":"eosjs","version":"7.1.4","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^4.0.1","eosjs-ecc":"^3.0.2","eosjs-json":"^3.0.1","fcbuffer":"^2.1.4"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n### The current release of eosjs is built for the last stable eos build Dawn 2.x\nYou can find the current stable branch of eos here: https://github.com/EOSIO/eos/tree/dawn-2.x\n\nA Dawn 3.x pre-release version of eosjs is available:\n`npm i eosjs@dawn3`\n\nYou can run the latest Dawn 3.x node from the default master branch at: http://github.com/eosio/eos\n\n| Version | [EOSIO/eosjs](/EOSIO/eosjs) | [Npm](https://www.npmjs.com/package/eosjs) | [EOSIO/eos](/EOSIO/eos) | [Docker](https://hub.docker.com/r/eosio/eos/) | Node |\n| --- | --- | --- | --- | --- | --- |\n| dawn3 | branch: master | `npm install eosjs@dawn3` | branch: master | eosio/eos:20180322 | [local docker](https://github.com/EOSIO/eosjs/tree/master/docker) |\n| dawn2 | branch: dawn2 | `npm install eosjs` | branch: dawn-2.x | eosio/eos:dawn2x | http or [https://t1readonly.eos.io](https://t1readonly.eos.io/v1/chain/get_info) |\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// eos = Eos.Localnet() // 127.0.0.1:8888\neos = Eos.Testnet() // testnet at eos.io\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need eosd running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  eosd.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from this [schema](https://github.com/EOSIO/eosjs-json/blob/master/schema/generated.json).\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://www.npmjs.com/package/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n```bash\nnpm i binaryen\n```\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and eosd binary format will change between releases\nso you may need to start `eosd` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n\n// Creating the instance `eos` means that common blockchain data-structures are\n// available for a given network (Testnet, Mainnet, etc).\neos = Eos.Localnet()\n```\n\n* Fcbuffer\n\nThe `eos` instance can provide more convenient serialization:\n\n```javascript\n// 'nonce' is a struct but could be any type or struct like: uint8 or transaction\nnonce = {value: '..'}\nnonceBuffer = eos.fc.toBuffer('nonce', nonce)\nassert.deepEqual(nonce, eos.fc.fromBuffer('nonce', nonceBuffer))\n\n// Serialization for a smart-contract's Abi:\neos.contract('currency', (error, c) => currency = c)\nissue = {to: 'inita', quantity: '1.0000 CUR'}\nissueBuffer = currency.fc.toBuffer('issue', issue)\nassert.deepEqual(issue, eos.fc.fromBuffer('issue', issueBuffer))\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are exported from `eosjs` or may be used separately.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (eosd)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* eosjs-json [[Github](https://github.com/eosio/eosjs-json), [NPM](https://www.npmjs.org/package/eosjs-json)]\n  * Blockchain definitions (api method names, blockchain operations, etc)\n  * Maybe used by any language that can parse json\n  * Kept up-to-date\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Essential so the client knows what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n\nReact Native should work, create an issue if you find a bug.\n","readmeFilename":"README.md","gitHead":"2d009b5464f1fa0519b00e920e5048c97b75fc9e","_id":"eosjs@7.1.4","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-CMOE4/VXvkl6O1+VW+N3ajpz0tpJhOu6hwl4rqm5lrHx/hAsFkHa2paNX1B+91MI17oI/AxXUH/nTKcwbAMZgA==","shasum":"040866508b6c1f9852f7a7e2c630a5c76abb6d06","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-7.1.4.tgz","fileCount":30,"unpackedSize":1288481},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_7.1.4_1522950339872_0.18307528106680837"},"_hasShrinkwrap":false},"7.1.5":{"name":"eosjs","version":"7.1.5","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^4.0.1","eosjs-ecc":"^3.0.2","eosjs-json":"^3.0.2","fcbuffer":"^2.1.4"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n### The current release of eosjs is built for the last stable eos build Dawn 2.x\nYou can find the current stable branch of eos here: https://github.com/EOSIO/eos/tree/dawn-2.x\n\nA Dawn 3.x pre-release version of eosjs is available:\n`npm i eosjs@dawn3`\n\nYou can run the latest Dawn 3.x node from the default master branch at: http://github.com/eosio/eos\n\n| Version | [EOSIO/eosjs](/EOSIO/eosjs) | [Npm](https://www.npmjs.com/package/eosjs) | [EOSIO/eos](/EOSIO/eos) | [Docker](https://hub.docker.com/r/eosio/eos/) | Node |\n| --- | --- | --- | --- | --- | --- |\n| dawn3 | branch: master | `npm install eosjs@dawn3` | branch: master | eosio/eos:20180328 | [local docker](https://github.com/EOSIO/eosjs/tree/master/docker) |\n| dawn2 | branch: dawn2 | `npm install eosjs` | branch: dawn-2.x | eosio/eos:dawn2x | http or [https://t1readonly.eos.io](https://t1readonly.eos.io/v1/chain/get_info) |\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// eos = Eos.Localnet() // 127.0.0.1:8888\neos = Eos.Testnet() // testnet at eos.io\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need eosd running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  eosd.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from this [schema](https://github.com/EOSIO/eosjs-json/blob/master/schema/generated.json).\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://www.npmjs.com/package/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n```bash\nnpm i binaryen\n```\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and eosd binary format will change between releases\nso you may need to start `eosd` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n\n// Creating the instance `eos` means that common blockchain data-structures are\n// available for a given network (Testnet, Mainnet, etc).\neos = Eos.Localnet()\n```\n\n* Fcbuffer\n\nThe `eos` instance can provide more convenient serialization:\n\n```javascript\n// 'nonce' is a struct but could be any type or struct like: uint8 or transaction\nnonce = {value: '..'}\nnonceBuffer = eos.fc.toBuffer('nonce', nonce)\nassert.deepEqual(nonce, eos.fc.fromBuffer('nonce', nonceBuffer))\n\n// Serialization for a smart-contract's Abi:\neos.contract('currency', (error, c) => currency = c)\nissue = {to: 'inita', quantity: '1.0000 CUR'}\nissueBuffer = currency.fc.toBuffer('issue', issue)\nassert.deepEqual(issue, eos.fc.fromBuffer('issue', issueBuffer))\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are exported from `eosjs` or may be used separately.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (eosd)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* eosjs-json [[Github](https://github.com/eosio/eosjs-json), [NPM](https://www.npmjs.org/package/eosjs-json)]\n  * Blockchain definitions (api method names, blockchain operations, etc)\n  * Maybe used by any language that can parse json\n  * Kept up-to-date\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Essential so the client knows what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n\nReact Native should work, create an issue if you find a bug.\n","readmeFilename":"README.md","gitHead":"a148dc8c9a5535aafa81edea3c2586914c7edc0f","_id":"eosjs@7.1.5","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-EXbeIL62G/Z0E0JVERvvluF7ZzDA8+wUnIsW/eH/TGxvDZtUHpHaMqXcJyvq18TQCwWxaceWB3A0pPZRJuoUxg==","shasum":"bebe8c0897e96326b99c861462773f90d9baf14b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-7.1.5.tgz","fileCount":30,"unpackedSize":1289805},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_7.1.5_1523035459297_0.5840311092965735"},"_hasShrinkwrap":false},"7.1.6":{"name":"eosjs","version":"7.1.6","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^4.0.2","eosjs-ecc":"^3.0.2","eosjs-json":"^3.0.2","fcbuffer":"^2.1.4"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n### The current release of eosjs is built for the last stable eos build Dawn 2.x\nYou can find the current stable branch of eos here: https://github.com/EOSIO/eos/tree/dawn-2.x\n\nA Dawn 3.x pre-release version of eosjs is available:\n`npm i eosjs@dawn3`\n\nYou can run the latest Dawn 3.x node from the default master branch at: http://github.com/eosio/eos\n\n| Version | [EOSIO/eosjs](/EOSIO/eosjs) | [Npm](https://www.npmjs.com/package/eosjs) | [EOSIO/eos](/EOSIO/eos) | [Docker](https://hub.docker.com/r/eosio/eos/) | Node |\n| --- | --- | --- | --- | --- | --- |\n| dawn3 | branch: master | `npm install eosjs@dawn3` | branch: master | eosio/eos:20180328 | [local docker](https://github.com/EOSIO/eosjs/tree/master/docker) |\n| dawn2 | branch: dawn2 | `npm install eosjs` | branch: dawn-2.x | eosio/eos:dawn2x | http or [https://t1readonly.eos.io](https://t1readonly.eos.io/v1/chain/get_info) |\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// eos = Eos.Localnet() // 127.0.0.1:8888\neos = Eos.Testnet() // testnet at eos.io\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need eosd running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  eosd.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from this [schema](https://github.com/EOSIO/eosjs-json/blob/master/schema/generated.json).\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://www.npmjs.com/package/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n```bash\nnpm i binaryen\n```\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and eosd binary format will change between releases\nso you may need to start `eosd` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n\n// Creating the instance `eos` means that common blockchain data-structures are\n// available for a given network (Testnet, Mainnet, etc).\neos = Eos.Localnet()\n```\n\n* Fcbuffer\n\nThe `eos` instance can provide more convenient serialization:\n\n```javascript\n// 'nonce' is a struct but could be any type or struct like: uint8 or transaction\nnonce = {value: '..'}\nnonceBuffer = eos.fc.toBuffer('nonce', nonce)\nassert.deepEqual(nonce, eos.fc.fromBuffer('nonce', nonceBuffer))\n\n// Serialization for a smart-contract's Abi:\neos.contract('currency', (error, c) => currency = c)\nissue = {to: 'inita', quantity: '1.0000 CUR'}\nissueBuffer = currency.fc.toBuffer('issue', issue)\nassert.deepEqual(issue, eos.fc.fromBuffer('issue', issueBuffer))\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are exported from `eosjs` or may be used separately.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (eosd)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* eosjs-json [[Github](https://github.com/eosio/eosjs-json), [NPM](https://www.npmjs.org/package/eosjs-json)]\n  * Blockchain definitions (api method names, blockchain operations, etc)\n  * Maybe used by any language that can parse json\n  * Kept up-to-date\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Essential so the client knows what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n\nReact Native should work, create an issue if you find a bug.\n","readmeFilename":"README.md","gitHead":"2db0996e94d9b7ad7cd68bd5e2a3ab5c1a1b1f40","_id":"eosjs@7.1.6","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-v2tZJ4EZH14t0mnMCagGupG/D1bJd5gEYy4INw9RutrNZEQTPkptFA5I9WJeyfEd1xnHLTG2Wr2BTlY1RRd2bA==","shasum":"843f2c96e8f272dde972e01a380d2c88df8fcecf","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-7.1.6.tgz","fileCount":30,"unpackedSize":1290423},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_7.1.6_1523543472287_0.5301091573059331"},"_hasShrinkwrap":false},"8.0.0":{"name":"eosjs","version":"8.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^4.0.3","eosjs-ecc":"^3.0.2","eosjs-json":"^4.0.1","fcbuffer":"^2.1.5"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n### The current release of eosjs is built for the last stable eos build Dawn 2.x\nYou can find the current stable branch of eos here: https://github.com/EOSIO/eos/tree/dawn-2.x\n\nA Dawn 3.x pre-release version of eosjs is available:\n`npm i eosjs@dawn3`\n\nYou can run the latest Dawn 3.x node from the default master branch at: http://github.com/eosio/eos\n\n| Version | [EOSIO/eosjs](/EOSIO/eosjs) | [Npm](https://www.npmjs.com/package/eosjs) | [EOSIO/eos](/EOSIO/eos) | [Docker](https://hub.docker.com/r/eosio/eos/) | Node |\n| --- | --- | --- | --- | --- | --- |\n| dawn3 | branch: master | `npm install eosjs@dawn3` | branch: master | eosio/eos:dawn3x | [local docker](https://github.com/EOSIO/eosjs/tree/master/docker) |\n| dawn2 | branch: dawn2 | `npm install eosjs` | branch: dawn-2.x | eosio/eos:dawn2x | http or [https://t1readonly.eos.io](https://t1readonly.eos.io/v1/chain/get_info) |\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// eos = Eos.Localnet() // 127.0.0.1:8888\neos = Eos.Testnet() // testnet at eos.io\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need eosd running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  eosd.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from this [schema](https://github.com/EOSIO/eosjs-json/blob/master/schema/generated.json).\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://www.npmjs.com/package/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n```bash\nnpm i binaryen\n```\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and eosd binary format will change between releases\nso you may need to start `eosd` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n\n// Creating the instance `eos` means that common blockchain data-structures are\n// available for a given network (Testnet, Mainnet, etc).\neos = Eos.Localnet()\n```\n\n* Fcbuffer\n\nThe `eos` instance can provide more convenient serialization:\n\n```javascript\n// 'nonce' is a struct but could be any type or struct like: uint8 or transaction\nnonce = {value: '..'}\nnonceBuffer = eos.fc.toBuffer('nonce', nonce)\nassert.deepEqual(nonce, eos.fc.fromBuffer('nonce', nonceBuffer))\n\n// Serialization for a smart-contract's Abi:\neos.contract('currency', (error, c) => currency = c)\nissue = {to: 'inita', quantity: '1.0000 CUR', memo: 'memo'}\nissueBuffer = currency.fc.toBuffer('issue', issue)\nassert.deepEqual(issue, eos.fc.fromBuffer('issue', issueBuffer))\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are exported from `eosjs` or may be used separately.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (eosd)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* eosjs-json [[Github](https://github.com/eosio/eosjs-json), [NPM](https://www.npmjs.org/package/eosjs-json)]\n  * Blockchain definitions (api method names, blockchain operations, etc)\n  * Maybe used by any language that can parse json\n  * Kept up-to-date\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Essential so the client knows what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build_browser\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n\nReact Native should work, create an issue if you find a bug.\n","readmeFilename":"README.md","gitHead":"168479d683471f328b75d9e07997fbea604e5f35","_id":"eosjs@8.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-HOyrDzy4Cp6QbJfD77BoQ1nWxzTpcJBRUDbyRlzIRmFl6eogtFspLkR1IALBvoZDWBuVhDmrHt0eEW8HJwkI2A==","shasum":"9e1f9c1caba03988a137e2744d8955522469f217","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-8.0.0.tgz","fileCount":30,"unpackedSize":1290146,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa14ypCRA9TVsSAnZWagAAynQP/ixAnnj0zGVXk95+uz0Q\nMrkYDTDhDKVqJQY48TMLyjZX1bUcfmJP8bq0c0NIdrPJJiEtZyC/3kZZ6PqT\nzzU/kcokJdthYsyCDHxJvmLeTflzqu/0kkxsQkr1uCgqZ2JlERTOdaen2qqY\nmMnSv6A7I1MJmvZfI4NVG4F/jNeumt1HM7cTfthzIQJyD+Q1OnbQfgmNJhVH\n0rlkLNpHeMsuhjPgjcTrmYi5Y29004YEcuY5REqphdLmUEscwmbAMwEo5EEI\n95xXstWSAjjXu1N1Dl+nnLybaxUbsf1zgLev9p4I3WZ0zKl9L81AAmJ8eWC4\nPTZJl8s1bDwg8Twml2EW4hv2VtD2p4Twbs1m/SeZWQDEYnVMGyokMAnm1Euj\ntwSEYMQzMxTbAveBww3Cs5TeYZ3B9ToVAwbRs4a9OyJWEviSAHtRyc3esaU7\nyMmi+knVnQX9BkkGviKt3fmizsdkFE3sgX/CY/olxV9SHy2LgovwprVmBSdC\n8zN1osTXHllJ439DvxmLn9uM5EoyoDo5gAb4DB1K19RiAVNac4kybANMCxXf\n+nWJecnxTD7Yr3fBExjcbkQL1WYbVuimr4ye+xtryTgn25k+1MIrTl72NpZS\n1whsX41NZbHVeeck7E0iVQDmb9P4zpM1AGVZ1oZktMhV6Ofbfeq+BoXcf8+5\npt/y\r\n=toaK\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_8.0.0_1524075689084_0.2570420192526295"},"_hasShrinkwrap":false},"8.0.1":{"name":"eosjs","version":"8.0.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-preset-es2015":"^6.24.1","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","browserify":"^14.4.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^4.0.3","eosjs-ecc":"^3.0.2","eosjs-json":"^4.0.2","fcbuffer":"^2.1.5"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n### The current release of eosjs is built for the last stable eos build Dawn 2.x\nYou can find the current stable branch of eos here: https://github.com/EOSIO/eos/tree/dawn-2.x\n\nA Dawn 3.x pre-release version of eosjs is available:\n`npm i eosjs@dawn3`\n\nYou can run the latest Dawn 3.x node from the default master branch at: http://github.com/eosio/eos\n\n| Version | [EOSIO/eosjs](/EOSIO/eosjs) | [Npm](https://www.npmjs.com/package/eosjs) | [EOSIO/eos](/EOSIO/eos) | [Docker](https://hub.docker.com/r/eosio/eos/) | Node |\n| --- | --- | --- | --- | --- | --- |\n| dawn3 | branch: master | `npm install eosjs@dawn3` | branch: master | eosio/eos:dawn3x | [local docker](https://github.com/EOSIO/eosjs/tree/master/docker) |\n| dawn2 | branch: dawn2 | `npm install eosjs` | branch: dawn-2.x | eosio/eos:dawn2x | http or [https://t1readonly.eos.io](https://t1readonly.eos.io/v1/chain/get_info) |\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// eos = Eos.Localnet() // 127.0.0.1:8888\neos = Eos.Testnet() // testnet at eos.io\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need eosd running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-json/blob/master/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  eosd.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from the [eosio](https://github.com/EOSIO/eosjs-json/blob/master/schema/eosio.json) schema.\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://www.npmjs.com/package/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n```bash\nnpm i binaryen\n```\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and eosd binary format will change between releases\nso you may need to start `eosd` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n\n// Creating the instance `eos` means that common blockchain data-structures are\n// available for a given network (Testnet, Mainnet, etc).\neos = Eos.Localnet()\n```\n\n* Fcbuffer\n\nThe `eos` instance can provide more convenient serialization:\n\n```javascript\n// 'nonce' is a struct but could be any type or struct like: uint8 or transaction\nnonce = {value: '..'}\nnonceBuffer = eos.fc.toBuffer('nonce', nonce)\nassert.deepEqual(nonce, eos.fc.fromBuffer('nonce', nonceBuffer))\n\n// Serialization for a smart-contract's Abi:\neos.contract('currency', (error, c) => currency = c)\nissue = {to: 'inita', quantity: '1.0000 CUR', memo: 'memo'}\nissueBuffer = currency.fc.toBuffer('issue', issue)\nassert.deepEqual(issue, currency.fc.fromBuffer('issue', issueBuffer))\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are exported from `eosjs` or may be used separately.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (eosd)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* eosjs-json [[Github](https://github.com/eosio/eosjs-json), [NPM](https://www.npmjs.org/package/eosjs-json)]\n  * Blockchain definitions (api method names, blockchain operations, etc)\n  * Maybe used by any language that can parse json\n  * Kept up-to-date\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Essential so the client knows what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build_browser\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n\nReact Native should work, create an issue if you find a bug.\n","readmeFilename":"README.md","gitHead":"6cd2eaa6642d25aabf91d59070d2697996ee3868","_id":"eosjs@8.0.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-s/k+AkDi4H9An6se500REsrMN1Kv+eXQKXHJJ2Ua7RWMCUBWyLo7MxcJIP0kWrQsZ1N/tYNP6bry0M0xV+Cj/A==","shasum":"4df55cdd6abc9ffbb58d1b8d5978107f047f1b02","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-8.0.1.tgz","fileCount":18,"unpackedSize":119409,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa320KCRA9TVsSAnZWagAA8/IP/A6KRL6ZmUyN7UMlSjRb\nzVCgOSAvjQaCKvzDfYY0sGQs0PQbAdY+UEh5eXas5pYdcdfJcOVwZycSSPTm\n7Tt0xJhyXq6nOvddNEY8zycgd6qPIkSc65rhGgA2b38cDLVinzYHkbPdbaKX\nBJNo2h2slvniPf7qxAuww1lyEmjMhmKIlLh0kmkszKbUCrbxK+vKfOclujCE\n/dO15dipgAfxxCh2zMRjgc6PmlMFtWtuigcxoDGg7l2WyaTUX+0FssC+U39p\n0K9V++4kN9GD+f+Mn1itLeSnx91s/WzPA4Fae5xZsZ5JTUAFjlC8YvGTw6cq\nyv5bzxd1I8Ohxp5BLMsncPsYKrNqmTgAp9lhjlzUXrfvbQg4PHWUgScohLfY\npWduPhuD0yCMOLDT1b+PrDPVdn8Kao7OovL9mShJ+LA6pyQH5ax/ZgvKe4Co\ndHZwdF2yqxFDzeaKHDkkZroEccpdTfnqgVSbIJjnAuiq7/HU9ZGOLR5tJ0Gc\nbDo7e7hRkH3pju6wmRFupgSwGbTLVKofnlhZvY7XASyBx4MiEgAMeYeSeM9l\nCT6Bhga5MIbnMTWuLhxo7YvhbzJpDrzhccAOaqiRDvpz5vukQR16l6KGtpZV\nqQbLGxzYzGGuhWT7JfY+QrhIsbhbb007uODOOhVW+fmcPjn8gdK/pzwO7uyT\nrHD/\r\n=mtkw\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_8.0.1_1524591881180_0.8243685300302275"},"_hasShrinkwrap":false},"9.0.0":{"name":"eosjs","version":"9.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^5.0.0","eosjs-ecc":"^3.0.2","fcbuffer":"^2.1.5"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n### The current public Testnet release of eosjs is built for Dawn 2.x\nYou can find the current stable branch of eos here: https://github.com/EOSIO/eos/tree/dawn-2.x\n\nNewer releases are available by running your own EOS node:\n\n| Version | [EOSIO/eosjs](/EOSIO/eosjs) | [Npm](https://www.npmjs.com/package/eosjs) | [EOSIO/eos](/EOSIO/eos) | [Docker](https://hub.docker.com/r/eosio/eos/) | Node |\n| --- | --- | --- | --- | --- | --- |\n| DAWN-2018-04-23-ALPHA | branch: DAWN-2018-04-23-ALPHA | `npm install eosjs@dawn3` (version 9) | branch: DAWN-2018-04-23-ALPHA | eosio/eos:DAWN-2018-04-23-ALPHA | [local docker](https://github.com/EOSIO/eosjs/tree/DAWN-2018-04-23-ALPHA/docker) |\n| dawn3 | branch: master | `npm install eosjs@8` (version 8) | branch: master | eosio/eos:dawn3x | [local docker](https://github.com/EOSIO/eosjs/tree/master/docker) |\n| dawn2 | branch: dawn2 | `npm install eosjs` | branch: dawn-2.x | eosio/eos:dawn2x | http or [https://t1readonly.eos.io](https://t1readonly.eos.io/v1/chain/get_info) |\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// eos = Eos.Localnet() // 127.0.0.1:8888\neos = Eos.Testnet() // testnet at eos.io\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need nodeos running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-api/blob/master/src/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-api/blob/master/src/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  nodeos.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from the [eosio_system](https://github.com/EOSIO/eosjs/blob/master/src/schema/eosio_system.json) schema.\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://github.com/eosio/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n\n```bash\nnpm i binaryen@37.0.0\n```\n\nAlthough the EOS back-end does seek to be up-to-date and have\nbinaryen backwards compatibility, new versions of binaryen may be\n[problematic](https://github.com/EOSIO/eos/issues/2187).\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen@37.0.0\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and nodeos binary format will change between releases\nso you may need to start `nodeos` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n\n// Creating the instance `eos` means that common blockchain data-structures are\n// available for a given network (Testnet, Mainnet, etc).\neos = Eos.Localnet()\n```\n\n* Fcbuffer\n\nThe `eos` instance can provide more convenient serialization:\n\n```javascript\n// 'nonce' is a struct but could be any type or struct like: uint8 or transaction\nnonce = {value: '..'}\nnonceBuffer = eos.fc.toBuffer('nonce', nonce)\nassert.deepEqual(nonce, eos.fc.fromBuffer('nonce', nonceBuffer))\n\n// Serialization for a smart-contract's Abi:\neos.contract('currency', (error, c) => currency = c)\nissue = {to: 'inita', quantity: '1.0000 CUR', memo: 'memo'}\nissueBuffer = currency.fc.toBuffer('issue', issue)\nassert.deepEqual(issue, currency.fc.fromBuffer('issue', issueBuffer))\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are integrated into eosjs seemlessly so you probably do not\nneed to use them directly.  They are exported here giving more API access\nfrom `eosjs` or may be used separately.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (nodeos)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* json {[api](https://github.com/EOSIO/eosjs-api/blob/master/src/api), [schema](https://github.com/EOSIO/eosjs/blob/master/src/schema)},\n  * Blockchain definitions (api method names, blockchain schema)\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Allows client to know what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build_browser\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode 6+ and browser (browserify, webpack, etc)\n\nReact Native should work, create an issue if you find a bug.\n","readmeFilename":"README.md","gitHead":"54f3050d9742fd9deda3b72a3726d8fd7413e5fb","_id":"eosjs@9.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-pLH7oTF49Rd2sw3vJeC1Wp5MieGSCHw1dorwafYvMjFnYW+VFdA5gJJKDaUD1n0pxh4FykVrdavWS0hYKaSU0w==","shasum":"ec2c2dab1c67b2e47429a551bcd17edcd548fb73","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-9.0.0.tgz","fileCount":20,"unpackedSize":129677,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa40RkCRA9TVsSAnZWagAAjWgQAKEmBtsx0fvUwAdtZEcD\nzu+K72VbMmOrYJHxzG/i1YScO/MfIf4MfL6K+152mEXI7VAjXAmxkvqgbALF\nj9+1LyHzpkFy4yPls4yPQsyBEC4wPzuOzHmqlss3KrI7x89Ov6lR9YxqyFoT\ngzNBbX259UI6rN7KGzjw2YW1EjRLIUDEuH5hagNNaPXwWppzw2Z0yhJcNBOj\njf3Xb89LWq6YDY8cshbKk9yILw0fq5VsUEfzTuVxTSrVogJSxoIdZFY0bkAY\nQrJ2+NFCPXDBPDbaC/qX3F1Tqi+OMByVe4w4UtfK0C4/ngnPBkEnqOJDGYLe\nQg7u29DPFKg+oahOo/q8OYT8LIeOB3l2kdeq8AdlXfJg7/u0K/gfhAEaFSkF\nu7CNLSV7VW6W373dgHz/1yawORAnw7SqgjW8FEOSgvG6C/VuBzsOiZUprhMC\nt6bAYjAgACMpS1cP2BtCOJqCunowzby7Nlhn/NqPmmbOf8ZmYqlvlqv9UtoF\nPI045J9kd6EzS2rUjkWFmjqQHwjMsAWUPIMt22o2y2eS82wXLXI9ZWROyghD\nVr8vFkAY10JoNtK9RLTrT04rqLcbwW4kbxQgt1pbeVaWy6t2aYPNLMfeMMax\nujH4g+kGvvWaCJ3RWdz1tPatbNlpRSwRqxNzYcmDt2Bs52McaSUL6QpEPGwb\nD41O\r\n=2V2i\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_9.0.0_1524843619291_0.7522526049858105"},"_hasShrinkwrap":false},"9.0.1":{"name":"eosjs","version":"9.0.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^2.13.1","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^5.0.0","eosjs-ecc":"^3.0.2","fcbuffer":"^2.1.5"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n### The current public Testnet release of eosjs is built for Dawn 2.x\nYou can find the current stable branch of eos here: https://github.com/EOSIO/eos/tree/dawn-2.x\n\nNewer releases are available by running your own EOS node:\n\n| Version | [EOSIO/eosjs](/EOSIO/eosjs) | [Npm](https://www.npmjs.com/package/eosjs) | [EOSIO/eos](/EOSIO/eos) | [Docker](https://hub.docker.com/r/eosio/eos/) | Node |\n| --- | --- | --- | --- | --- | --- |\n| DAWN-2018-04-23-ALPHA | branch: DAWN-2018-04-23-ALPHA | `npm install eosjs@dawn3` (version 9) | branch: DAWN-2018-04-23-ALPHA | eosio/eos:DAWN-2018-04-23-ALPHA | [local docker](https://github.com/EOSIO/eosjs/tree/DAWN-2018-04-23-ALPHA/docker) |\n| dawn3 | branch: master | `npm install eosjs@8` (version 8) | branch: master | eosio/eos:dawn3x | [local docker](https://github.com/EOSIO/eosjs/tree/master/docker) |\n| dawn2 | branch: dawn2 | `npm install eosjs` | branch: dawn-2.x | eosio/eos:dawn2x | http or [https://t1readonly.eos.io](https://t1readonly.eos.io/v1/chain/get_info) |\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// eos = Eos.Localnet() // 127.0.0.1:8888\neos = Eos.Testnet() // testnet at eos.io\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need nodeos running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-api/blob/master/src/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-api/blob/master/src/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  nodeos.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from the [eosio_system](https://github.com/EOSIO/eosjs/blob/master/src/schema/eosio_system.json) schema.\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://github.com/eosio/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n\n```bash\nnpm i binaryen@37.0.0\n```\n\nAlthough the EOS back-end does seek to be up-to-date and have\nbinaryen backwards compatibility, new versions of binaryen may be\n[problematic](https://github.com/EOSIO/eos/issues/2187).\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen@37.0.0\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and nodeos binary format will change between releases\nso you may need to start `nodeos` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n\n// Creating the instance `eos` means that common blockchain data-structures are\n// available for a given network (Testnet, Mainnet, etc).\neos = Eos.Localnet()\n```\n\n* Fcbuffer\n\nThe `eos` instance can provide more convenient serialization:\n\n```javascript\n// 'nonce' is a struct but could be any type or struct like: uint8 or transaction\nnonce = {value: '..'}\nnonceBuffer = eos.fc.toBuffer('nonce', nonce)\nassert.deepEqual(nonce, eos.fc.fromBuffer('nonce', nonceBuffer))\n\n// Serialization for a smart-contract's Abi:\neos.contract('currency', (error, c) => currency = c)\nissue = {to: 'inita', quantity: '1.0000 CUR', memo: 'memo'}\nissueBuffer = currency.fc.toBuffer('issue', issue)\nassert.deepEqual(issue, currency.fc.fromBuffer('issue', issueBuffer))\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are integrated into `eosjs` seamlessly so you probably do not\nneed to use them directly.  They are exported here giving more API access or\nin some cases may be used standalone.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (nodeos)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* json {[api](https://github.com/EOSIO/eosjs-api/blob/master/src/api), [schema](https://github.com/EOSIO/eosjs/blob/master/src/schema)},\n  * Blockchain definitions (api method names, blockchain schema)\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Allows client to know what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build_browser\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode and browser (es2015)\n","readmeFilename":"README.md","gitHead":"4cac6bdf2fd475665d28272bac74682aa97c81f1","_id":"eosjs@9.0.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-peLEn7w8PtAywAMnfHJCT4dhL1lI3waJipqrHUlMYf/kxALqXaPkXzj6UdjeP5rFkweokQlGkPVRlVZZJL6Aeg==","shasum":"295c267461aea8c862fe8f63e33fb7e6e2ab3f7d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-9.0.1.tgz","fileCount":20,"unpackedSize":129972,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa47cFCRA9TVsSAnZWagAAs5gP/3xCqZRA1KZ4maoUB1Bl\nSha++BOY+Tlxb6to/FhvsrWEUdJJrQYtt0eWPZ3TVSrtjN3GsXYiNIbmsUrJ\nHuMQtN9KiR1whztCvf6FvydkecGYsHP/bkgW0v4TtzdcNIS1zxP1A6zOBqRQ\nPRoSUrpkkcXWFgmstxLN6A9b42Fbsk1HXh3AC0zGxrmWolgrkBf6Jh76p5mN\no7htBfA5sJJI6AS7wuXVqQBn/VbUNyHrco3d+58IEWQ66WX1jw/xMBnqKAd9\neJ052+mDfIRHlLoaf1jUI5LDO2I2JX2zK+pHwMvEt89MTylH3Qvnfsm9PSb7\n1ahBYb/XeBSjtSO8IEE4VGQiV2IIWpgl/0/t+ffnRyANuWHRQS0CIrH8I4ze\nJQysJPUEpdPzObbelm7L8UL5yEN3IOFk4jlKfY9C+Sylfxbu7TnnLng0lzP3\np1JrXahk635d/RCSJ8yfUEaRgHTlvystZ5kovzHfDxbG9MMkwra+9KsHDCMO\nz5MYMtWCaDbxVrs4M5YKpaRDx3OTeuXNpXCNgqMs2YlM70d8I/2NFuwvpZoj\noxFrJanm5EnL+7hguJgVWoZM4r75g7akLc7Bex3BM1nT20Hq7orAubIfa0U2\nwHGJiHrpt+EcDZA1TKRg6SFTjjvwAHmcXx0Equ2NSFIUzOlx9n0JRl4Gr41H\nkXYu\r\n=PQ3X\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_9.0.1_1524872964514_0.3483286374465342"},"_hasShrinkwrap":false},"10.0.0":{"name":"eosjs","version":"10.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^5.0.0","eosjs-ecc":"^4.0.0","fcbuffer":"^2.1.5"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n### The current public Testnet release of eosjs is built for Dawn 2.x\nYou can find the current stable branch of eos here: https://github.com/EOSIO/eos/tree/dawn-2.x\n\nNewer releases are available by running your own EOS node:\n\n| Version | [EOSIO/eosjs](/EOSIO/eosjs) | [Npm](https://www.npmjs.com/package/eosjs) | [EOSIO/eos](/EOSIO/eos) | [Docker](https://hub.docker.com/r/eosio/eos/) | Node |\n| --- | --- | --- | --- | --- | --- |\n| DAWN-2018-04-23-ALPHA | tag: 9.x.x | `npm install eosjs@dawn3` (version 9) | tag: DAWN-2018-04-23-ALPHA | eosio/eos:DAWN-2018-04-23-ALPHA | [local docker](https://github.com/EOSIO/eosjs/tree/DAWN-2018-04-23-ALPHA/docker) |\n| dawn3 | tag: 8.x.x | `npm install eosjs@8` (version 8) | tag: dawn-v3.0.0 | eosio/eos:dawn3x | [local docker](https://github.com/EOSIO/eosjs/tree/master/docker) |\n| dawn2 | branch: dawn2 | `npm install eosjs` | branch: dawn-2.x | eosio/eos:dawn2x | http or [https://t1readonly.eos.io](https://t1readonly.eos.io/v1/chain/get_info) |\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\n// eos = Eos.Localnet() // 127.0.0.1:8888\neos = Eos.Testnet() // testnet at eos.io\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need nodeos running on localhost:8888\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-api/blob/master/src/api/v1/chain.json)\n* [account_history.json](https://github.com/EOSIO/eosjs-api/blob/master/src/api/v1/account_history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  nodeos.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from the [eosio_system](https://github.com/EOSIO/eosjs/blob/master/src/schema/eosio_system.json) schema.\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://github.com/eosio/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* recovery: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic,\n  recovery: 'inita'\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n\n```bash\nnpm i binaryen@37.0.0\n```\n\nAlthough the EOS back-end does seek to be up-to-date and have\nbinaryen backwards compatibility, new versions of binaryen may be\n[problematic](https://github.com/EOSIO/eos/issues/2187).\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Testnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen@37.0.0\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic,\n  recovery: 'inita'\n})\n\ncontractDir = `${process.env.HOME}/eosio/dawn3/build/contracts/currency`\nwast = fs.readFileSync(`${contractDir}/currency.wast`)\nabi = fs.readFileSync(`${contractDir}/currency.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(contract => currency = contract)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio'], ({currency, eosio}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and nodeos binary format will change between releases\nso you may need to start `nodeos` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n\n// Creating the instance `eos` means that common blockchain data-structures are\n// available for a given network (Testnet, Mainnet, etc).\neos = Eos.Localnet()\n```\n\n* Fcbuffer\n\nThe `eos` instance can provide more convenient serialization:\n\n```javascript\n// 'nonce' is a struct but could be any type or struct like: uint8 or transaction\nnonce = {value: '..'}\nnonceBuffer = eos.fc.toBuffer('nonce', nonce)\nassert.deepEqual(nonce, eos.fc.fromBuffer('nonce', nonceBuffer))\n\n// Serialization for a smart-contract's Abi:\neos.contract('currency', (error, c) => currency = c)\nissue = {to: 'inita', quantity: '1.0000 CUR', memo: 'memo'}\nissueBuffer = currency.fc.toBuffer('issue', issue)\nassert.deepEqual(issue, currency.fc.fromBuffer('issue', issueBuffer))\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are integrated into `eosjs` seamlessly so you probably do not\nneed to use them directly.  They are exported here giving more API access or\nin some cases may be used standalone.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (nodeos)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* json {[api](https://github.com/EOSIO/eosjs-api/blob/master/src/api), [schema](https://github.com/EOSIO/eosjs/blob/master/src/schema)},\n  * Blockchain definitions (api method names, blockchain schema)\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Allows client to know what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build_browser\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode and browser (es2015)\n","readmeFilename":"README.md","gitHead":"4c2a748e88531b7925b1f666720c83ee15a3a7f0","_id":"eosjs@10.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-OCXysxk0A9V8sfCjOwuF6y1UHqq5pSdmp4+ij/UysPjERpvhBas3U3lvPjhllbadFoZ2u8Mxu6xTrwijhXz/eQ==","shasum":"182e309b67841d70f7e51d3103ac73844a66c851","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-10.0.0.tgz","fileCount":20,"unpackedSize":130618,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa7KwvCRA9TVsSAnZWagAAwJkQAIvnCH1lTb2Prb9rd24k\nQQJ78FESQ4JBfwxzWl5LZEzLY2SVsKlLgCiKJFccnujj1ciBT/ojv+kCTajB\nMVhNT3jfPP3HGtLb2lyqlPnz5E2F8aCBbp3HKVKhIRG1ebbuNHK5nxwgw+qG\ndSYV79klOaE9GUVQYGFe+mUjfq/sdPO6flwD4oz8cvEHM7xFo8GQj8/+TWd9\nnh9jIjk7lZJcGOJ8Uro0EHtSSdy0Z35VMALdJj0J1wv3pTW+gdjzeHDGzJce\nn4il/rHXljwm+SBrU6eQcNxpjkUFPn3WXcM6Cqaw8XbMKqczY97Zec2FUy5l\niyF1XaSnxV2k14pOle5l4PE8uNwfSQYSzKEtvrlUjAmMWsG9lqL5GLxsW47H\nrAO+zjkqpXknrsQfz4UYxnBQyH2yoywNv7FCb5uoL9bs4GXyFGyZei4PDa+H\nhKheXL2zmEiN+od6bExRBTSHx+JG3ywTrA8AG1j7i4+xE/BJoqPvCcqXZaWG\nywX1Rjmj5I747t1q4fvCnCgt/OKAaHetM3v6Nw366kbxsQQ4b8cty6xUdecS\nndt3j5DGaBCiVOEZ41Tcp1t+/9R/n2RdPMmXhr3n6S8DQ/uUuArcgOzpSmuP\nDfo7EqBArVQPZv5Bkf37b8cTwP2i6aattZrvh3cA81hMJ+MdVB5McAZy3KQE\nMsr5\r\n=aX6C\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_10.0.0_1525460014534_0.806922957381847"},"_hasShrinkwrap":false},"11.0.0":{"name":"eosjs","version":"11.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^6.0.0","eosjs-ecc":"^4.0.0","fcbuffer":"^2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"readme":"[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)\n[![NPM](https://img.shields.io/npm/v/eosjs.svg)](https://www.npmjs.org/package/eosjs)\n\n| Version | [EOSIO/eosjs](/EOSIO/eosjs) | [Npm](https://www.npmjs.com/package/eosjs) | [EOSIO/eos](/EOSIO/eos) | [Docker Hub](https://hub.docker.com/r/eosio/eos/) | Node |\n| --- | --- | --- | --- | --- | --- |\n| dawn4 | tag: 11.x.x | `npm install eosjs@dawn4` (version 11) | tag: dawn-v4.0.0 | eosio/eos:dawn-v4.0.0 | [local docker](https://github.com/EOSIO/eosjs/tree/master/docker) |\n| DAWN-2018-04-23-ALPHA | tag: 9.x.x | `npm install eosjs@dawn3` (version 9) | tag: DAWN-2018-04-23-ALPHA | eosio/eos:DAWN-2018-04-23-ALPHA | [local docker](https://github.com/EOSIO/eosjs/tree/DAWN-2018-04-23-ALPHA/docker) |\n| dawn3 | tag: 8.x.x | `npm install eosjs@8` (version 8) | tag: dawn-v3.0.0 | eosio/eos:dawn3x | [local docker](https://github.com/EOSIO/eosjs/tree/master/docker) |\n| dawn2 | branch: dawn2 | `npm install eosjs` | branch: dawn-2.x | eosio/eos:dawn2x | http or [https://t1readonly.eos.io](https://t1readonly.eos.io/v1/chain/get_info) |\n\n# Eosjs\n\nGeneral purpose library for the EOS blockchain.\n\n### Usage (read-only)\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet() // 127.0.0.1:8888\n\n// All API methods print help when called with no-arguments.\neos.getBlock()\n\n// Next, your going to need nodeosd running on localhost:8888 (see ./docker)\n\n// If a callback is not provided, a Promise is returned\neos.getBlock(1).then(result => {console.log(result)})\n\n// Parameters can be sequential or an object\neos.getBlock({block_num_or_id: 1}).then(result => console.log(result))\n\n// Callbacks are similar\ncallback = (err, res) => {err ? console.error(err) : console.log(res)}\neos.getBlock(1, callback)\neos.getBlock({block_num_or_id: 1}, callback)\n\n// Provide an empty object or a callback if an API call has no arguments\neos.getInfo({}).then(result => {console.log(result)})\n\n```\n\nAPI methods and documentation are generated from:\n* [chain.json](https://github.com/EOSIO/eosjs-api/blob/master/src/api/v1/chain.json)\n* [history.json](https://github.com/EOSIO/eosjs-api/blob/master/src/api/v1/history.json)\n\n### Configuration\n\n```js\nEos = require('eosjs') // Eos = require('./src')\n\n// Optional configuration..\nconfig = {\n  keyProvider: ['PrivateKeys...'], // WIF string or array of keys..\n  httpEndpoint: 'http://127.0.0.1:8888',\n  mockTransactions: () => 'pass', // or 'fail'\n  transactionHeaders: (expireInSeconds, callback) => {\n    callback(null/*error*/, headers)\n  },\n  expireInSeconds: 60,\n  broadcast: true,\n  debug: false,\n  sign: true\n}\n\neos = Eos.Localnet(config)\n```\n\n* `mockTransactions` (optional)\n  * `pass` - do not broadcast, always pretend that the transaction worked\n  * `fail` - do not broadcast, pretend the transaction failed\n  * `null|undefined` - broadcast as usual\n\n* `transactionHeaders` (optional) - manually calculate transaction header.  This\n  may be provided so eosjs does not need to make header related API calls to\n  nodeos.  This callback is called for every transaction.\n  Headers are documented here [eosjs-api#headers](https://github.com/EOSIO/eosjs-api/blob/HEAD/docs/index.md#headers--object).\n\n### Options\n\nOptions may be provided immediately after parameters.\n\nExample: `eos.transfer(params, options)`\n\n```js\noptions = {\n  broadcast: true,\n  sign: true,\n  authorization: null\n}\n```\n\n* **authorization** `{array<auth>|auth}` - identifies the\n  signing account and permission typically in a multi-sig\n  configuration.  Authorization may be a string formatted as\n  `account@permission` or an `object<{actor: account, permission}>`.\n  * If missing default authorizations will be calculated.\n  * If provided additional authorizations will not be added.\n  * Sorting is always performed (by account name).\n\n### Usage (read/write)\n\nIf you use the Testnet, you'll need to replace the private key in keyProvider.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// Run with no arguments to print usage.\neos.transfer()\n\n// Usage with options (options are always optional)\noptions = {broadcast: false}\n\neos.transfer({from: 'inita', to: 'initb', quantity: '1 EOS', memo: ''}, options)\n\n// Object or ordered args may be used.\neos.transfer('inita', 'initb', '2 EOS', 'memo', options)\n\n// A broadcast boolean may be provided as a shortcut for {broadcast: false}\neos.transfer('inita', 'initb', '1 EOS', '', false)\n```\n\nRead-write API methods and documentation are generated from the [eosio_system](https://github.com/EOSIO/eosjs/blob/master/src/schema/eosio_token.json) schema.\n\nFor more advanced signing, see `keyProvider` in\n[eosjs-keygen](https://github.com/eosio/eosjs-keygen) or\n[unit test](https://github.com/EOSIO/eosjs/blob/master/src/index.test.js).\n\n### Shorthand\n\nShorthand is available for some types such as Asset and Authority.\n\nFor example:\n* deposit: `'1 EOS'` is shorthand for `1.0000 EOS`\n* owner: `'EOS6MRy..'` is shorthand for `{threshold: 1, keys: [key: 'EOS6MRy..', weight: 1]}`\n* active: `inita` or `inita@active` is shorthand\n  * `{{threshold: 1, accounts: [..actor: inita, permission: active, weight: 1]}}`\n  * `inita@other` would replace the permission `active` with `other`\n\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\ninitaPublic = 'EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV'\nkeyProvider = initaPrivate\n\neos = Eos.Localnet({keyProvider})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'mynewacct',\n  owner: initaPublic,\n  active: initaPublic\n})\n\n```\n\n### Contract\n\nDeploy a smart contract.\n\nThe `setcode` command accepts WASM text and converts this to binary before\nsigning and broadcasting.  For this, the Binaryen library is used.  Because\nthis is a large library it is not included in `eosjs` by default.\n\nAdd binaryen to your project:\n\n```bash\nnpm i binaryen@37.0.0\n```\n\nAlthough the EOS back-end does seek to be up-to-date and have\nbinaryen backwards compatibility, new versions of binaryen may be\n[problematic](https://github.com/EOSIO/eos/issues/2187).\n\nImport and include the library when you configure Eos:\n\n```javascript\nbinaryen = require('binaryen')\neos = Eos.Localnet({..., binaryen})\n```\n\nComplete example:\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\nlet {ecc} = Eos.modules\n\ninitaPrivate = '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'\n\n// New deterministic key for the currency account.  Only use a simple\n// seedPrivate in production if you want to give away money.\ncurrencyPrivate = ecc.seedPrivate('currency')\ncurrencyPublic = ecc.privateToPublic(currencyPrivate)\n\nkeyProvider = [initaPrivate, currencyPrivate]\n\n//  Requires a large library, separate from the eosjs bundle\n// $ npm install binaryen@37.0.0\nbinaryen = require('binaryen')\n\neos = Eos.Localnet({keyProvider, binaryen})\n\neos.newaccount({\n  creator: 'inita',\n  name: 'currency',\n  owner: currencyPublic,\n  active: currencyPublic\n})\n\nwast = fs.readFileSync(`docker/contracts/eosio.token/eosio.token.wast`)\nabi = fs.readFileSync(`docker/contracts/eosio.token/eosio.token.abi`)\n\n// Publish contract to the blockchain\neos.setcode('currency', 0, 0, wast)\neos.setabi('currency', JSON.parse(abi))\n\ncurrency = null\n\n// eos.contract(account<string>, [options], [callback])\neos.contract('currency').then(c => currency = c)\n\n// Issue is one of the actions in currency.abi\ncurrency.issue('inita', '1000.0000 CUR', {authorization: 'currency'})\n\n```\n\n### Atomic Operations\n\nBlockchain level atomic operations.  All will pass or fail.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\nkeyProvider = [\n  '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3',\n  Eos.modules.ecc.seedPrivate('currency')\n]\n\neos = Eos.Localnet({keyProvider})\n\n// if either transfer fails, both will fail (1 transaction, 2 messages)\neos.transaction(eos =>\n  {\n    eos.transfer('inita', 'initb', '1 EOS', '')\n    eos.transfer('inita', 'initc', '1 EOS', '')\n    // Returning a promise is optional (but handled as expected)\n  }\n  // [options],\n  // [callback]\n)\n\n// transaction on a single contract\neos.transaction('currency', currency => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// mix contracts in the same transaction\neos.transaction(['currency', 'eosio.token'], ({currency, eosio_token}) => {\n  currency.transfer('inita', 'initb', '1 CUR', '')\n  eosio_token.transfer('inita', 'initb', '1 EOS', '')\n})\n\n// contract lookups then transactions\neos.contract('currency').then(currency => {\n  currency.transaction(cur => {\n    cur.transfer('inita', 'initb', '1 CUR', '')\n    cur.transfer('initb', 'initc', '1 CUR', '')\n  })\n  currency.transfer('inita', 'initb', '1 CUR', '')\n})\n\n// Note, the contract method does not take an array.  Just use Await or yield\n// if multiple contracts are needed outside of a transaction.\n\n```\n\n### Usage (manual)\n\nA manual transaction provides for more flexibility.\n\n```javascript\nEos = require('eosjs') // Eos = require('./src')\n\neos = Eos.Localnet({keyProvider: '5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3'})\n\n// returns Promise\neos.transaction({\n  actions: [\n    {\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'inita',\n        permission: 'active'\n      }],\n      data: {\n        from: 'inita',\n        to: 'initb',\n        quantity: '7 EOS',\n        memo: ''\n      }\n    }\n  ]\n})\n\n```\n\n# Development\n\nFrom time-to-time the eosjs and nodeos binary format will change between releases\nso you may need to start `nodeos` with the `--skip-transaction-signatures` parameter\nto get your transactions to pass.\n\nNote, `package.json` has a \"main\" pointing to `./lib`.  The `./lib` folder is for\nes2015 code built in a separate step.  If your changing and testing code,\nimport from `./src` instead.\n\n```javascript\nEos = require('./src')\n\n// Creating the instance `eos` means that common blockchain data-structures are\n// available for a given network (Testnet, Mainnet, etc).\neos = Eos.Localnet()\n```\n\n* Fcbuffer\n\nThe `eos` instance can provide more convenient serialization:\n\n```javascript\n// 'nonce' is a struct but could be any type or struct like: uint8 or transaction\nnonce = {value: '..'}\nnonceBuffer = eos.fc.toBuffer('nonce', nonce)\nassert.deepEqual(nonce, eos.fc.fromBuffer('nonce', nonceBuffer))\n\n// Serialization for a smart-contract's Abi:\neos.contract('currency', (error, c) => currency = c)\nissue = {to: 'inita', quantity: '1.0000 CUR', memo: 'memo'}\nissueBuffer = currency.fc.toBuffer('issue', issue)\nassert.deepEqual(issue, currency.fc.fromBuffer('issue', issueBuffer))\n```\n\nUse Node v8+ to `package-lock.json`.\n\n# Related Libraries\n\nThese libraries are integrated into `eosjs` seamlessly so you probably do not\nneed to use them directly.  They are exported here giving more API access or\nin some cases may be used standalone.\n\n```javascript\nvar {api, ecc, json, Fcbuffer, format} = Eos.modules\n```\n* format [./format.md](./docs/format.md)\n  * Blockchain name validation\n  * Asset string formatting\n\n* eosjs-api [[Github](https://github.com/eosio/eosjs-api), [NPM](https://www.npmjs.org/package/eosjs-api)]\n  * Remote API to an EOS blockchain node (nodeos)\n  * Use this library directly if you need read-only access to the blockchain\n    (don't need to sign transactions).\n\n* eosjs-ecc [[Github](https://github.com/eosio/eosjs-ecc), [NPM](https://www.npmjs.org/package/eosjs-ecc)]\n  * Private Key, Public Key, Signature, AES, Encryption / Decryption\n  * Validate public or private keys\n  * Encrypt or decrypt with EOS compatible checksums\n  * Calculate a shared secret\n\n* json {[api](https://github.com/EOSIO/eosjs-api/blob/master/src/api), [schema](https://github.com/EOSIO/eosjs/blob/master/src/schema)},\n  * Blockchain definitions (api method names, blockchain schema)\n\n* eosjs-keygen [[Github](https://github.com/eosio/eosjs-keygen), [NPM](https://www.npmjs.org/package/eosjs-keygen)]\n  * private key storage and key management\n\n* Fcbuffer [[Github](https://github.com/eosio/eosjs-fcbuffer), [NPM](https://www.npmjs.org/package/fcbuffer)]\n  * Binary serialization used by the blockchain\n  * Clients sign the binary form of the transaction\n  * Allows client to know what it is signing\n\n\n# Browser\n\n```bash\ngit clone https://github.com/EOSIO/eosjs.git\ncd eosjs\nnpm install\nnpm run build_browser\n# builds: ./dist/eos.js\n```\n\n```html\n<script src=\"eos.js\"></script>\n<script>\nvar eos = Eos.Testnet()\n//...\n</script>\n```\n\n# Environment\n\nNode and browser (es2015)\n","readmeFilename":"README.md","gitHead":"823260b21da6cc5fe04b39b7f429b8cbb95641c1","_id":"eosjs@11.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-l9gjFSzY4jQAV6LWvBKFEAVjz9RwaQZsOjcR1fQep8bByZcQvz6OCFsOIsnIPUm2X3sxzativjCc9pQRUKWyTA==","shasum":"efdff52b823bebbd9ba57f29ca8f984c47fbe2e8","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-11.0.0.tgz","fileCount":22,"unpackedSize":136032,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa+4swCRA9TVsSAnZWagAA7wgP/jvV4EOOfBKt0aeqlTDw\noslCjudrMuX1Hh5ik26VnV9TeisScxVsqUdOWw2I74psrQLEJB4mNshW8NSi\ndijoM3a30ctzgwhwQOHWnI8ivGnfWpbno+WI28pGmhNOMM7KTFcXLofTIkRD\n9mXlnqgx4da2RCCVBsl89+XxUR3aNeclBgnr5CvL1TasTcLsxoM3GjK72rHw\n6A9DVPkoIlk3zGeComM4ZCBtgKtX0rBozB6aE+voVcsweFrHtTPbMJ/PYhsF\n60SLCWc7PHuD6w2Vjodo4YuJcnBrtwRkgQhX8cOp0qKclbdqClhlsWbUQhjo\nI3jyMvztqiinmEeDd/s+ETgX19S4V2qM4YzGdY8eWQugLQk3TCEN5LQn3YSx\nSFlpptkW1Jk9UAgG/WC2puNQV4Sa2S9OPZYI0/Npq0R9NRVB1TdHreHV7PoM\nEN76lo/EoAVbqwmWzwhUJe1irpb/9uJi4K89NtY7/JJaOXTBo4+Tpxba1GrP\nQYn1BlVLdWXBv6cgSoAuhuYS2jHiNQU30wHnyL5v+oSihmraLHT3G7kh5wyb\nXZVQzVOIaKBUqRSqQmjKIH1qXQsHUCcFn7etZVw97uTBGL9Jbjjif7vitslt\n4PveR/R63/JFV2j4kvLMKVtYkhQp9pFMu4KWTrm1HBnzaluDgpvrXh6jV6XK\n+cMe\r\n=xg/w\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_11.0.0_1526434606529_0.7815776036535824"},"_hasShrinkwrap":false},"11.0.1":{"name":"eosjs","version":"11.0.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^6.0.0","eosjs-ecc":"^4.0.0","fcbuffer":"^2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"39fbe8d1bd786885a5e65bac75203f6c0d24501d","_id":"eosjs@11.0.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-UNXrsffBQ1Y9Z9fKKhWlQYXP0f7KykJJ7Oq4G4AgZqC4FyzAS7++GvghnvENcL/GYJA0UQFxbK32AnR1qVUn+g==","shasum":"a4901638c647dd42bb92d45e6b165ca49158b390","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-11.0.1.tgz","fileCount":23,"unpackedSize":146508,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa/vWUCRA9TVsSAnZWagAATEAP/i3+OuiuBicckp7OcVQK\nqFSMUZWzAu+X96cvVlWMQz6YpQr08QMzRh7/6ESaqs5M/HrRddB0fNYjiJWS\nPGDrcdIaa9xck8lnWdDrJJUK2uGsulZGMsBqETFEyQo5kD0kVEt9hwSvrfDE\nk35douVSM1NoHNCMDYp0xKgwZUCyASHTpZGZS9U0nfFRTwPPpzQQS6m9uFk2\nAe358bbZqWhA7nZEICtwWUgnA6/SlbgvTbd1CCKJrZ+GY6eCKFKrcHNsuyL4\nLvZYSOIBSZKJmXf0OroeNcd3ytgcf96ujiNOsZz3vXgDEo2AYQM6xuE2fc0v\nYuAj8Ie8mKWZTQU24ppG1Ey12IVJ+wS35Wot9vKlCSidROL8V8alzkidOAed\nLd0oYreSYWdCIilLGtapCYLOrikZ+LtH9EMCCqjopwzfDZ35yzrOoSE0MS1E\nB+9ztTWP5ZwoMZ5N+qlxSIahL6H3mW6CHeSLmruGd7/9EPz1/y4ekaI6Z2va\nXS9NdG0o8xDPLbNIRNM0bXq/tM27DRdimc1z92QdBX91DqqTgNiGPPhuoBtw\nQI6Vkr4WgxAcC5tXwV+cdJ+Dgh7ydXmoYdBYvU4PcIs9gDPRth24wSPv94Yw\ntEnotFveBmgEcDXiKFOJwN8lhtQZvSSCm2lDiZMhTYTnsvKvu8MBlykVXYII\nwmkx\r\n=4p5V\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_11.0.1_1526658450584_0.5897615864298624"},"_hasShrinkwrap":false},"12.0.0":{"name":"eosjs","version":"12.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^6.0.0","eosjs-ecc":"^4.0.0","fcbuffer":"^2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"687af263855a1e2f19bd0a8c6383a082daacdbcd","_id":"eosjs@12.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-Pqg5eU+Ou8O33jVh/UCF/3ndw0lVLY3zLJ4tDam6S0Vlv3SoCs9OcyDoYv3DYlDYDNEo5slptD1quA4EW0FlnA==","shasum":"7cc18366f6acd5fa9f7055e6c105c818b86aa2e9","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-12.0.0.tgz","fileCount":23,"unpackedSize":150878,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa/4daCRA9TVsSAnZWagAALu8QAJVzp6KwKNnOYh50Abgr\n3zgTv4V5MkMvTFQ2LK7aFmvCxlqx2C/iQ17zBA5TGM3NwxozjT3YH3JFHtw8\nNVdsbPDd6fmRWL4cSA0gyPvCWSM3flBnwDHyzi1fDn3MY1eI850ksJQ/nNyl\nzctuu4kfBvQjugRjUzIDT7zX+sE4xOy3l4hDgV6KuhAAymIZKxFzl7kpcXOS\n7Rv0205W0N+erDpDUDUCwLbCnZDnmDpPzY1kIQmvxfK76tixRG7m/U+XZJLe\nIBAD5GCGizP7k89FAUwTcEU6YFKq2kDJagqUyBCjI2xjXJHRoag6EUSuAxCN\nEHLjZOryOwMN8u9q/WTvKr2DgWxa9OfkGKL33qKPJm1fssbbVWY12JRdd2Ni\nEiz0TDikPata9wEL9S+sKxnKGHLzVGb8fn5Tm1+0z0hr5c8025x3/rYWtMFI\nMGXQ/HjUYGtp2hi7fgkzj8/+B6KVqioSguzwhxpQgWNSfVbTCPShu3WVF8Xk\ngpevEJ0jlA4GtOpsPXMBjmT1A2zcg7a9QuWUCnfqOBBKQlj6mG8bcriblYMU\nhL5BOpTj3h9IVJtGn8g48hEr9JAglIERCEPeApl69tZSmwY75be18U31Ao8X\nEegtRRRhu+q0gTKlmYQkYW9oIrYwD4TDy3gniuU9a2sOM5UCRLL7PHFJylZs\nhtQx\r\n=dKfD\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_12.0.0_1526695768925_0.10981231526684287"},"_hasShrinkwrap":false},"12.0.1":{"name":"eosjs","version":"12.0.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^6.0.1","eosjs-ecc":"^4.0.0","fcbuffer":"^2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"f18e43fe753a9b35ed09ae8c389fa43324495385","_id":"eosjs@12.0.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-Y6LBWhoSP7CPEI9QU5tl3CWauShGSA0GCeuReVjNV+VXlPo4WjEV4tDUAcsvi25o7o6Uww7etgUebCsXYokBTA==","shasum":"9a124e876e25f419f37f24b628ea5fef64c593ee","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-12.0.1.tgz","fileCount":23,"unpackedSize":151887,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbAr4lCRA9TVsSAnZWagAAD9cP/2/48K5QyzB01V7oaEKQ\nG6AX6ynf9U+nPhc9ZCU5c8loP0RoVD7BaGCSDNOa0CJKlRkHoSYkTMrw5SIY\nGbrzN8PHqhqsB/br7ADbYYyQyKp5s6hJwkdLvvcwsohTfSuV6Dz8exwG6K1T\nzfOzCZ38sOGX6RWyExL0fsMjHy3LDG7BKo4P6oAcF2HZu8hErFEK49iscIbG\nIK7PQGn4DehzrjUoJcTQQ8ln2IfcLMPHTTDrv/nK/Z3UrxsUny2K04QXhtiY\nUf7SPgThnmfS5R5juI7LZU9OtnEvSNQjQardkYJkBP6G2v5zixOkWxCOrKe3\nLsmK5fjuuPzmXNMldpKAFVWgILehv81VJoG/gLZ6IBT09Z1zAtGDasbsmjGO\naY0aZDGWOLA4aIvUJhgyBhO/G5CAliEMmLiAe+CzdfVEvLuZLlIIKzdPbbbD\nUqzzELRVUh75c6bjgY2VnvapqJt/4ogmufUqjtRHGWogbF3blShXce8/1bIi\n1BwPsKJNFHYsQEASMft2hd+wvj6GNhFtfzgq1t/7BQZaKO4maFWSZQ0m+sMI\nlxnfMXoxwXdNl4l+jjNAbGIX4Tz+Sw6lEz9fRCArf/jtHMkcwTQ5A+8SPorI\nLMoa1K5yyKRKQ6FufLH5Jb2+jebYetl4NXc/246b3r0039II3VWb+WNeBpcH\ntgIh\r\n=bDoC\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_12.0.1_1526906403467_0.9899968767773342"},"_hasShrinkwrap":false},"12.0.2":{"name":"eosjs","version":"12.0.2","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.2.0","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"^6.0.1","eosjs-ecc":"^4.0.1","fcbuffer":"^2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"71e2d7de8ef86ab9829e017b86329c6464eb4f11","_id":"eosjs@12.0.2","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-DmaHXPHWHtkT3PeHbNLvRmftA+WffAHcL5jvwXnp1bJWidhaWH7jOuXh39nN0LprgDGEqGN+sgydZ5yLXelaDw==","shasum":"5900dc164680560cd1f7c0712edec98d5ad8f18b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-12.0.2.tgz","fileCount":23,"unpackedSize":153456,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbBtfMCRA9TVsSAnZWagAAiv0P/iENI8k29wa9G0Hswzgq\n759Ts5DHzPAZw8kDXBu543G5wlwWLobHxo+rfMg4lEfaVfgCPZVvGWSlXHre\n5u1C+IRbCTgloEnu7ZIp+lj3cAt7UBdPLcwy6gFGUw8AbFszKvRJWXlJqCd+\nB5L3zrCCjbZoZtCoyJBzdC8pRjklfWHKW/4oPxOQJEo0hkkjQq3MvOOzlJ0N\nXqn8mUSCocTXYHHEM537SpPPQ3RXs2WHA1UfvXsfbx1iNnrW5tFdE8Vy3LbN\nHk63qIM6esNAU225EMx58wtpketoufcf0V1tAg1R1Ef6FsJNqZSMES/8u0tM\nLfMzdL7Y9k+ILAJJ2mwTJjdKS9nrnWiYgwsbe8OdQcZGuyHf5MfSym2vo9c/\nExcwgGIQPXE7o9qPb/FPdnLQoCAR/i41KLE5zNwU1tbgRX7h7At+pNya+c2D\niXTsNlT+yRJ8NqGCCT31+qpSETZHCb20BJHJq8zwOLUVcAouPiX7ld3+eUiI\nsbi5uOS1DSycn8oXHfTj8+aH701EOR3up+XRPsEPiG72DQJVJJgYIjqV6uH8\nrs5u3DPnFSp0VH1XyFR/FuWzy480qFDx9pWQyQL0dZgcoBDF6eYWItJGKe3j\n+sbZ31HDjprI+2Kjx5/0WqmXqdNLYQd23OJ8jMGlOVSRCqhxSqglQbLBXLT0\nQ9qQ\r\n=bFPw\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_12.0.2_1527175114518_0.19063566043894542"},"_hasShrinkwrap":false},"12.0.3":{"name":"eosjs","version":"12.0.3","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.0.1","eosjs-ecc":"4.0.1","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"029aa6627cde6f760bb879a4fba806f38c948898","_id":"eosjs@12.0.3","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-5Gf7cXAZ6ZfBkauv4Z+czA2AZDNHamIZ14UzdAc1xmAFh43HkEhUNG/NzfKFotk9RPZCsAu4QquvB7KVBTVT7A==","shasum":"6a64450fcfc50b47eca2d05c7977117914cb6862","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-12.0.3.tgz","fileCount":23,"unpackedSize":153456,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbCExECRA9TVsSAnZWagAAid4P/j0A5EBsaZ84ks1oIdha\nlfICo6gqeFvgS2OYj2axLDBHNSi7QXipOgqyf0n0cKxfias23EGJuBAFMMx5\nk3Q+8RjOnydxqmPluLzOpoWnWutAIAjaeT9W0Nwy9B7/cB4HUneVbcqt0gSI\nmD8ZVWYuisCXZFytMx2Q53rFrb57FJls2W0QGdYObNTiEDQ8ufTTsKsU7kca\nWGddAKLbNHL/9kIyadjq1a+/6LTfId4n3zEi18s8gZ9kC4kLskbEBNWceVkC\nkbZ46Q+fUFJ/3sUX18QDHNAxonZ5WrE296Gedouq4rYX8gh1Vr0AOGj2E4Gx\nTxChbeT0AlyAXmq1Ic7T3e3L3TxLvyBn1MhXQXBYSsmyplatt7Na/p7AJvdb\nhVfV9+B/KKe9l1ea9N/ZPqfYfEM0gsu8NzOXGpqH+sk3j6XVJb+O+AYeXwOa\nsPafKVOqtm8eQklF0i/H6WybLT8jVOHrtwgND2uoTlR1XG6TflhBI6nDp6cI\nHsVXdedYxFk4sycHqK8Ey9qV63QFgzD5Veleqq3oE8l4w4DJ13I6wo4WOVZO\ndqKuyZjfRb/FUHLvuQO8eS0kcvEF1WC2taikUcw3LuZzfhONcp8ue0zD3tMK\n1hRf47vh9z1SBKVTj3DGdkmWG0hOYpDHgxaUXmU5tIHBSRE4setTB0Ha3ezl\ntMYm\r\n=xZQi\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_12.0.3_1527270466888_0.10831627522229681"},"_hasShrinkwrap":false},"13.0.0":{"name":"eosjs","version":"13.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.0.2","eosjs-ecc":"4.0.1","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"29202d02b3336e1d28efcf60c6eeee824c5c5b07","_id":"eosjs@13.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-RM59SVFWd9RLQ/bZyIuxzB5W+Ai5V9dvzQ/YTTVld60d0eTzBoDE2btbyXATl6r+SCSSpcpFOgwNH4hcDmKU6w==","shasum":"3d543dc7da34e086a8730316d8d5686b264ad962","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-13.0.0.tgz","fileCount":23,"unpackedSize":154030,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbCVMuCRA9TVsSAnZWagAADpMP/jngezQhtvbLwrKrsE2z\nzjjIisKplS7gmJ/UGKX2fo5HB4mN/+Wf7Vf0SB+GEOsJqyZ3tDp0s5aURv9z\ng8O1oJiP1nrAc2nU943q+NinfrDZH+Pv20ycnJ5rvQm07WYhDusIVTUlwo1/\nwN/tMLDvzfJep7sIH880wQnEDGca0xvR8y9xywXyTjlqPLyRORFeqw1oncDe\ngnf1yJgCl9wcEhtwitzqh0gbbeKn1lIfcr8D5IrBHZ1GMVJOiyhk1p90zaDi\nIYdaovfYoTiGSJKtCl8EbEWyrO06kjO/kXmK1TZq4VjnhBG5sPMHTUjrajwR\naifHEUryvdsL5aZtVDsMrWoWfPcvGq273MS3VT+/sUXLXM4J74Eh6DMzygi5\nOdvOjvUS0dZXbDNg8m6qzIYwlLsY3FkKX5ZQ687GflRP7JKWjlhlQAaAZqYx\nWN50htWXwxm6tNT+uw4qxoMf8SIvpubtEvtsLi5zGDtTK/4qpwteQQdoOf6q\nHbkrwUyTclGUR9uoEzC8K76E14HlwpqmTZyHJ8C+vyHEBDB6awTEcri2lIDW\nMuvGflT8voOP9SHioWyClSJZ3JbR4hF+KvjkWh15IeylioEs8CV4BGfAehOD\nboCzS8J2uG1tbvtjuljXtBXekiu7wbMEEYMngT6Sz767tAbOjOi85ZsOHR6l\nGzq6\r\n=MkHJ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_13.0.0_1527337773396_0.9797308660114352"},"_hasShrinkwrap":false},"13.0.1":{"name":"eosjs","version":"13.0.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.1.0","eosjs-ecc":"4.0.1","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"58b7e74a1a1f981e5fe12685db0da0128a68874e","_id":"eosjs@13.0.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-oX+6mVBq1J9wFVnVyCi3ygXLfQ9yw+7hrHMHkzR8NhukMG1TELp76KwPhEpmr6mQUy3M09mbL8xH4f4EYtEdJQ==","shasum":"8d8406c0e20bf8cfe7285eb97b1d4ee7767138a6","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-13.0.1.tgz","fileCount":28,"unpackedSize":1362354,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbDysXCRA9TVsSAnZWagAACT4P/i497mE4MVxOLHC+PzsZ\nsbM5GHq8gQaoeq6PAG1Wn9MIU45PoTJF9XzjGdFAxvBN6sradVe7y5WQHwJS\nQSvM35p17C/zi0qvgr4EPSV8U9MP2BCeJOpt0ztdFly1QM5jCzH4wVIgNGHm\nlI5LaOfMwvY/kk9GfX1KREKwAiFozDMy4H9EuQU7QgXGzN9K2UkHLvN1FSBo\ndD2KAwNyzP70LpT5VFpWSOVOkydb+tKAMP9ZpCN8nF+puFC0onXPB7kamGBv\n/0v2gaOGNwPAepczDsdSQGVAtLlmylcf2EYGWfyfdHmM/rfQ8G4Tv+PyXsO4\njp3mH2FVMLVf+RqZuHyF6JjiIKuomHIBiXZ5L9y5AVrl1nkACY/XwZ1xWd4P\n80ts1dlVDCwmYuMeL9BaYfLBIVBlyn55sIk2JN02ZT5YFS+ZAQIBMYQ+IfXB\nxHNyRVcOGr9MapMPzrDa6sdp+OacErPIKnqp1WuYZErxw5pdzv/EZAr7PE7y\n0gqURAReMJ46YmFomaceqwAOm5Szz43cLU2PbFnK12VCIXdtYRJ2UoKr9orw\nBmxCniWNGT2usjYbrAy91flHN7oLZOvKdyUV/wonWWtKVS88gjEMLWPbaJe+\nuigqArR+NjIKV1LVZOm0l2iKNFqomNBjTe5/BFQ6xhmOyF8lI193btcu9Sac\n+dHd\r\n=JGEM\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_13.0.1_1527720725948_0.4687283622956362"},"_hasShrinkwrap":false},"13.1.0":{"name":"eosjs","version":"13.1.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.1.2","eosjs-ecc":"4.0.1","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"d3d4b32741f8ab3329010d9ff36c7643885fe670","_id":"eosjs@13.1.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-wLVv9N5GTHklCFP/34V0ggWB+w3UwPVn8N39WEpfPeMFizh7fwz3BSwOoESKALM6BoLvQnP8JoHUrH7RZNgXng==","shasum":"476555687e07cc5c44561f9ba915febadc25e097","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-13.1.0.tgz","fileCount":28,"unpackedSize":1363194,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbEFueCRA9TVsSAnZWagAAkboP/jvS2GkMHNLhoTg80P4a\nlYznytRTPlBjn/yFvJPchMUHQ7Hs4YE+M2N+imwyNn5N5gbnndYvwF6ObNhI\nANEeQRd8kR4ujapzgqMNA1GKi8RRvytIE4gxqqsr7o8r5/iH4rfpl6vIuzhP\n0nKzJXXTO6iFgwgFb+GPaFHLl8wt0AL7TrTS9rocQaBW6X2PupUJYF59zopD\n+cisS5P19KM20F4WPSvAPRiNOGrYip+/XZczKCVvfcvb+gD9OFsh/vJmwEqg\nJviCGZGXNu/P6du1uyGsjCJyLzJ0FRGwRXSE8aougayLA6XZ2wTArdJhMgIt\nRXstc+wC4U4rikv1EVG5rWUR+OBFBKMWrKGA73BsdmG+zJWBPuWpXwtgwI8x\nbr9GLv9S9pw42arDUF8YZjNIcluhbGMT6K5oRgF5QowkkIKNfTuC4eOuDXuv\n0YUX8mXqUWmf3K5O2RzcOFm5RDbgHarSQ8ihJmV3FlGhvWehZoQQY653aXZx\n5oSjCQrVGRYNJR0lfd3+pa0plIJHobIv3lEwc4Dk2hoso2Tgcw10eeROMGL+\n8Q1CuihCXoW2T5q9uZrKmgF6Ug2py2ijopG6dfZs1zLSKyVsYY0KrFk0jOeB\n9CukYjijE3Wx4I3hUBLUao4vDI7HqLeNet6qsn1CzT+bpL2z7AKghqCprOik\nd48i\r\n=82aV\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_13.1.0_1527798685050_0.7803938277187525"},"_hasShrinkwrap":false},"14.0.0":{"name":"eosjs","version":"14.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.1.3","eosjs-ecc":"4.0.1","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"bd0e99e7791b42f19367be255f6b1f97c67dd689","_id":"eosjs@14.0.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-syVzZ5N9mnr9M793AhBAMWd1LBpuUDfvuvK0j9k6/T+JDrLrnocK7lMfqdWZjZHbCCc22HOxHHKiiZ2I8N0fiw==","shasum":"25e3b0b7802ee51c58673e942f8b9b045987e692","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-14.0.0.tgz","fileCount":29,"unpackedSize":1364505,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbEfbOCRA9TVsSAnZWagAAkH4P/AhwmhGewA5W+flPGKeG\n55TNEiq0j06C5J5AcdjFJC01Jt66UaeImmwYDio9ew8N34t8QTnmtP7YcYfU\nNRv3mVg9Q7X9LRw0uW5xmhqR8B428vq+M4ajRJQpUPuH62tBj4de0ydAJsFy\n1J11TpXqjVu6ownKxZrdWVULjCPgK1VfLw+t0wB1gxEp6K+0R8ght7fh8BZd\n7IycHuQ8ojMlV41IfKgFeSsO7daGDZd+TP4DX7OY9clnM0llmIxa7l9yGS1B\nVR1OOO0lZN9Gz3Z8fVfKoQczewegTsTVauL1rcqgWyZr8liQXgWXOEuGurAN\ntEd0rwB5/eyTRsgFFKqKwGIohWUDV3KIHYWbvG03DodGd8bAq9zqxo3Tx1XX\nstkDo+lCXbQhMhU89ek1UJMg7NiE9Fekw6V8Y4C3QcNqh48V1vvJXVgVPGZL\nIBzIdTyuil6g92NaMgS/wFDCDFuweu2FUWPhHg6Z4drab+MP+EIlXX7R81Ur\nO4k4o7F4QtD1qHlKJtxFx8XcBW1Fm5ZJLLI32XXJax4D7CdoQ5Sl3rgNXPkg\n9ki5fND0klHa0mKT5Nb9JJNhGIhOEu2lbolNyGo+VIEK0y9pG24au+raiidL\nuR1o3WaZXGK4ni9tOU5dUjaLqiyppuMLsGD+po1gcJNwojdsPgMiiXi7fATK\nyk47\r\n=57VH\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_14.0.0_1527903948705_0.8526023120058586"},"_hasShrinkwrap":false},"14.1.0":{"name":"eosjs","version":"14.1.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.1.3","eosjs-ecc":"4.0.1","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"6868c2334eb736ceca546b2cc68ad0e8413a77ac","_id":"eosjs@14.1.0","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-mFJpYwAQEbl1AM+sYqzvKTh1WtLrse4KoIkrlUYhqyWJ7LPR5267rVTxwYEU7t0qFQDeCsUD/Ht9STo2k4r+RQ==","shasum":"b33db40ce8aca2b51a01b27938ecd53e2b926bfb","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-14.1.0.tgz","fileCount":28,"unpackedSize":1364301,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbExAsCRA9TVsSAnZWagAACqAQAJhlTGIoiFsIFgaeq1xx\nyUP1bqBC3lA76XS8KsS1JTKBHy352yn6M3qLQfssPNKUUV2dL0aO+ZTuX9D1\nbAS+FN2SgljwK8DA+MKGYxi2Mq8EJ0k7uS/8fBLdo0VUDoiky9nTDmg4gZBO\nA3a7LZOmgyM9W5qdAeFs70SBoM6p8FPsX1E9Y6ua4vvj896CzJxpab52KFSp\nWth4w7n7Kp9Ga5k5IM4Dx/NIiq69Hkuns6pkLMTx9/jp/oNR9DCc8+W6O1nv\nGiCoSF6dIoIMPIKPmk/sv+5SV/ghMGzFkX8l0104+EHa19/+xm41qdc7nrVP\ndLIdPOfxscpZoIsROjA4/xTOQnoUxzqvMTLAqsI7U4bwDtkQNBy81P80sy19\nfz8HoPopawdz3ZoyBGeyRPH5+mWVeskqOe8tUlCYsCy2LoOpAPBE9WWUk2n9\njliYMhCGP4CQV5W4zwyhpj+VOvzmR7zZligCKVYzQcj1OALAe3/P7waSAhAD\n65k17OaXnFmGmN3I1Zl18ZSz3WeMsdkQqt6GdO1Z58GtRlkvqVYqCJGaMQRz\ntB/6XDo23xGU20VEsVPIJUhgE1hJgah1dy7OITGjg/gvwofZ7ZXc0AcPtlOb\nV/Md9DwoMgWSCMl5n7o1V71IBiXzwz4V/IeQWXXBKUzXYZYrFtPviOffVTHn\nhiKo\r\n=jLqx\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_14.1.0_1527975978095_0.9664676291331464"},"_hasShrinkwrap":false},"14.1.1":{"name":"eosjs","version":"14.1.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.0","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-polyfill":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.1.3","eosjs-ecc":"4.0.1","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator"]},"gitHead":"67a7f532ae4332d2800a0dfa4bb6357c715ddf1b","_id":"eosjs@14.1.1","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-sxK/stEGvlwmUNu1cRv2zpKIhP9aW04d8g0KqnVckI2Jc5IxJR/xN9ob6i6QqUJA+xWmE7cjE66A0y4pk6T5rw==","shasum":"164907430819fea693417e1b10fe666dff30263d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-14.1.1.tgz","fileCount":28,"unpackedSize":1366727,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbG3AJCRA9TVsSAnZWagAA278P/j8Fv5EAwe6ToSA7qygr\nZJBcyhqSCOi3ROCgmD+JyYNVBLSu15mRfowq8bDvizRboU61TNKfXZHrFCkm\ndSEsrxEQ57gNLIuzsYdogkzAcv+7pZCejMtvh0oGeRqpQ3hQGOzPGvjlxdmN\nQ/hdKDCpLJAlEqcmEh521mZoOGh+lQxRQMhW0Mdrh1pGmn+5+6bhk3eoSBaF\n2COTzC9x9/uSMQiXbPGUMn0y4RHypM7ZTlHKlIRAEve/Z0BAga8Y12BdFPvc\n49chEE2BsFRgxYwDTpXm3Fr73Nd5k8MhtYnwTHGtdxaiet1NFCxeRUF94cWq\nvlyJt54Ai+bm4KMquTq6ygTMJkdLFC9pLCJq4aXHiqLiy1b+UR66hBjUjLzl\nn41vyza4E2pJ9jcJ8ZNgCSeOA6WpOlxO3C+ADlg9crSEOpTayBeO5ryuKiAn\nYrttOiNE8e0YAWB4Gx6m6c++GxUghPfObkKfZaaox/EVXOfjWTOUIPp/Emba\n/863MlEOkQ0khYysbVuu2ryf392C4vYc9OWXGWrUhu/fFlYq+YmOyM1KaRpX\n+awZqhcHmyjdAiUYC35AjofYS55Epr6+Z5I37YwO97E/t9K4voZFSY9M2rIu\nWYVphy7n1zyMyvp/MQm+ZzR6mZtabifdHfo3w4wWghbOscKTVbn3rih//RT6\nuoJq\r\n=ViKP\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_14.1.1_1528524807719_0.08851816085570241"},"_hasShrinkwrap":false},"14.2.0":{"name":"eosjs","version":"14.2.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-runtime":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.2.1","eosjs-ecc":"4.0.1","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"23a34d4222b12c7d665b70423dac5c33b8187bec","_id":"eosjs@14.2.0","_npmVersion":"6.1.0","_nodeVersion":"10.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-lMMaN/EnkWTap4ra7ajVnLsMNCHpZUrxuDg7B68PcvWNCh9Zl/CICXwGHIQdIRZvjWsLs0AG+1QbU8y/tyryEw==","shasum":"9b966b77c9b86039df5fbea60f7df249ed42511d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-14.2.0.tgz","fileCount":28,"unpackedSize":1377523,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbI8nrCRA9TVsSAnZWagAAnYsQAJewMi5WBhbA2aUJGEEF\naCvPlAB20r223TpOMbKsU2d0kBf+5tJUBlkCLu1+fvXX2YV+zN8R19YkC0Ij\nJZtclAVaCTLr1JO5DuJgND55+OZTvK4Lrprnbv1gFtwqacJGHcvgWr1CW2AX\nKpFiWzsRaT3buPF4bmX8ti5Ut99mm1KOduLdsgLe2hKoc0S9hLvmb1mNqH3V\n1Mdfdfjm6F+k4VnKShQS36N4ksa5Q9MZ0i68tpcVTQ252anUt/bTJyYYDcFH\nCxPdB6MNYYi2pGbefG0rqa4aBsblGYPqhbuubpL2GuPUgtwvX8PN5ww1PMx1\nl9QqsU1BcJjq7sSCAYd1ioNa6wLJWYsxlnzxCHsTnuRTbAGanHUGRY7GTZbA\nObJHTuxwJwpBNuU9sRK/RGxyPd11Za7hSSiplZkRe9wwsWWM98C+QaO920IK\nQvOgHqiA23nnGxjZJy8Skp3VuUup0fvF9g0p5Gvo+zcQ8RI0zX/pBJFDGX0s\nhWU2t7WhI/RNVIeRucGSUSOkQCkibk5UrUn03QCgjn5EGXV1N7JfwBgwHIPx\nARDl6bhf8ShuDrUDvxEELvZIxn//Yd6PZdQGmzt8oGzKQt89q0aP6bMYNOOe\nQ0h+FjRYDJ23RIL4VDtpvrkNKIy/tDTullX9TJlNl7q9WjmWWMnVW3AgitSK\nN2Jm\r\n=DLez\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_14.2.0_1529072105327_0.8931427746748763"},"_hasShrinkwrap":false},"15.0.0":{"name":"eosjs","version":"15.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-runtime":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.2.1","eosjs-ecc":"4.0.1","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"62d62f01e230842811d04d64565d8710b582ad71","_id":"eosjs@15.0.0","_npmVersion":"6.1.0","_nodeVersion":"10.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-L67+NCr2qDq88mWeplug3hveeVVuWCPglQu2eAiAUgZwYoQ/KrZF6pCbgVdQxP/EEFbjbs+uCpqryjX4mUWVUQ==","shasum":"8c9329bb640091db070689f050c2bf14d5219ec7","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-15.0.0.tgz","fileCount":19,"unpackedSize":1350773,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbJAUdCRA9TVsSAnZWagAAUVUP/0A346GOQWVqW1WFfhTc\n/zRP080c81VFaBr64PgJa0YhhxkdbN68a+VPWSBDf1YwhMKP9rd/caeG9Q1F\ndwhjHdKluDY5MFIxBT11kq8DkXH0Hv8HR9ibTkSQWICoPFs8yj9q+Wzu/rCR\nM5uxuK5r5v4kuVd5wTybVt+Yv3m5DURi9QwcRMSodpEbnQHbRUZCXfdP4VJO\nvlxjANTIIyK39Fc6AaL+6knPZZeXXClxtZUpOJLtrxloyCbUXTtBUOSrUkbC\ntJlUjfzuybQdIcmUqTW/zxERq60pVsDrWYGjW8YKRFDqWdOjNakTOUVHg3Og\nTasKChs+DUPnCwUvhJLCedhZ3CZQlUkODQ4RRd2t6629ufWGOazhzprmYUcW\ngA7eekXpT+lfx2xniz3fMCT6YnCZrA4Aug+VJv8/KQcTzVcFvLjDp3VOHr2Z\nK9g1hPLJzEYQkiF7fJOSJqDm1Zhyxa2KPzXFHYXw6RsL5dFUor9MAC9aGqc0\n00W8sh8X+MhjmPHoEkn0Pgm3qxc7fQcupRVhHMCMsuyBHlygyZHA33zB/5hP\nzrAaDl942XYRIe/Yho09TawefC7u4g3dbPhDqDJ2DVRi26KDAKHhy3lHRPzT\niQT2JKU9RprmV91AL6XhpxQQAk+67sz5Ssj/abKdP1WSUUgf4+8YJ3W0hNSs\nJ0cB\r\n=qGic\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_15.0.0_1529087260538_0.29848584944939094"},"_hasShrinkwrap":false},"15.0.1":{"name":"eosjs","version":"15.0.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-runtime":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.3.0","eosjs-ecc":"4.0.1","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"46b7fe11eb476965ef7e4575284eeff18de821fc","_id":"eosjs@15.0.1","_npmVersion":"6.1.0","_nodeVersion":"10.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-lA7JnF7USAcnm3TZa69ZQ6y1I6ORoaDt6cvaDjdrbfWBCOC8PAUTx0yihgqPLVwLgjPDtHZ0wwLcgOJm12F5sg==","shasum":"eae74b2e19e157934adb7db9f8fbf8d37f8e807e","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-15.0.1.tgz","fileCount":16,"unpackedSize":159758,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbKsw9CRA9TVsSAnZWagAAuYMP/3XMT8JmQW/KIs0HFsYb\nHavIoTrjdODygBohudYGamK+oE277TEmD12hlyP80xqQxocGawtZ3Zya4tUJ\nAN2lt7N7C7mWQC2TGoUEYi5k/D3FA9HnVNK4YqiMRIQQKvcCrglVYqKlP018\n6edNDpX6EUxLedgXgPnn8GjYQ3KUHGBEJlBWIAHm7HXfZGg148xL24PygvER\nw3RvQY5zpkcJ1wg8HlPRucNS53Tzs7hhE0cMC6xR73V2ELfyXlMQn6svcRe3\n1sDFZTOOsxuH9IHgWa2lgpsXHRNTJ3/iFw6V3sEiA0KRsaFycpa0VEH7pIfl\nuj1pSTjsQGNqe94ikpv6JttHAqYUF+mBWMrXXG7wQrfN+aCyCOHFKtQIeB0o\nHd1OSadRKhfSSPleOtHqL1B6iXNHirzt3Q4Ne2LIgaQrMGb1ExvPMe2R0IST\npwzQj1A6s+87ijVZtUtgvCXbgTPZ0cObw+M0RHmIKVmW4gYFUTNqsXV2vL2V\nmrHuMSVwKmJL4AMNPYWEObneYnpsjxuyzDcSMvu+k2UkF6VPl1UFTwR1U9Vi\nxEIGxgqH/e0+8/XKbekKRs7zVLmzZksXLlT72KmzwkPk9+TF+/2S6X3BtPXa\nvq1d0oWrLoJ7JHPBms9Ht5Dd37tRSy6HH5iZsp2LDol8UWgb+eqXaY2wj1mU\nwj15\r\n=D+1M\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_15.0.1_1529531451629_0.9192937640969987"},"_hasShrinkwrap":false},"15.0.2":{"name":"eosjs","version":"15.0.2","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && mkdir -p dist && browserify -o dist/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && mkdir -p dist && browserify -o dist/test.js lib/*.test.js","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-runtime":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.3.0","eosjs-ecc":"4.0.1","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"e38f616eaf369d41719a03ad227dfee5e5af019a","_id":"eosjs@15.0.2","_npmVersion":"6.1.0","_nodeVersion":"10.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-wwHOn3bwYtxxX0Gw2NYuyAiVesB/ncx8hRgVEwjABdsY4aE7kjt66c3gVyyrPcDxqZTXFUvFYWud1PNAHforsg==","shasum":"9cb8ffe6cdd2cf71c7dc093f677b9b2d189d26f4","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-15.0.2.tgz","fileCount":16,"unpackedSize":161677,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbLPAgCRA9TVsSAnZWagAAV2cP/2HlPFytu9eE/Cjz6yXx\nVtQvmt3avMI8kvabOTqU2okvAfwKanOZdQwqtxn+vPcRqJvvvufJ5PysQCM4\ns+EKYi9PNRJwvS6vDqjP0iSEUi5tFMATN8DutNKA3zC8nkZY+h+dEb0sMijk\n1bEWoUI8NzlevF0l50TTXSmS3KkpSQYbaDkjGYH5WVeZIE31ajxs3vZqakvc\nK5DYlTkmshujx9dyLSoJk0IEpKTCjPfpCOiOfUrZE3RUwsipCJ9lsy+BLdo5\niC2D1zz402jjhBzVv7oRxoysmLmihtVdUVxkkqAVtgWD1qCvmWxGddJSsImw\ngQ2/nSWOjGsQ+/CKmLJ3z9dupI4mwzmW6UIeKcfulV6cbfj9+K6mS7SH+Y8+\neA52G3wamkT879RVJuS/GkGWnOa1/L/R5Rle0oqINK2k1Hm/VQNCGdA0ulvu\nf8QG+tPPodRIYVtLQ/S8tLj8I4bKHX/7HwwnKQ/Ca/PKvytuXBTtgUoBV25A\nqSpXKdHpmxBPVKxgElunQ0EIjuf1Hh8DptWFUey3xRTRPdW/r7NPaFLWAWTu\nn8JvnPlpIF9j0HadJcfBKjR28GCE9dkpmE5uM11KLNojCPFggHJHrUWTsbX3\nHQSDrJmzz4b4JjiZSLHccthISr+BuSIpgje6IvKFGZ7lPbDCf/pjX3C4HAIV\nTYte\r\n=itcV\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_15.0.2_1529671712727_0.27807320366963206"},"_hasShrinkwrap":false},"15.0.3":{"name":"eosjs","version":"15.0.3","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","files":["README.md","docs","lib"],"scripts":{"test":"mocha --use_strict src/*.test.js","test_lib":"mocha --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && browserify -o lib/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && browserify -o dist/test.js lib/*.test.js","minimize":"uglifyjs lib/eos.js -o lib/eos.min.js --source-map --compress --mangle","docs":"jsdoc2md src/format.js > docs/index.md","prepublishOnly":"npm run build_browser && npm run test_lib && npm run minimize && npm run docs"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^3.4.2","nyc":"^11.4.1"},"dependencies":{"babel-runtime":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.3.0","eosjs-ecc":"4.0.1","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"f8f8d155dfb5bcaed15ff99205eb44f6b059bd91","_id":"eosjs@15.0.3","_npmVersion":"6.1.0","_nodeVersion":"10.4.0","_npmUser":{"name":"jamesc","email":"jslim180@gmail.com"},"dist":{"integrity":"sha512-SkQ1YgmVOzyn/iS/k51AE4vz+nydhuk9kKVXCzLGAvVi6trDWO3uP7TLPKQ4ItbUBbATHdWJpNojgq68yI8PSg==","shasum":"ccd2951e5aa45df2ee3e4180859274847d81a3ed","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-15.0.3.tgz","fileCount":22,"unpackedSize":2124057,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbLWbCCRA9TVsSAnZWagAA9zoP+wakgdcJB2Q/7TRZDd2Y\nTbBSV2YpkDyora/mfqsUzVVrjM0WYKOlIlTCMGNLh6eJpuKoOFLYEL4DnSmE\n1PBrKueX3wdsNHZv8VUa2B2WzWIB7ZR3H6sGCcVRKbIVeMHHWnELKip1xNvy\nTjTCBwRAvJLz4vkM4Ya6qWBIu5sfhvIoVBQR0o9xyd8V973B+Y/J5Hdrad1s\n8j4ITc98C5dOSaYapTCkguvPRR6Yw/mFU3umGl81o95TEROLePcJehKRzSMl\nmvclYAFF/tHoQcy1wH5fmSq28Uh1Lv0LJc3mcQzon+ogdpItMc/+ywBh6EhX\ny5oyCwlZaayceJZ3mPZARb9nIp6Ho7uybhMBsSv/Mw3tHOjWEv3CSYa6kECk\nBAFNUHO/dSScevPHmuMk8BG6tA6cryf3CSVSs/v4FnUWGVBSJsFwqTOPsq4c\nOf2ZyaT23ctIBoDUge5fQG0kHFHHG8XFBRK7O7hdROpWI6sE9/SfG3TBpyfL\nO/kddhygt78s90xgPOB0fWYrp1osUFi8maJz5b41Zzfrm9DFuWnwfzc1I1rP\nKs2MoAXn5K7b8kQpB+o5i/TWkvLfjnz/8gZowVnkfvC/0esjYDYav+s4WJZ8\nhfTKAML7Q+5DwtdFBPTSm6Pt+XgwE0pqGFemcjH24cwNOkjN6bWUEOh6/PCa\nGPsS\r\n=EomK\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"jslim180@gmail.com","name":"jamesc"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_15.0.3_1529702082330_0.5889690592747054"},"_hasShrinkwrap":false},"15.0.4":{"name":"eosjs","version":"15.0.4","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","files":["README.md","docs","lib"],"scripts":{"test":"mocha --exit --use_strict src/*.test.js","test_lib":"mocha --exit --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && browserify -o lib/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && browserify -o dist/test.js lib/*.test.js","minimize":"uglifyjs lib/eos.js -o lib/eos.min.js --source-map --compress --mangle","docs":"jsdoc2md src/format.js > docs/index.md","srisum":"npx srisum lib/eos.*","prepublishOnly":"npm run build_browser && npm run test_lib && npm run minimize && npm run docs && npm run srisum"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^5.2.0","nyc":"^11.4.1","uglify-js":"^3.4.1"},"dependencies":{"babel-runtime":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.3.2","eosjs-ecc":"4.0.2","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"33c0849507cab0099e61ea7f5ac6b93a7be31a13","_id":"eosjs@15.0.4","_npmVersion":"6.1.0","_nodeVersion":"10.6.0","_npmUser":{"name":"jamesc","email":"slim2k@protonmail.com"},"dist":{"integrity":"sha512-fGK5a52m7YeNMM2MqG3FjUD/HtVqseKh5tMHgZa6oHWmc8IP8Q0AjyGbsATxT3BAZ6tiWfbrAfzgGjbzHD6llg==","shasum":"b01d258c17ec4aa4aa2f93987508141ab6a0efaf","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-15.0.4.tgz","fileCount":22,"unpackedSize":2125058,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbTkLxCRA9TVsSAnZWagAAuqoP/1dLOJNquSVMcFQeqJYW\nzfSAw49tNPE1lR4JT/ZVswrk5ouaWZFTgbEm0aXiYGQkp7vreyoZQRyLsGGp\nC16Ukz+a2y8hCJzubHTFWmrQFBvBQi8fX0vewEI+mQtaki3TUMAamTfLlJhZ\n8cN538baItTfnBGWm9I3EC7JZNVW9lIOI9fh4o2/+AWZ2Xo5SzRNSQM2DT+y\noffN/LbCku39kloWjq0WlBqW4VZwK2Ow4VzmaZNtIa8r5W6aw9KzD6AMUVlI\nCwAxw0G7ZJhaxzbunueJUahewS6dxNF5cBaZxkw4FDIBfGtmPQ5XxSggK5qA\nfPbZtEel88y6QTsXVVuvGmFlqulncqRkQwcc0Yxzl+sMQgXtXbh9jqkCLqe+\nLApoJYxPOyAISJkdEGN1QUZTX1shLpzzr+cxpHh/ZEa9hK6YfvWlfT3Enpbc\n9PdgS0/41z03HZ9ikqGUQJqGTwTKc3uU2NMbXp83k6rfujBNwiVdJOIOjIjF\n6VLs3Hx6ZxvV9vtksys6feQPo9CZZxEIT8Bz3fK1kpkUcJBryL0s6qskUaBW\nWXb2hSPMrlsycYi+ptcSEIVPtV0Rq+QaCgdEYzFpgGqvK+ytlwq2rsZWCQLL\ngQY4JHJkBtBUAMpUqRWn0pU/t7vJw1VOchre3MemzI5p6K57hk04xXDok70A\niXwu\r\n=pPzV\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_15.0.4_1531855600838_0.5696765555869119"},"_hasShrinkwrap":false},"15.0.6":{"name":"eosjs","version":"15.0.6","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","files":["README.md","docs","lib"],"scripts":{"test":"mocha --exit --use_strict src/*.test.js","test_lib":"mocha --exit --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && browserify -o lib/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && browserify -o dist/test.js lib/*.test.js","minimize":"uglifyjs lib/eos.js -o lib/eos.min.js --source-map --compress --mangle","docs":"jsdoc2md src/format.js > docs/index.md","srisum":"npx srisum lib/eos.*","prepublishOnly":"npm run build_browser && npm run test_lib && npm run minimize && npm run docs && npm run srisum"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^5.2.0","nyc":"^11.4.1","uglify-js":"^3.4.1"},"dependencies":{"babel-runtime":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"6.3.2","eosjs-ecc":"4.0.2","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"f466d585b3f4f5ea1eba0eaf15eee80610cc6b05","_id":"eosjs@15.0.6","_npmVersion":"6.1.0","_nodeVersion":"10.6.0","_npmUser":{"name":"jamesc","email":"slim2k@protonmail.com"},"dist":{"integrity":"sha512-vEEujO3L0iFx8qkbm9FOQLy+gbPJlEkuZAK+zbN1Fwsv/7uDUm5s4YERB10qF/zYPnzxKMEhQ+Oyvmc/JdaW4A==","shasum":"4180fa8baa5b2e838941cc47d37fa4f1a36e80c3","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-15.0.6.tgz","fileCount":22,"unpackedSize":2119516,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbTkdiCRA9TVsSAnZWagAAmP0P/j5Ghxc5kf8j3U9soMCB\nJ4BEQskAkyie2HaUQK8fCb7gCX+1rKvzlr8sbUbeM/E5YacwQLLhIc4yjSH1\nviUyW7g1ucUMJeFMVGPAeiS2bNT2f+X+SXYWSvLRPknk2wnfuhRXp96fgeR8\nwElQ+LcuFW+MXvsKZ0+yPk3JGKMUfaUi7ZKQl/hyvJVXJWtIHQRVDKQYu5O7\nS5LbW0C8GF65khTikCvCTzNyQPt0BdoCww5N+CntyZZ5b0Y1stkH9ojVO/EE\nJ73mjQ6IhAgQ5zCj4CkgWuR6QGI6nvhH3M1T0Xyb5AADT5HpZ1fq3Pw/I4nJ\nwnHaJCVVnKtURx/SLUdKheWK4N0EFB0Z1oADerWtsgfXEWIjdQSZTTwfnx/W\nEGNeMjEFU3SAVc652HJ+6ifMdyR9R0K9q9gldPaRwunInzgPbDIiJt+bEKcm\n7oJoEan3kVjhoyXxgYUGRppDovn8r9AsDUzTcEb1hWIwIG6fUbWyad/zFqmz\nvO597HJo1lZnJZOevH2XNO3uqx9VvTHwohEQ7HApGB6kYz4DOspL4s9OT/UE\nKlzCCRBA+agIzv5jSkeDK57r4d7sBc0YdovnA9BkeLK5cvZmxSPck7ZaRI6a\n7iszaHUdVMkmwjlS495xJgtZN7jKTi0EWyb29eg2lNNUUNpoq8vPsGWoeKxC\nVk7H\r\n=KpcO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_15.0.6_1531856737980_0.9767039129252375"},"_hasShrinkwrap":false},"16.0.0":{"name":"eosjs","version":"16.0.0","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","files":["README.md","docs","lib"],"scripts":{"test":"mocha --exit --use_strict src/*.test.js","test_lib":"mocha --exit --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"babel --copy-files src --out-dir lib","build_browser":"npm run build && browserify -o lib/eos.js -s Eos lib/index.js","build_browser_test":"npm run build && browserify -o dist/test.js lib/*.test.js","minimize":"uglifyjs lib/eos.js -o lib/eos.min.js --source-map --compress --mangle","docs":"jsdoc2md src/format.js > docs/index.md","srisum":"npx srisum lib/eos.*","prepublishOnly":"npm run build_browser && npm run test_lib && npm run minimize && npm run docs && npm run srisum"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"^6.26.0","babel-core":"^6.26.3","babel-plugin-syntax-async-functions":"^6.13.0","babel-plugin-transform-regenerator":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-es2015":"^6.24.1","browserify":"^14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^5.2.0","nyc":"^11.4.1","uglify-js":"^3.4.1"},"dependencies":{"babel-runtime":"^6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"7.0.0","eosjs-ecc":"4.0.2","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"31e0e133310b98a627fcb0c4df3b182460de36d6","_id":"eosjs@16.0.0","_npmVersion":"6.1.0","_nodeVersion":"10.6.0","_npmUser":{"name":"jamesc","email":"slim2k@protonmail.com"},"dist":{"integrity":"sha512-R/vjpjbDkKcDZEc9gWEKwI5qI1Hs6ibR0T7Swn4nI0PS+KnbKt+OuqIsU/PK0Y4N3RB+QBclDSbrCDKCzLOfCA==","shasum":"d88fd6bd8408882bd0d8a4bc5abe22827a8c9ecb","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-16.0.0.tgz","fileCount":22,"unpackedSize":2125249,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbVkiACRA9TVsSAnZWagAAWpwP/1dUjCDBI+qM00FUjlJP\nIKS6TcBtnqS0lVYu26flmAdg06TqvgPaRGZ583vA1Cg2TLc8rywpkvaXfIJz\nsN3A3tdx4cGZyUGb2ry0PKAI+1xFyllcuhZjcMRRAe48lKQtrduRO7ksNL1a\nx4heud4MS8rb0Vr2K8xQYje2qUAW5hE1yEJnbOzC1CdjkRHWoKoxF+/oll+3\n5mtG1N4NCFel/gF1sfn1h+yv6aHw0TgA3I154BjQcrup9bOtz9YuHOI5p76g\nTkAzoiN32mH3/OXoP8jOYrbh/V3q7CVEEjumJlcXrB7UV32Q+GIJGiVNc8vl\nbHJrMWtLPJzOJcxLoiiqL2QTajV3V2D70ZZmv1r4Jq/RTchgVThE6Y9P5292\ny/h4vt4+KLwU1YjpSwhHYsyVi9B0osuL5ZvcMR1uNZNgSIcI0GtcK+w5Ju/Q\nJOxH3xKiqhyP8TG0qoM/7mxusiVK31dixDYRaSB7IgwWgbR49KvsFHtrvhgN\n2XZ85MdLHFp7jnVGd9nFBaFVXH1skicBNKHNQersQZSHham96ShLiwkJdOps\nJeuMTdBDqhaxOLoo7U51V7NmnyhhyY7sPrjLNn9Upw+2THyQ0uRpaqnuRRsQ\n8Sfq3Slx2cxcqhNWxk2/aGbjybTtHXjEGkkhwEK5PdYWnZa2jT1CuRnkes58\ncaZ4\r\n=JNcQ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_16.0.0_1532381312235_0.5427834610271776"},"_hasShrinkwrap":false},"16.0.1":{"name":"eosjs","version":"16.0.1","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","files":["README.md","docs","lib"],"scripts":{"test":"mocha --exit --use_strict src/*.test.js","test_lib":"mocha --exit --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"npm run build_lib && npm run build_browser","build_lib":"babel --copy-files src --out-dir lib","build_browser":"browserify -o lib/eos.js -s Eos lib/index.js","build_browser_test":"browserify -o dist/test.js lib/*.test.js","minimize":"uglifyjs lib/eos.js -o lib/eos.min.js --source-map --compress --mangle","docs":"jsdoc2md src/format.js > docs/format.md","srisum":"npx srisum lib/eos.*","prepublishOnly":"npm run build && npm run test_lib && npm run minimize && npm run docs && npm run srisum"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"6.26.0","babel-core":"6.26.3","babel-plugin-syntax-async-functions":"6.13.0","babel-plugin-transform-regenerator":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-es2015":"6.24.1","browserify":"14.4.0","uglify-js":"3.4.1","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^5.2.0","nyc":"^11.4.1"},"dependencies":{"babel-runtime":"6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"7.0.3","eosjs-ecc":"4.0.3","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"44a78775347da05eeaea45a7d854e7bb81fea358","_id":"eosjs@16.0.1","_npmVersion":"6.2.0","_nodeVersion":"10.6.0","_npmUser":{"name":"jamesc","email":"slim2k@protonmail.com"},"dist":{"integrity":"sha512-6+1z88hXDLJjXgeQqBVCDb0rA9bYdGiXBylw8NwVWGJTBOLwmqfOGxtyTJiE4quBNGwFVhRUHwZK9s2PdNoZeQ==","shasum":"b298cbdb75ddb8ab88c256ac036c33b0b33f2ff4","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-16.0.1.tgz","fileCount":22,"unpackedSize":2137409,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbcjYbCRA9TVsSAnZWagAA9x4P/2FQl4RBIr7ScPNyKuMc\neWN2QjIVPuN4B35SsiaSu/Yfqi5DeZN1+mKPqeXobdrhu20NA6eOMFTXhgdI\nTUJ+AE8Uqll+fEufGQSyZL+b4h04vwVG2KUL4w4Ptc6FQzVKMgiVB92KxIFn\na6YN3ikUC/Y6fMiE3SnkrRjp4m2caWAcz92EgHYRFdtNRCpW4WBiBcghmct4\nTOOCiNrWtZoD0at+nfOYyzzMFX4dItRSfjrY3mJHgxDmDCIOMne+nRpJe6gL\nLV9n+uaHelMP2SJRmO1/CXyRtSmCLdK+sicLt+XPnoC4Tv3KOR79rTPhqfeT\nSU6WbgeSt0iS2GuFjCUbizh8QnwwYDwUovtTBQYxuKziynNQrNVfJD4m8Ldt\nT6yIMwaLyGlU/RCvkBq3zeBRnWv78MffgzHYpHRjQUa53XkT6f01bOtb6vmC\n84Mxb2CMTwUfg9CdMBjcXS8XDTLeOv7C1vj0T2aktUoOI+d85ybbWWihBdFI\nCROO1NMH+MtlmauqmPh56xLl8bHgCxThi6qn3o7OEN8v8qdWe8uCjYxee5G9\nDqzlapSAqNEX221LPKI9ijAK/Y57CIEUtcKbQKrUjb7wksX0JABFzHEXDxvo\nWQ/5E9QMtFLKHDqRp4LQJcubapcldPtS3nWYs05seNT6IzuvV+f0tMM0+0gr\nCqkN\r\n=knrI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_16.0.1_1534211610754_0.06789350754013346"},"_hasShrinkwrap":false},"16.0.2":{"name":"eosjs","version":"16.0.2","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","files":["README.md","docs","lib"],"scripts":{"test":"mocha --exit --use_strict src/*.test.js","test_lib":"mocha --exit --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"npm run build_lib && npm run build_browser","build_lib":"babel --copy-files src --out-dir lib","build_browser":"browserify -o lib/eos.js -s Eos lib/index.js","build_browser_test":"browserify -o dist/test.js lib/*.test.js","minimize":"uglifyjs lib/eos.js -o lib/eos.min.js --source-map --compress --mangle","docs":"jsdoc2md src/format.js > docs/format.md","srisum":"npx srisum lib/eos.*","prepublishOnly":"npm run build && npm run test_lib && npm run minimize && npm run docs && npm run srisum"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"6.26.0","babel-core":"6.26.3","babel-plugin-syntax-async-functions":"6.13.0","babel-plugin-transform-regenerator":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-es2015":"6.24.1","browserify":"14.4.0","uglify-js":"3.4.1","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^5.2.0","nyc":"^11.4.1"},"dependencies":{"babel-runtime":"6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"7.0.3","eosjs-ecc":"4.0.3","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"2e46239be0655b4f670b4f9f1237698aa2b41316","_id":"eosjs@16.0.2","_npmVersion":"6.2.0","_nodeVersion":"10.6.0","_npmUser":{"name":"jamesc","email":"slim2k@protonmail.com"},"dist":{"integrity":"sha512-f/2CQvv86PG6CDedsRBDMhMRo8RtduaAnNWQMPa6ApGbRg+a9j558FGLXVWZru1XHvRhursqiNgstey0z/z1Lw==","shasum":"7172210cdb18a5c3d8aabadce4b7303bebe73203","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-16.0.2.tgz","fileCount":22,"unpackedSize":2137409,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbcjcrCRA9TVsSAnZWagAABUMP/3TSfP8R/fcoPBm+oSyS\niPKXOx37+9/16Ci0W6gGslRReINb4BcEapuHevvflrvwNiNz7RGsn3EBHSLE\nsEXTZvIrM11wPwaLQd5N3F7AqJs99vPfeQ3wfiDf15j+3qDWYo4J2j1agpNK\n77dTj5WpB5olF53OMyq/9UjsGzH/wbyEmbxK2ggJXpFn+Hlfcfz5V0GiRPyW\nnnqUIBRTWF9iV1lhsD7Ga7qEFtINYPta+njzvVIwzSIGEjaJ9T+pbBvSGx4z\nizTR9zKor2arfDIAEfRvUzp2Rbnth6o/ZbVSnXu12UpF24nQ+2cxaT+15hZt\naaaza5A36xNRAdunzTS2f9nTmHol+/dCvcrGRAeU/HlI/RqxS8ts6AT2yOpT\n/IZn7TFK2hf3GsgYSqulCWL7mUNOO4LrGi6C1XLgKx0QgbRJZbKS8KupIQeW\nFb1SNVl3g3jWCSuPiNab9u2N+rvRXB1ARVrcRZTb+mGmoDJrHXxxoZZ16IX/\n/PJlfqbJHBkRr7HfqJd1ia6ZXS1v+andnJC+Iha2AzfiFmAwk7C6M6XavFK3\nlsg+mZM33nFiwiK9Jl+fFDqijZyeAaeSjGvTenvKWx1saYuOa1FOykcA5DTL\nBSM9D0nXDmMgDjDmEzcRQTeMrELl/ltMpqi5eZkqaORfBs089qiaB8lHQDNy\nY69p\r\n=TC3h\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_16.0.2_1534211882638_0.7582335244117149"},"_hasShrinkwrap":false},"16.0.3":{"name":"eosjs","version":"16.0.3","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","files":["README.md","docs","lib"],"scripts":{"test":"mocha --exit --use_strict src/*.test.js","test_lib":"mocha --exit --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"npm run build_lib && npm run build_browser","build_lib":"babel --copy-files src --out-dir lib","build_browser":"browserify -o lib/eos.js -s Eos lib/index.js","build_browser_test":"browserify -o dist/test.js lib/*.test.js","minimize":"uglifyjs lib/eos.js -o lib/eos.min.js --source-map --compress --mangle","docs":"jsdoc2md src/format.js > docs/format.md","srisum":"npx srisum lib/eos.*","prepublishOnly":"npm run build && npm run test_lib && npm run minimize && npm run docs && npm run srisum"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"6.26.0","babel-core":"6.26.3","babel-plugin-syntax-async-functions":"6.13.0","babel-plugin-transform-regenerator":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-es2015":"6.24.1","browserify":"14.4.0","uglify-js":"3.4.1","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^5.2.0","nyc":"^11.4.1"},"dependencies":{"babel-runtime":"6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"7.0.3","eosjs-ecc":"4.0.3","fcbuffer":"2.2.0"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"764ccb9eba2e428bc83b37790330341f9361eeff","_id":"eosjs@16.0.3","_npmVersion":"6.2.0","_nodeVersion":"10.6.0","_npmUser":{"name":"jamesc","email":"slim2k@protonmail.com"},"dist":{"integrity":"sha512-/zGPGkPZvYFXU/N5J/lpxP8nSS+l73wnt8nwvEu1VVNXOrFXysmulkB55y9P5lV4eycqplc/x4KKahc73Pv8pg==","shasum":"77c811da7d69f3be7a22f5543813c5dcfdd2c03d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-16.0.3.tgz","fileCount":28,"unpackedSize":2200246,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbeEi/CRA9TVsSAnZWagAAAkoP/jvDSMPG2PRVCuxwA8eD\nOR11KkFWTLcWRJWSnVYbAZonIrOiYKVz8fdfHJEVu/phS8/+jzUgzSEUHER8\nEQzrvgI6pkmlAIfksi+HUfQfwr42DD74tZX6TW38sWsXk8OVVTf+o3Vqz9EE\nWdHE1JzwAeL63xRmsxkVzry2qX2ZanmyuuTeqylNP75VH5ddoEtiNt7YW7F3\ntAWI0aW0E7VUH6UZXkhe8aTVC+T04UwOillRGMuWl8s8MkG9ZvnTIYjm6EvE\nSSj3q8ujX/sbhLngSM6xjh8IAruJ2bjTczGC1Nqqqhb1JPq8/engl5j6egFz\nuG1GMpIeIanDFdHMh3enh7hSRUY4kYfyB8bXymdnYYsrbtwhITiiizx8wv1Q\nVEg+xQ03rnUq4BWPRVXv3Md24gUWCpv3RsFORHngDuNrdIbpYflsPxst8zy/\n9+c69wzW1cin8Ao5tB6gHU2WPcAKbprmc5qr+u8kL8ZfbTFsA7zlbPXy9BCS\nVeglhHB1P68Q7xmpuTxyTrupt08RGv5mvvp82ygs6cxVJmwvc8uFhm4MtsXO\nELstyVdlrmWntOtuEdnUlS6snZv8WNc4BbOvsB7LHSrD9FJKp5c+DBTOKbyL\nzTb3tvz1rNiWHhF60sQt+Sn6KfemPXXdarbpUfP7GjIl/5eFlbkoqEQc7xkv\nM43V\r\n=Ulsn\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_16.0.3_1534609598487_0.6826524653796118"},"_hasShrinkwrap":false},"16.0.5":{"name":"eosjs","version":"16.0.5","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","files":["README.md","docs","lib"],"scripts":{"test":"mocha --exit --use_strict src/*.test.js","test_lib":"mocha --exit --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"rm -fr lib && npm run build_lib && npm run build_browser","build_lib":"babel --copy-files src --out-dir lib","build_browser":"browserify -o lib/eos.js -s Eos lib/index.js","build_browser_test":"browserify -o dist/test.js lib/*.test.js","minimize":"uglifyjs lib/eos.js -o lib/eos.min.js --source-map --compress --mangle","docs":"jsdoc2md src/format.js > docs/format.md","srisum":"srisum lib/eos.*","prepublishOnly":"npm run build && npm run test_lib && npm run minimize && npm run docs && npm run srisum"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"6.26.0","babel-core":"6.26.3","babel-plugin-syntax-async-functions":"6.13.0","babel-plugin-transform-regenerator":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-es2015":"6.24.1","browserify":"14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^5.2.0","nyc":"^13.0.1","srisum":"^2.0.0","uglify-js":"3.4.1"},"dependencies":{"babel-runtime":"6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"7.0.3","eosjs-ecc":"4.0.3","fcbuffer":"^2.2.1"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"5fe356119d1dfa7b811d71a97ec4a2599c18a54b","_id":"eosjs@16.0.5","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"jamesc","email":"slim2k@protonmail.com"},"dist":{"integrity":"sha512-JTq7/oXDcZR59XoJMvRrMpTPkkw7vh/oC48vaWPjfg8nqWrCklGA2ApeFs0tfRrlpccDVCmVuNu5Bwvscg9lZA==","shasum":"182aaec0347ed520a2390ce5bc7679dd9516fc48","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-16.0.5.tgz","fileCount":23,"unpackedSize":2170367,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbefy8CRA9TVsSAnZWagAAmMUP/iEc/75CbxvFqMkcHIHu\nyAnfo/qt7LdzyRCPEUdpFLPEkjR2RYWJ22ppgxM7fBUmjxXR1Xqrx+1galXM\nK6Me5AdapS/fzhFjMmxWDtie+sE/efzw43n/prqeC9K1tZqLaIl2MjPxiMER\ng9wFe5PcUSKaLWpYFxyNI+lv3eD2RVTFpA8OmujJE2054b1F1xmlRVUYeqOy\nC4FQcRAsbnYX+AYkLtmxFuuVVbxXYhrq9ZThjXNxPBj2uNTqCEblRu7vBarE\nyowYFSFesQNNOdsvu4XcQuJ9hnQlYekWgaDWYAyjgyFgQwDywnjCylDOdbmk\nk35negory12loGgUPciB04ArMPelodNU18N/md+zSl/FLJaqjDrEspn+r41b\npbnvolMMbQ4Jkl7hoMiFAUrLwZtsDYnmAlh10qxNk604WGA1GjAbDiNTHPXW\nKzGdeNABr/7zkjtQ3DQKukXdZxLXToFV8kN/khip1ovsZXGcCIYB7VLNa/fK\nVeGAKSkAT7oD7gJVWIOA7GoLSZnd9FPI0qD5zTwZFVPnEetU3dfSzfa9xo/9\n07wyDvyUPt4v1C96cyrpTME3bx9bWMkdFsbL8ok/TerIS8yylQVWKAHppAyz\n+Z/7r4tcJdwslh1qr/cjtmX5q9n8ObAZRiZObqU+Pq6EH5YWWID7YNiA6d0x\n9i1z\r\n=eQ56\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_16.0.5_1534721211104_0.37222116311391873"},"_hasShrinkwrap":false},"16.0.6":{"name":"eosjs","version":"16.0.6","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","files":["README.md","docs","lib"],"scripts":{"test":"mocha --exit --use_strict src/*.test.js","test_lib":"mocha --exit --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"rm -fr lib && npm run build_lib && npm run build_browser","build_lib":"babel --copy-files src --out-dir lib","build_browser":"browserify -o lib/eos.js -s Eos lib/index.js","build_browser_test":"browserify -o dist/test.js lib/*.test.js","minimize":"uglifyjs lib/eos.js -o lib/eos.min.js --source-map --compress --mangle","docs":"jsdoc2md src/format.js > docs/format.md","srisum":"srisum lib/eos.*","prepublishOnly":"npm run build && npm run test_lib && npm run minimize && npm run docs && npm run srisum"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"6.26.0","babel-core":"6.26.3","babel-plugin-syntax-async-functions":"6.13.0","babel-plugin-transform-regenerator":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-es2015":"6.24.1","browserify":"14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^5.2.0","nyc":"^13.0.1","srisum":"^2.0.0","uglify-js":"3.4.1"},"dependencies":{"babel-runtime":"6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"7.0.3","eosjs-ecc":"4.0.4","fcbuffer":"^2.2.1"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"e1318ce5e3b38b6844e3af86210d5259c5a450e1","_id":"eosjs@16.0.6","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"jamesc","email":"slim2k@protonmail.com"},"dist":{"integrity":"sha512-doFFyt7zgM5vk4Sl60WNs/rbq8SAkE2Zoz3Y1GpeXWDikVAnME3A/csu5vANIjRUTBLWVGRkHTVZWBb8Jg/42g==","shasum":"4cd301e33b29bae35ac869375b5e50ff564f9f9e","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-16.0.6.tgz","fileCount":23,"unpackedSize":2172051,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbfXXUCRA9TVsSAnZWagAAXhwP/R2MvFfJmmpmmBqtrKqM\n7LSGsuqZwuyM1iSi+Cy+nK31uW4mTZ58/+3Fc6h7kNfj5wVZE4FJZL81zdRZ\nc+9fb6gOX+CHlyRz1gmFeW2KobmM8dohwHhyeLgddq5jQE+1CjZLQ4GgI2Ak\nVjqING06oqFJhgK4QMad+4PlT3pEw3w3IiwMqw6lrnDVOe8pt8TbwQQkH5ah\nLQ5/X0BVcbTABGGBs/Ie0ZjwluBmjlecsHM/SMj8NhgdBq32iHlufVMM9X4z\nPgCsdS9eFdWASi09nJKkfg6ZX5SdOFCgCA0ZNMR66CEZtcXLuboUg94g0CUj\nnNy8tv70nNnjQGDlKYsZGBj/daIOhgvbEOhfixc6bSeQR6PCm+MU2HmQLsEw\nKgXdR1m0ggGLpmxWMz8ADMlmLNaqpqqFdyW49W13Bw2XZf6Ee7lTRhqv+Mu4\n2byxc389w0356vKxb9eFTpHEE/DcqgAJ9uaDkk5rqHBofcq43PQ9OhIQ4ion\nSiQcqYAYhc4dNgfWOSqpaYBo2JThtCyq8boeIRPK5QPYF0meNFVST33uEFmq\nEcDgoSWzMhr4jyHXjIi55wpksJMZ2jhuEtswmScI84W4JIIZ697mgN8lAFHY\nuF+JcNjh+8yJffgxTQufDWtvXiFPldkW+8efWUBf17K7uOAxCXTjT7gUv0cD\nGCl7\r\n=cLwJ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_16.0.6_1534948819300_0.09395339331815489"},"_hasShrinkwrap":false},"16.0.7":{"name":"eosjs","version":"16.0.7","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --exit --use_strict src/*.test.js","test_lib":"mocha --exit --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"rm -fr lib && npm run build_lib && npm run build_browser","build_lib":"babel --copy-files src --out-dir lib","build_browser":"browserify -o lib/eos.js -s Eos lib/index.js","build_browser_test":"browserify -o dist/test.js lib/*.test.js","minimize":"uglifyjs lib/eos.js -o lib/eos.min.js --source-map --compress --mangle","docs":"jsdoc2md src/format.js > docs/format.md","srisum":"srisum lib/eos.*","prepublishOnly":"npm run build && npm run test_lib && npm run minimize && npm run docs && npm run srisum"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"6.26.0","babel-core":"6.26.3","babel-plugin-syntax-async-functions":"6.13.0","babel-plugin-transform-regenerator":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-es2015":"6.24.1","browserify":"14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^5.2.0","nyc":"^13.0.1","srisum":"^2.0.0","uglify-js":"3.4.1"},"dependencies":{"babel-runtime":"6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"7.0.4","eosjs-ecc":"4.0.4","fcbuffer":"2.2.1"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"745603a982ded9781721c46a1209d98640527928","_id":"eosjs@16.0.7","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"jamesc","email":"slim2k@protonmail.com"},"dist":{"integrity":"sha512-sUCshxBTzvN+WRolnOFWENA/POPoIYMogmrQveNkLK3aZ5ey0prGD6anRVkIjeiTdHs6fiKBJ8TTHK8zfHVLwg==","shasum":"9771d10f9ca1665b25750cbd9d9543db61dae78b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-16.0.7.tgz","fileCount":23,"unpackedSize":2176420,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbl+3JCRA9TVsSAnZWagAAEuUQAJ0F/hzSN/S4UlfJSZww\nGh5EsgLxkkam2rSRmQANgP/O/a5wkK+6e/ooXEGuklsWl8S5hMC2DTLSEQcJ\n3VM3Be4QIhLUoy29MeslkvmqHjrsty0PAfGwFwrtiV5jCuPPunsMDXoJfV4V\nyuACIFGyGOLMzsQREnZcHgfvOpDVjHQw6hHU1v0mqOGLOsI9Vu7RAEvoAHwh\n3f/yp1i1gwRE03SnaxntKWRGRyAmThrcpaWNN5Bhz500UnntE3eIeqv5CoDD\nEP1owvCvkSQtYzRmYDo05hM9XMSMC0SUXgrPX/3abCIA577Y5Ya2Jj2ZzFw+\n1fW7Ie4nY4iJgsVWho+imw2Su4UFkt+LB7iRcC7MOWwITxbdKYcfnzBz1Xok\nRfbDt02w5/LxtMnIpzFciuoFLJoeJ2QLg2Ht1RlJ8AyRz5Hu6DAsoAwiriwl\ngnk7yuRe0ag7heMudt66GFqGOS17HS15OCD9xzZ/ommJ2rfm22N15Nv/X9qP\ndfnva1uh9Z91dJAJJ9IBPDnOi0yGIH4RVS4jFrKjjxQGpovvocFyGDlsWhDB\n9QeSAKaA9pdowXvGcaxS9rspGoCpIfaVtUIs9hYu51JRTzJ18ih3nAUtZa1p\nMUII39urM6ZsRL6Mfz8lAtRbE9MGKJ58PR3jNS/Fy0GvgsOw9uVV9RnK+YvL\nJ+iu\r\n=Utq6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_16.0.7_1536683464468_0.9479105013182336"},"_hasShrinkwrap":false},"16.0.8":{"name":"eosjs","version":"16.0.8","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --exit --use_strict src/*.test.js","test_lib":"mocha --exit --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"rm -fr lib && npm run build_lib && npm run build_browser","build_lib":"babel --copy-files src --out-dir lib","build_browser":"browserify -o lib/eos.js -s Eos lib/index.js","build_browser_test":"browserify -o dist/test.js lib/*.test.js","minimize":"uglifyjs lib/eos.js -o lib/eos.min.js --source-map --compress --mangle","docs":"jsdoc2md src/format.js > docs/format.md","srisum":"srisum lib/eos.*","prepublishOnly":"npm run build && npm run test_lib && npm run minimize && npm run docs && npm run srisum"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"6.26.0","babel-core":"6.26.3","babel-plugin-syntax-async-functions":"6.13.0","babel-plugin-transform-regenerator":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-es2015":"6.24.1","browserify":"14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^5.2.0","nyc":"^13.0.1","srisum":"^2.0.0","uglify-js":"3.4.1"},"dependencies":{"babel-runtime":"6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"7.0.4","eosjs-ecc":"4.0.4","fcbuffer":"2.2.1"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"5107933dff1863a86a112889a1f65429b7537a07","_id":"eosjs@16.0.8","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"jamesc","email":"slim2k@protonmail.com"},"dist":{"integrity":"sha512-1U0ojoIVSSX2u41tncnDXAaD6RCG6pWSoi9vpHhxUIOldHKdejzYE1UMDd0bIShJMZykyhWDrkYd+Vwi/WHGaw==","shasum":"3cc9484ba33056306acd5aec828e3692838b30e8","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-16.0.8.tgz","fileCount":23,"unpackedSize":2189459,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbnXS4CRA9TVsSAnZWagAAHW0P/0q1jKLisbAIA9bdbtWQ\nJXWGih/g99h/dgiukKD9jLMDSxAhITH3mKobtUmErFCpOrinPLWZ73SUneBJ\nGjdPJcUZfs/wHqqRxiYpnF+Jrlsa58GzqBswsYODDTJ5p/vFXi3Fptqtop9J\njywFX0Y29+Hxff+slD9vmT/MJgaKOj4YSdTO20rq5o5zcppZS/U99ckfqGCD\nsdhF4yUK2e1hPpIQlZ5oy4k8f3Jdo3WJnnFeQSITq1fkZ+J48mhvdz/u58ZZ\nRereTCyhDf5U598SepRssFOvp/P+63IKexGI4W0SmYqfuhyCwRDXRBQIsdsx\noU82nViA0Hayd0p0rGaiQJ/1k/voBJ0kLQ9S/g72ciC3G5NMPw3VxE3cJ+qm\nV9bNeg0G3yTx3nWORQMUQLq51JcQpl7pSbuMwrS+WfTC88SegukSeZaTJZa1\nzpmFz9ATNPaYYWQakqcsJ4K1pmph6wgEbKmKWCFhNGw+ydqFWhqepJ81Q+nt\n2TZzTMT07b2BaT8P41OJUYwopTqGs4nB/6cM6nenI2VCx/E3sWZ3tYCRXuAh\nL5MNk3kHKxpczlGmxpCfHIeDuphfN3rapSppl/nWb+6FWtdOJR4bwmgUl288\nJL0MlN63bjCHovNIjFvt3QCT0M1U7uKPi3xg0kguNRaA+TP6t6TaQmWc+nQ/\n+Bz0\r\n=2tou\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_16.0.8_1537045687581_0.5118182800642734"},"_hasShrinkwrap":false},"16.0.9":{"name":"eosjs","version":"16.0.9","description":"General purpose library for the EOS blockchain.","main":"lib/index.js","scripts":{"test":"mocha --exit --use_strict src/*.test.js","test_lib":"mocha --exit --use_strict lib/*.test.js","coverage":"nyc --reporter=html npm test","coveralls":"npm run coverage && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","build":"rm -fr lib && npm run build_lib && npm run build_browser","build_lib":"babel --copy-files src --out-dir lib","build_browser":"browserify -o lib/eos.js -s Eos lib/index.js","build_browser_test":"browserify -o dist/test.js lib/*.test.js","minimize":"uglifyjs lib/eos.js -o lib/eos.min.js --source-map --compress --mangle","docs":"jsdoc2md src/format.js > docs/format.md","srisum":"srisum lib/eos.*","prepublishOnly":"npm run build && npm run test_lib && npm run minimize && npm run docs && npm run srisum"},"repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"keywords":["EOS","Blockchain"],"author":"","license":"MIT","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","devDependencies":{"babel-cli":"6.26.0","babel-core":"6.26.3","babel-plugin-syntax-async-functions":"6.13.0","babel-plugin-transform-regenerator":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-es2015":"6.24.1","browserify":"14.4.0","camel-case":"^3.0.0","coveralls":"^3.0.0","eosjs-keygen":"^1.3.2","jsdoc-to-markdown":"^3.0.4","mocha":"^5.2.0","nyc":"^13.0.1","srisum":"^2.0.0","uglify-js":"3.4.1"},"dependencies":{"babel-runtime":"6.26.0","binaryen":"^37.0.0","create-hash":"^1.1.3","eosjs-api":"7.0.4","eosjs-ecc":"4.0.4","fcbuffer":"2.2.2"},"babel":{"presets":["es2015"],"plugins":["syntax-async-functions","transform-regenerator",["transform-runtime",{"polyfill":false,"regenerator":true}]]},"gitHead":"be807e61c06d23410788637fa7309120ff1d9e65","_id":"eosjs@16.0.9","_npmVersion":"6.2.0","_nodeVersion":"10.9.0","_npmUser":{"name":"jamesc","email":"slim2k@protonmail.com"},"dist":{"integrity":"sha512-aYgzbgH2RhnmYVzEmK4AD6UIboJI54PGYQUesv2i8rCqYhWij+xQx7PtALJ481cxZnQgmFn8s2KMkgG07P5/Ug==","shasum":"ee3790f2f038079e71981f20354be8d1d98de873","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-16.0.9.tgz","fileCount":23,"unpackedSize":2189776,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbp4wwCRA9TVsSAnZWagAAsO4P/iX70FVfZlvmjBCs75h9\nbCY9I2xl2Z+raif7++sgvAjwdzq9p5rCAAhI4XBfs7WneMjgPUJpvfrDSZDp\nJMLns2NSoi+vsS90EHhqwEQueIiLEBMBBnqkAhY5F1IQ0gjfwP8gZz3VyZur\nZDb70r2V3byxQhxV7iZRWTvhPTqa0VhSNXuC4DpfklXaDxGfmEXL+oszvZ95\nxWxcBzbHSsGxRAIjvsnN+tasMyoiRU8KDeRbx8tytBk+4085RgAanh6bETUd\nHCMmnjIoriZ+wQHnZU6uZGpQl1qHSv45l4yk45DsWbT8WUiXrQk5q7BcgJel\nRPyrIXgCco2uei5cDQyBduTWQE3b0aAl/5dFcPSI0WaQdJKxDo1mvIhYw6SC\ny08f3dOUAo4pPfeRIANT//E+r+cUI77uJYOiErEMkowoL0tCjFLnN20ZXGFR\nFCVKg4uYWLD10WdfAGDKAg3zg4/waAaUbHxerAOoKucW9CnIbPo8+eFn69d4\nfN6KP9GfD8pyQmyc90qo9UN6is4EBBiKs21Xlo/ssJ1zFY5rC7hiw7aW8WgH\nbSWTMVcAyErGNhGgiHOfAAgJidI37u96QAMngSWU66X/hacm9KG2EKzpWcuk\npwXoVIDtJDoXeOixFUmG0QgFXctLIkNEzLTK4EDX+Bs7Pt776W7naJL/cDAS\nSq6b\r\n=eLhp\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_16.0.9_1537707055842_0.9858095770141224"},"_hasShrinkwrap":false},"20.0.0-beta1":{"name":"eosjs","version":"20.0.0-beta1","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepublish":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/jest":"^23.3.1","babel-polyfill":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/node":"^10.3.1","babel-cli":"^6.26.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"^23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfigFile":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"*Important*: eosjs is under active development and should be considered beta. Improvements and enhancements may break or remove existing functionality. Be sure to lock your dependencies.\n\nIf you are looking for the old version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n## eosjs\n\nLibrary for talking to an EOSIO RPC API. `transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n## Running Tests\n\n### Automated Test Suite\n`npm run test` or `yarn test`\n\n### Integration Tests\n1. `npm run build-web` or `yarn build-web`\n1. Open `test.html` in your browser of choice\n\n*The integration tests assume that you have a local node for EOS set up at localhost:8000. The test.html file should run through 5 test cases with the final showing an exception on the screen for missing required TAPOS.*\n\n## Basic Usage\n\n### NodeJS\n```js\nconst eosjs = require('eosjs');\nconst fetch = require('node-fetch');                            // node only; not needed in browsers\nconst { TextDecoder, TextEncoder } = require('text-encoding');  // node, IE11 and IE Edge Browsers\n```\n\n### SignatureProvider\nSignatureProvider holds private keys and is responsible for signing transactions\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new eosjs.SignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS\n```js\nconst rpc = new eosjs.Rpc.JsonRpc('http://127.0.0.1:8000', { fetch });\n```\n\n### API Constructor\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new eosjs.Api({ rpc, signatureProvider, textDecoder: new TextDecoder, textEncoder: new TextEncoder });\n```\n\n### Sending a transaction\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\nuse `eosjs_jsonrpc.RpcError` for handling JSON-RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof eosjs_jsonrpc.RpcError)\n    console.log(JSON.stringify(e.json, null, 2);\n}\n...\n```\n\n## Browsers\nBrowser distribution is located in `dist`\n\nPermalink for eosjs documentation is [http://eosio.github.io/eosjs](http://eosio.github.io/eosjs)\n","readmeFilename":"README.md","gitHead":"78baf7fc343957c94bde07baaed07c1807f66949","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-beta1","_npmVersion":"5.6.0","_nodeVersion":"8.11.3","_npmUser":{"name":"jeffreyssmith2nd","email":"jeffreyssmith2nd@gmail.com"},"dist":{"integrity":"sha512-ySoyct2kU/AvGiiBPcLE5BjQ3r27/xOJ3/eJfRv/RfPctopnI8eHzxL8bOpW7OwyrC0tveOrn0kF1AdLcVJVlw==","shasum":"2c69329c503902e058f6fa1e4fdb1e4ce73f1f0e","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-beta1.tgz","fileCount":53,"unpackedSize":600852,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbtT8gCRA9TVsSAnZWagAADsMP/0riKwIlMRuGebtGu0xU\nyN66koJMRRQXNw1LKvXH1H2GdWlrBiQrbkeUajvQL/yVAj3Gf/yCr2dOV1is\ng8L9RaYN3MtIK7/SFSDeC/uJ3zZcdwY7aW3rwkVUwyMY/OfG7x3srYLMG5do\n7XCJeh7LTwB3tjqIgiFaR5NHyTaNQfPYv3pWDCH6YH18FcIPuIsvoCLkf/nA\nzItGEK6p9wWk+Xr17S5KGwCHMs/dDle+gWZWdMd+IPhB3rxSArGcqLqxc7Wl\nHh38Eho3+R0YCj2S98ckKh40Junueq1ec63afLdbR4OmWXUDJmfbz3dwh57S\n7zsBgvtDnBP1ZlM3lfAwq+G9g07iKuzK59PPC/qTbfCjobCcppndZWqLYJ9k\nJzGRVDCDyWcqFLYpmtv29/LuIPK5YxNyHkmttblgcT89h/cKQ7oc109ZkFZF\nXFVyQ4A3dMDfagNOiqA03qQXoducp5q7aii/tFt83t5hX1eKTpEH7sKdLf6d\n4PO2WfGHgWjCN3b67maKf1zbV5eu2rTKdsWoeqH2UymNvPazc8mNoSqbP6J/\nkHkC0nvPfphUwtPOTRuYZqA1Vjhs/xwiElA8i60v0SSB1L++USwiVY+z1O5D\n2Iww0sdKFAiVIYV9/Bst7/Di6KnJ5cS0Lak5/wrNnMBucgJHe5PkmRUmQrLg\nxp20\r\n=PvUk\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-beta1_1538604831560_0.612961859022024"},"_hasShrinkwrap":false},"20.0.0-beta2":{"name":"eosjs","version":"20.0.0-beta2","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepublish":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/jest":"^23.3.1","babel-polyfill":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/node":"^10.3.1","babel-cli":"^6.26.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"^23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfigFile":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS\n\n`npm install eosjs@beta`\n\n## Basic Usage\n\n### Browser \n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError, JsSignatureProvider } from 'eosjs';\n```\n\n### NodeJS\n\nImporting using commonJS syntax is supported by node out of the box.\n```js\nconst { Api, JsonRpc, RpcError, JsSignatureProvider } = require('eosjs');\nconst fetch = require('node-fetch');                            // node only; not needed in browsers\nconst { TextDecoder, TextEncoder } = require('text-encoding');  // node, IE11 and IE Edge Browsers\n```\n\n### SignatureProvider\n\nSignatureProvider holds private keys and is responsible for signing transactions.\n\n***Using the default JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8000', { fetch });\n```\n\n### API Constructor\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2);\n}\n...\n```\n\n## Browsers\n\nAfter running `npm run build-web` or `yarn build-web`, the browser distribution will be located in `dist`. For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/static/3.-Browsers.html).\n\n## How it works\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n\n## Running Tests\n\n### Automated Test Suite\n`npm run test` or `yarn test`\n","readmeFilename":"README.md","gitHead":"d4dfac2b701adf7f9ed34e0ee6427fddd3b35285","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-beta2","_npmVersion":"6.1.0","_nodeVersion":"10.4.1","_npmUser":{"name":"cody.douglass","email":"cody.douglass@block.one"},"dist":{"integrity":"sha512-CtlM3Cy8Fh3sKik5h8of66Tj1zALlU48xQJB25HJ1DLUm58f9z2jPCZ0hfkOcCXMsRIxZu01NpPufN08qZjFnQ==","shasum":"026255a13fefeb4d46a98b0c55de7b972de661c0","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-beta2.tgz","fileCount":61,"unpackedSize":602420,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbyiaTCRA9TVsSAnZWagAAxk8P/iRzajaycuaA7265SkF5\n1mjE5ghAX4m8I7sBIOoq1NCoXPX8nH06M5I5XGv2enYlL0uni4chBwGn+W7U\ncl2oHTBzJGoGDGlqOPv8iAnK4y/yIZfaL4a8G2yZWKG0xyHx6uF0d+Gb/b6x\n3RzrIwSkDzjcBt2pJjxaoUDOEqStTdaufcUkNk0+XK/5RI3C/D+1kUWe/Bfy\nsE/DqG2yrMkF3czhtt2n6CrTRQzsSEjL4VyEbEQPv4e8XsBRxCGs+AMYeDMu\n1bQMrzMUUntXhPhL5Mvoy4bfu/Ua1iHMDiQu4SuAFxJV2BQyfhVTXKpA9++c\n0GfftN8Q28QkdhWooJIPxkoa9CJoWG/B9Mq3W5Eog657bA9z0sr0tRJYE3Gp\nNtDFrTtnxpKQH7g4rOuH1aRYMO4Ug+0GuvXbmd5ezHrlhk7CafVb8WvvGnkb\nDY2XyO0G6vqNFsvf8X1OXOzi6bsJ0q9TgKd/7REDvWl6rOEgmJ59potcgS17\nf0tTRKtDcFhitM9Fe6+JN5dnPccOK/EFFHNWTw8GM5qD4XSet7jpyjUm2rZf\nM8ucSAWH4JNcVKHH/EdSisrq8deIr3XoXtMeK3lOP3X5McmvHGD/ivjPfSsY\nENvfvNC46IAZS07g4Xc9UH0vTucSqGQElWHDuZ8Udfidqw9IhTGYBG+1rgwY\nxice\r\n=Pr0A\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-beta2_1539974802986_0.013011206519809138"},"_hasShrinkwrap":false},"20.0.0-beta2.0":{"name":"eosjs","version":"20.0.0-beta2.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/jest":"^23.3.1","babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/node":"^10.3.1","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"^23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfigFile":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"0f26741f8dc9100a05cd4fab4cbf9b2e86136c75","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS\n\n`npm install eosjs@beta`\n\n## Basic Usage\n\n### Browser \n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\n\n// If using default signature provider\nimport JsSignatureProvider from 'eosjs/dist/eosjs-jssig'\n```\n\n### NodeJS\n\nImporting using commonJS syntax is supported by node out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst JsSignatureProvider = require('eosjs/dist/eosjs-jssig');\nconst fetch = require('node-fetch');                            // node only; not needed in browsers\nconst { TextDecoder, TextEncoder } = require('text-encoding');  // IE11 and IE Edge Browsers only\nconst {TextEncoder,TextDecoder} = require('util')               // node only; native TextEncoder/Decoder \n```\n\n### SignatureProvider\n\nSignatureProvider holds private keys and is responsible for signing transactions.\n\n***Using the default JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8000', { fetch });\n```\n\n### API Constructor\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Browsers\n\nAfter running `npm run build-web` or `yarn build-web`, the browser distribution will be located in `dist`. For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/static/3.-Browsers.html).\n\n## How it works\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n\n## Running Tests\n\n### Automated Test Suite\n`npm run test` or `yarn test`\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-beta2.0","_npmVersion":"5.6.0","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-lECf0Nbfw25mN1ixHhT1IPuHgqZUJqGUhxDL7bfKzshy8l+hxWjeJW2XxLr7XlpbvDgG6gFqRIIaDB29lK3qGg==","shasum":"8e578744a2a2ac9df37dadc637743541dab10a49","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-beta2.0.tgz","fileCount":65,"unpackedSize":611181,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb/EPUCRA9TVsSAnZWagAAViIQAJ4N4TBDjf0ryEjJlUde\n8CQkpzzrcPohbCoDPiySwErT2ftq2GlaheInuAbA6ALkT2aSKGMX18819lwk\ncwMGWj17TYcop0ZBppM+pMWHfhspUe8y2ZObF1mq/DpZ4edg/6LXdiUI5gLe\nMyXgARVFwCggJrkN4EzXy5LrdjhvRlRaNND5Lh6YYQ06cpUrxApkx2WEQcNM\nfxhNOK8o56q2tWxEzAHVG6tniHfPEfPA6csdoEoZyh/aGCfBqOMsH966CgnO\na7rGxf9Mi4NVpE89WtMnnPyZrV/ukPHBP2I2zG6Wok36Co5OlywziR01ZQB4\nyyvyn3+nTPYgMcpnYIN2SLaFEL+5A+19luCLL0zR1AX/qFdhm87R22Z1lraI\ntJbePQm+uyQsSs8NbLqTm9NGk7ieINyCsLG8MHwhWfUNhJ2RhW08AnmQU0eL\nevDa7mSZUq6o74Uz+i2wxiuUh4GE+5xqRkq7uQ6GPwGTw4XD5rRMNgM/+EaR\nkbpJEUo7VOMEuTk0AferaHel3tEx4CGEXA7vlKmtdCv1v25CrXJ/0CdwfxVS\ngeW9kiWDS3X310nbVG78DuCi9JZA7t1nkYjYrTN8fjs/jHOivNOSuw8E4x7L\ncpghBy4oTQgq38lA0hbTwIt+ZqX5x+p9Jj4Ijy4nZ56MngdYBusbRF10b37M\nKZhk\r\n=88qx\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-beta2.0_1543259092263_0.7181395567345572"},"_hasShrinkwrap":false},"20.0.0-beta2.1":{"name":"eosjs","version":"20.0.0-beta2.1","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/jest":"^23.3.1","babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/node":"^10.3.1","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"^23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfigFile":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"69493f0b2277b558ed8a4451d04e2ee391343018","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS\n\n`npm install eosjs@beta`\n\n## Basic Usage\n\n### Browser \n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\n\n// If using default signature provider\nimport JsSignatureProvider from 'eosjs/dist/eosjs-jssig'\n```\n\n### NodeJS\n\nImporting using commonJS syntax is supported by node out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst JsSignatureProvider = require('eosjs/dist/eosjs-jssig');\nconst fetch = require('node-fetch');                            // node only; not needed in browsers\nconst { TextDecoder, TextEncoder } = require('text-encoding');  // IE11 and IE Edge Browsers only\nconst {TextEncoder,TextDecoder} = require('util')               // node only; native TextEncoder/Decoder \n```\n\n### SignatureProvider\n\nSignatureProvider holds private keys and is responsible for signing transactions.\n\n***Using the default JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8000', { fetch });\n```\n\n### API Constructor\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Browsers\n\nAfter running `npm run build-web` or `yarn build-web`, the browser distribution will be located in `dist`. For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/static/3.-Browsers.html).\n\n## How it works\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n\n## Running Tests\n\n### Automated Test Suite\n`npm run test` or `yarn test`\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-beta2.1","_npmVersion":"5.6.0","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-JgDFqRaNqYXbJpM4BPjuxUAZ601ouINij6q7B8qDYTJ95dYtIsYPEhBQlqOmyCio2jFdHuD43fzpBQwj2OjInA==","shasum":"258b37040469d381cfee615d64ebcf3ca4577718","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-beta2.1.tgz","fileCount":65,"unpackedSize":613306,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb/WvwCRA9TVsSAnZWagAAOtIP/A9kFGjFZ/1yQMox7Zb7\n7H+XOp85KUI3AYVpXWJvKaTIFoqpvguYXVai+7w3Ynf74NEw7Q7IJD3pgO87\nNyn4S0TeWoSO3Fcd40n0mt5DYY/CeRMDfdUw/jVwF9mEJEz7L3rROQzOewtG\nfoPl6RegGbvFyLC014ZilI0NuK/WwoTAs196NgebQFF6ZKS36CyaTSbqzIea\nXgvMuclvjYvT9nJdC6VdjRQ2AYmIlqHmneTWlR1EjrXWPGYV1S6CNfKxnB39\nKyRah/2QmzI4njGz8w9GGT7MxvuYdE1w7b2qsfpmvE8AdO0m/WKOL56lLtYP\n69aAowm2usYr9Xcb3880FNoC+QHe7boAE8qJSoUBeAtjKm0VmPGyK6S/2UGX\nd+MRqJz9YnsXK/DIjXPAWXNlcjfH/CsYXWkY4rWbpfMJy7xZnaSt1ZXsq5UA\nl4/0+kIcWaxUws9Z6vKElI3dGwWOB+i9DqAfvGlAltHQMT7qKOxHw0khD9Ty\nwhIlc2C4RDN5TFN/HX7sHpMX+FXfDBEJ5mRnTyxcF6YZX/7yxmk9RiJIrRVV\nNVtOpACtmUMyWIzR3J7NICMrHFoFbpy7aFLcGNYILjYW/xwA7lFxIzEqgLC+\ny8f3z4YtWxIM0itl2j2ITyjUAIeQPkOzcJnthotRunS5pOL3mN2/ZGGaQh0u\ngOPQ\r\n=JQU9\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-beta2.1_1543334895506_0.3215976998131491"},"_hasShrinkwrap":false},"20.0.0-beta2.2":{"name":"eosjs","version":"20.0.0-beta2.2","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepublish":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/jest":"^23.3.1","babel-polyfill":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/node":"^10.3.1","babel-cli":"^6.26.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"^23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfigFile":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS\n\n`npm install eosjs@beta`\n\n## Basic Usage\n\n### Browser \n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError, JsSignatureProvider } from 'eosjs';\n```\n\n### NodeJS\n\nImporting using commonJS syntax is supported by node out of the box.\n```js\nconst { Api, JsonRpc, RpcError, JsSignatureProvider } = require('eosjs');\nconst fetch = require('node-fetch');                            // node only; not needed in browsers\nconst { TextDecoder, TextEncoder } = require('text-encoding');  // node, IE11 and IE Edge Browsers\n```\n\n### SignatureProvider\n\nSignatureProvider holds private keys and is responsible for signing transactions.\n\n***Using the default JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8000', { fetch });\n```\n\n### API Constructor\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2);\n}\n...\n```\n\n## Browsers\n\nAfter running `npm run build-web` or `yarn build-web`, the browser distribution will be located in `dist`. For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/static/3.-Browsers.html).\n\n## How it works\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n\n## Running Tests\n\n### Automated Test Suite\n`npm run test` or `yarn test`\n","readmeFilename":"README.md","gitHead":"5523349b159f9eccf2b3f1770bf1b253ab9bf888","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-beta2.2","_npmVersion":"5.6.0","_nodeVersion":"8.11.4","_npmUser":{"name":"jeffreyssmith2nd","email":"jeffreyssmith2nd@gmail.com"},"dist":{"integrity":"sha512-LhPg6tVWSBmERJpimq8NrR6034Qu3bppdAzIrkhhtumKJMYQBVlgWphTTLZyuPlaB3+NBa7fKbYfdJNF0K5c4g==","shasum":"e4f7e17d3e28900b396a570b91ff10ab26948545","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-beta2.2.tgz","fileCount":61,"unpackedSize":602422,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb/wBkCRA9TVsSAnZWagAAdmQQAItt4+mI5hIQMnnX+l6Q\n+QCdJg8wviTjCOxP6XaLXacS1OJDLEHqG/20Vd6OhGEgy2npFpRQPm+XpU1J\nUGuRVINJk6PVSel1TTifVIVQRvsyMPdQBMmbJ4+BXayrpSbRrc3hS/Hf3s7B\nqt+NnThXCFZ9fZMAn7MG07c3dsj3zkJeps9vlKcEATwtaZpojuuDnqUzOoIf\nPrmGugVc8SbvYBC+ldvomLZaqUMp1ncZyzLXfTTPjyBQ/yb6+Er81npTaFCO\nkK5fnEuQNgK82pX0VBY7ejnRNFhNabYWVBnHvC2T4TcgLzfMCiCtTHPppnFb\npIk0HWEpVlo/YUXCyQP9/ir3XJ8C4wRpnLIaxDbC/7BDZAd30VABx1/08PmE\ntlK6MiMfRtNWH1ahfGtVIwRhTq3kFeWDTYjnUwt0fW3S+TDheacx3YnxJCF7\n9HJhQ5p1o5bei+Yz5L9IywIYOYfpbBghFY3MM5BaUNs0Q2Z3zdf6DwsVeC12\n1ZWMVlBCU13ak1EeDvPixUBKwi8mCue8UZRjlqXcEIQByyeYyu3h2fr5GMw3\nEe4AQxgnoQQjl+kuuULDykBppuCX6hmINMo2EyWyCaLwmJN+UJ0R4kJFXqeC\nelX51Up0dQf9ESz0L4lwAkqpNdDp+jMe1HNUw7yL9qkmI5EjAxUql/bGI2VJ\n52hg\r\n=RMTt\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-beta2.2_1543438435634_0.487558005111413"},"_hasShrinkwrap":false},"20.0.0-336bd5d.0":{"name":"eosjs","version":"20.0.0-336bd5d.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/jest":"^23.3.1","babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/node":"^10.3.1","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"^23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfigFile":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"ee798f779e6b81903979e7b59002f210199e8ff5","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS\n\n`npm install eosjs@beta`\n\n## Basic Usage\n\n### Browser \n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\n\n// If using default signature provider\nimport JsSignatureProvider from 'eosjs/dist/eosjs-jssig'\n```\n\n### NodeJS\n\nImporting using commonJS syntax is supported by node out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst JsSignatureProvider = require('eosjs/dist/eosjs-jssig');\nconst fetch = require('node-fetch');                            // node only; not needed in browsers\nconst { TextDecoder, TextEncoder } = require('text-encoding');  // IE11 and IE Edge Browsers only\nconst {TextEncoder,TextDecoder} = require('util')               // node only; native TextEncoder/Decoder \n```\n\n### SignatureProvider\n\nSignatureProvider holds private keys and is responsible for signing transactions.\n\n***Using the default JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8000', { fetch });\n```\n\n### API Constructor\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Browsers\n\nAfter running `npm run build-web` or `yarn build-web`, the browser distribution will be located in `dist`. For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/static/3.-Browsers.html).\n\n## How it works\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n\n## Running Tests\n\n### Automated Test Suite\n`npm run test` or `yarn test`\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-336bd5d.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-znzwMpOWWxYYTPFk67Z5Ca1CYPoeZ7JR1alB8b+aeuJmy0q70hd2X7LPnjy+++rdP1qRLKrGmjikaD0k9QyjPg==","shasum":"d706375512da8c61d27728fb6eb2909d57014c2e","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-336bd5d.0.tgz","fileCount":65,"unpackedSize":613226,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcABs4CRA9TVsSAnZWagAANAwP/0utMN62goqibxx6as/A\nPksMHRqvMK9NP0ohUqHQfYFOMQtqC17Q7w8VcVO0JCVA9RYXLb3iaGNWGi7+\nscfSIilDSmIQley2iztKyaKjpeA3pSgcgNdtVFgNeZH8VrUAcko9sHfZ4zuw\nu6BrnTAVyTLIV6O2TAxT3gz3FtkoEw5q6iBL7lEqfzlxah4Wl7bom4wkqrfJ\niPzQOWWTk0i0EzjEYRDv1jtoc3pK7oP7c8q3LoyEwF+JzInY+afiKD44X7YM\nBcdZqZQ20V1GvuL2ekyOaEiHT47R3ui3HRmEg4g+ftXqwVcomiuu2zmQvOaQ\nbb5pFWo9b0+0ZIaxYDUqbwR7pT+Q0AeKE/3XJ+fB3u8leyv4ksv78FW5L7eR\nzeW62i7CPq3fFsB1FgsvWONaZCke3BUhCZ8uYSyj6upQxYvBr1FDKXYYodK/\nYxY/D7QVcrazZk2o/9aqGmblxAphBWFlO6JI5NnsfH+n+C6+uBL5XTQqeg8J\n0Uw+8/NlkkB6g/ga0N9M6gsZcrpWPq4sWlJF7qRMlbX0tLkeklmNdSPXlIO4\n5ow9oKtwbbNlK0Vxkeb1M0sofkcKRTfBu6v/uCmrOvm0Y5BqpY+dyQDktZmA\nCmUtlxqvtsADoQcxd7QZYhnHXZbvsZrqZGW2+Zgun2KxIe7s9nb5CwZ5tUKi\nx4qF\r\n=G40N\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-336bd5d.0_1543510839739_0.06672593088096934"},"_hasShrinkwrap":false},"20.0.0-8b096ed.0":{"name":"eosjs","version":"20.0.0-8b096ed.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/jest":"^23.3.1","babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/node":"^10.3.1","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"^23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfigFile":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"81fe3f953eebdde72d5e7e76a8a31f047ddf14ff","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS\n\n`npm install eosjs@beta`\n\n## Basic Usage\n\n### Browser \n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\n\n// If using default signature provider\nimport JsSignatureProvider from 'eosjs/dist/eosjs-jssig'\n```\n\n### NodeJS\n\nImporting using commonJS syntax is supported by node out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst JsSignatureProvider = require('eosjs/dist/eosjs-jssig');\nconst fetch = require('node-fetch');                            // node only; not needed in browsers\nconst { TextDecoder, TextEncoder } = require('text-encoding');  // IE11 and IE Edge Browsers only\nconst {TextEncoder,TextDecoder} = require('util')               // node only; native TextEncoder/Decoder \n```\n\n### SignatureProvider\n\nSignatureProvider holds private keys and is responsible for signing transactions.\n\n***Using the default JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8000', { fetch });\n```\n\n### API Constructor\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Browsers\n\nAfter running `npm run build-web` or `yarn build-web`, the browser distribution will be located in `dist`. For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/static/3.-Browsers.html).\n\n## How it works\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n\n## Running Tests\n\n### Automated Test Suite\n`npm run test` or `yarn test`\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-8b096ed.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-ehiKHxqAxuSr1Eb+Duu8+ApiYWAM7Rh6/gGb1RHDuM/dgy4YCXTPfRenhNjkEI4u1XTqh1pxdpPrTd+xaHjvHQ==","shasum":"8c30d5bc14a2a4f12826b200562c676a9439f113","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-8b096ed.0.tgz","fileCount":67,"unpackedSize":614084,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcBpSXCRA9TVsSAnZWagAA9YkP/AxydDCT9ZOV5ZTt8kcU\niqCrvDbn28j1W2s8PwM8MV7qi7C769RnNw81O3UUAUhTRWrNGn8SoWZN57jQ\ngqYshyK6wvYF5DvqMtL2x4hxghp9ZRiDWmNeGpY0uhm3s/F7o2AEwBMtABQ3\nqZzU0CvRWcBgrSSgOqGzgBciHRZyFHjVEjmU32xjSbwpnUkr2T2TjznrDE0j\no1J1PG4DTEI7hDzPdvbRjkQGy+leLLSEsKNkrJ9A5Ju29BM8GnvAXRPj5QH2\nOyF9Q0M7xydlzP3tnSvyvvMjLCuMwmcBopHzyLeZO38z3ALOYa9xty0KrNuv\nwuk35xj+4MMLXAUNyBXqQ2xycWEZu3aKOEGJSdjoSKeaB3JusQOoPjGV3QAq\nWJCRVo6OHVvA/+6gpLT0CAXT8mAdru5qFU7CWHq3hrc6nWNGj/Q/vGXhyph1\nDD2hjVFufViN9V6EmYaDcjHvp8hfm6igZoM2f6u+oVCUSH5aOzJ3CNZwJlfK\nFY2l8vd0TnguJD9Dwioko3lQJY8RA/LZ6yUtcUtSy+kOB0xaEVo60yVv/Yu2\n5Zm7lFCzmA/hnElhudMrCdep3OtwYzRzAixIz/lNmy2t0R/Yr8sgZdbRpQ/h\nWnfUgASxGHD8Sjo5GY5N7dSGNvDgKCkiaw1hOK8OWu/JbA44SVdo8s/d6hEL\ndw8q\r\n=+eHh\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-8b096ed.0_1543935126872_0.6482394472800539"},"_hasShrinkwrap":false},"20.0.0-73152ad.0":{"name":"eosjs","version":"20.0.0-73152ad.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/jest":"^23.3.1","@types/node":"^10.3.1","@types/text-encoding":"^0.0.35","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"^23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"9d50ea33b8c03a1b3ab3f728fd06255229628298","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/static/3.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\n\n// If using default signature provider\nimport JsSignatureProvider from 'eosjs/dist/eosjs-jssig';\n```\n\n### CommonJS \n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst JsSignatureProvider = require('eosjs/dist/eosjs-jssig');\nconst fetch = require('node-fetch');                            // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');           // node only; native TextEncoder/Decoder \nconst { TextEncoder, TextDecoder } = require('text-encoding');  // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### SignatureProvider\n\nThe SignatureProvider holds private keys and is responsible for signing transactions.\n\n***Using the default JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Web Integration Test Suite\nRun `npm run build-web` to build the browser distrubution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-73152ad.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-xuTpHuFoNdUNbev+WJ0CfZmIhltwDKMia6MVpFrpmdPPwdcTu9ChytaMHY1UdsuM/Jl/RzLrPnKcSurN/GXpZw==","shasum":"5385f82968fe6eedfc2449b1149ac6ec2f418232","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-73152ad.0.tgz","fileCount":74,"unpackedSize":564294,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcD+nACRA9TVsSAnZWagAAO1UQAIC4Mk6YgbaeB/WsZeQQ\nqoDXR3U94cnzPG0REeGmUpJRRRcQb5musq6s50GoqOXe5WM5apZNfVJ4PuXV\n5PnamBZoQ0vsKnGXgTvIGtcGcdCD+uucucbjm4Cit2sO1ksTvfI+9Iwduj/p\nUoQbJICELLyMaDH3G4X9dJM6hnwlpQHbDKFEdMvvwbFSDbv9eXcEF13Tzg34\nNLj6veLyKQrUin81XJjTkS9YM1jvDU1GAb+jqX5TgTEqELrdLLe1birgigWj\nHgW0KlmqUDuB8kWpbTarQBbtDFKt2zFYnQ0emeU5+udEVf/dTscPeU+3TO7l\nESPG7kQgp9WBlS0CqS33jIhzREjVK78HnvqeCFHveB6Rlwi0iDSbA0rOGZ6J\n6K4aXR3NxjUfni2zIBZ970ebiirFtd9k+kQCr/vLPGcxAncOK1Qc/EGcXZva\nam/WHNlhdhetrMXhxqdXZXhslV9wfd18nIdCuZnVG3HtToy0i5O9COBbhaPS\nUO9dmKY4l6B8Bc09hitjYw9gtrkV5U072FCTDiLdSMkOirN18PTEfYlA7E81\nh/8kfobqc5jTn3xAbpAQxAmvSjggsj13SWcBCvXrKSGTfSvUmY+GRhCOG+Wo\nnVpzzz4PZmY21Z6aebY3/hdp1BhUjnFguVwLjQf7r9Hpn4nXyhn/fqumc94c\nmGAo\r\n=5eWA\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-73152ad.0_1544546751763_0.4060335155076218"},"_hasShrinkwrap":false},"20.0.0-251387f.0":{"name":"eosjs","version":"20.0.0-251387f.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/jest":"^23.3.1","@types/node":"^10.3.1","@types/text-encoding":"^0.0.35","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"^23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"02c3482aff7cdaf8b2490892be0c725123ed712a","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\n\nimport JsSignatureProvider from 'eosjs/dist/eosjs-jssig'; // development only\n```\n\n### CommonJS \n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst JsSignatureProvider = require('eosjs/dist/eosjs-jssig');  // development only\nconst fetch = require('node-fetch');                            // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');           // node only; native TextEncoder/Decoder \nconst { TextEncoder, TextDecoder } = require('text-encoding');  // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Web Integration Test Suite\nRun `npm run build-web` to build the browser distrubution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-251387f.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-hbKlPXR257ge19Aj15ga9RgP8ay/NLPXGUkJe69m1nzn9tSUxX+uxFJJtVanXQhrq40k9FnNovyjcJIlvOF+Yw==","shasum":"b5f6f6495942c7e37958cbb9a30af6886c7841b9","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-251387f.0.tgz","fileCount":74,"unpackedSize":564311,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcGStnCRA9TVsSAnZWagAATX0P/iud3YEFBeM+HPp6y57U\nk8exMUBXnck74hZ/B/AFH/2tG0kuYMaadoUQTrh9fVeFqIBil5nkRQQMiZa7\n2aKfgVr+TPjt68frJ3rXbzzvGCASDtntNHns6WcxTma/1RD2cX0wtZaS7qn9\nEc3kurzs8U72ob14kerMIDv9VIm3V9cd2R0oSGRDcyFdI7b75N0dRCfj8byC\nPN4qUu3Nfxws585LsFeGmfsN1kxnqU6DTxc2i6ZPv381HH0Jmm+G7Or1sE2O\nvbK9k5Vrsoj3XdLY/YgeovGZJjKWj4G4TgA0+f8xAUlUmxgmpg6zWfLbqRZV\nBl4Qw2J64Xm9O/gWnoRrHM5YiaF15OrWQOhQp93bXQJBFna2hCB7vKAkLB6G\neIRKoN2erHlN50m6edJceOVHq+xZ3edA97HzK6ArNVBuh8NFcq8yuU0bhM73\n4VYWVi97tKIQSkXK+dd/bOQsXf58wL+EeciTs8sULdxhLeYBo5R8roAT6L0J\n6Z3JS92OvKPMXkCZfnL6EZl/joit94koWdGLaW2wreBt7K91k97RJVQINxwu\nr+DCGXBO8c5/oJCkj1csGlx+Px9sCPwjaM7O557aPr9UpuzJzoia4Zb5g6X/\nqqqCmlYS6r0T6ve365UYwgKZHzKMwVHmJCOEf5YxS4A+KAkzHrThKGem6eLb\ngJ/7\r\n=siJc\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-251387f.0_1545153382620_0.9565470091038293"},"_hasShrinkwrap":false},"20.0.0-beta3":{"name":"eosjs","version":"20.0.0-beta3","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/jest":"^23.3.1","@types/node":"^10.3.1","@types/text-encoding":"^0.0.35","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"^23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"be370fbcf14c2b8c1033b082df646ad01f21c33b","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\n\nimport JsSignatureProvider from 'eosjs/dist/eosjs-jssig'; // development only\n```\n\n### CommonJS \n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst JsSignatureProvider = require('eosjs/dist/eosjs-jssig');  // development only\nconst fetch = require('node-fetch');                            // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');           // node only; native TextEncoder/Decoder \nconst { TextEncoder, TextDecoder } = require('text-encoding');  // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Web Integration Test Suite\nRun `npm run build-web` to build the browser distrubution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-beta3","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-Fr3zRFlEs1sLMGxIIsck0U4BnWlfivz8xf0Es4nT0pgWlGTiufrtmeyJvnjjspSPvyGxghZc+llcM3JI/1k9pw==","shasum":"b5a078d4627ad63343bae6897ea5952d2d4fd26d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-beta3.tgz","fileCount":74,"unpackedSize":564307,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcGXIWCRA9TVsSAnZWagAAF/EQAIhVL+jsyYuEu5273jyy\n/9pU+Ep1SEybxouBqwp5VyS8LhYa9ZuXOJM33d3fF6tRrKjgaaGX/RhoX1Fr\nRz0uGZKdQzhbvq/rHtKKqS2NO2gAaUGfovT7LOpO2moYgHCUWTmI7P+z+qNo\nSRrvBpB6l2Te36MLCGFPiNP0oASYLxT4cXpVy4d0JiQrtqpyq0jXRdxwOOVs\nxhlYCjGBqskGgGnoDzz7Y238l1VMmlNGPQ+AG8rZG6w0WmDqWy7CkYv3ZP2O\nq8EK1zgj6NSkQDkgJdkMQ24o9KbHCeIRb1mNWEXf5jR+3d6pS34O53H9MZi8\nVktqDYCA/0wO/jJh8J8zIPvdxg8DZdmX0IaamQ2qWGkelmQsrClTo4txpvES\nQUJEYlEe24f//VP7QDY5NJEmxjVt4CbYjQKCCV90azK3Jrz/p5fvZeSEvlqL\nSUt6CggY16hLn5e3sZSHGaduQ3oI0ZfbQDTrYsGvB8i9bBNnQwVHl2KUzEbj\nJWBH2zF0e++KH17ByK1EoWnQCFbSKYt61T1yrknT5E9a6vah3pU3lXfUB0uJ\nzW+8nKz/7LFCYz7QMtIHJhcFec2lVdkvrX9+PFei50j+icu1P0Rq2GuTTsIE\nNNb0e6Nfx9j1/WqcAjRbTccY/NaabTjTWwIubeKeXnNilTvXMWaG/Z3yPsQI\n/ZEF\r\n=uwQJ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-beta3_1545171478207_0.7432638235220448"},"_hasShrinkwrap":false},"20.0.0-ae00a08.0":{"name":"eosjs","version":"20.0.0-ae00a08.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/jest":"^23.3.1","@types/node":"^10.3.1","@types/text-encoding":"^0.0.35","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"^23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"af131f77b60b51e45dc092e8686cb53b0ead1492","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\n\nimport JsSignatureProvider from 'eosjs/dist/eosjs-jssig'; // development only\n```\n\n### CommonJS \n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst JsSignatureProvider = require('eosjs/dist/eosjs-jssig').default;  // development only\nconst fetch = require('node-fetch');                            // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');           // node only; native TextEncoder/Decoder \nconst { TextEncoder, TextDecoder } = require('text-encoding');  // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Web Integration Test Suite\nRun `npm run build-web` to build the browser distrubution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-ae00a08.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-8C+VVpC+n8OUwRCxjtmtG2+cxixzqRg+ytDB7q01f15kTAtR0hiQroQnAEIXkkRcbBfd2YqlepYsQw1qsUlmug==","shasum":"aebda613238c3ddfddafd991d8fc5dac8a99e1c5","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-ae00a08.0.tgz","fileCount":74,"unpackedSize":564327,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcOQumCRA9TVsSAnZWagAA4QEP/0ntnQVWqQnB7KbnTe5U\nHMRDa28BVlZeK0NspisbGt5dzrOASZs1UdSsAkXhf6C9iFML0axsoIkdSTb/\nwAQ4JyTy7pkd26HQHO3HUU6G0gIpdMsyDY7mAwbuHyGetKvayq+y0BpIDxbH\nOzF8z+sapGQQcYbaHYTn5B1qo+dHwC1HoC8fAGDSyWIjEEAyPXIfw6kqpe57\nlSLjzuj7XP5mEAyDb8YODIle4XyLcacteb3zc8a0iJdLDu5V/t9kfSvZG25Z\nx4fYgZ9kSUsmiyhQbyBrssESgNTxB4rcux7ATJtdFdhqw1JzbaX4ZC6Bk8YP\nRkYseFNc7DNDNa46mbFhvvSuUA34/ePYibJBWr/sxvLJuK/qPxOMF9kGrRK2\nPStg0FoWdp0AaV3r0PtPz6XFddxys3eJ85GSJUMKvlQNrdAokBGP+FBmRFC7\nAaeX+T/2YK0KUc2aTbQUHWuVXmW+qq47a+I+VU4z/fvr/JBEEWXFVMrI12BT\nD9TJY/39ws5WycD/dtsbFWHxg+4xLGjNjncphcFh2EV87C5LrVPvvoZjYhPR\nQPEO7phA42zpEb8b/arcxFphfSLzvLyYF2JgW/pwYdsZ7FPN52+kxRKYC9hT\npk92Vvo4y+oSCR0UZ4zgi3EQ+4/eGduCI1SZlWynoh2gadKtFbL8PiSR62C4\nzCjm\r\n=6D4z\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-ae00a08.0_1547242405650_0.11654436906118915"},"_hasShrinkwrap":false},"20.0.0-83491be.0":{"name":"eosjs","version":"20.0.0-83491be.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/jest":"^23.3.1","@types/node":"^10.3.1","@types/text-encoding":"^0.0.35","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"^23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"3b37daa3d8189d55185dcf9c7e22aa5deaf44faa","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport JsSignatureProvider from 'eosjs/dist/eosjs-jssig'; // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst JsSignatureProvider = require('eosjs/dist/eosjs-jssig').default;  // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Web Integration Test Suite\nRun `npm run build-web` to build the browser distrubution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-83491be.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-WnGsQMLDXzHqGQHJh65kcu/Pk6n1K+Co1F6f34ibO/SM2dzfKuPNnI8BuW36QKJ5B00mRuVDtFiPBM+Ar+/gnA==","shasum":"f4d833f384924c1150767bcc5e4c43d3272b013a","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-83491be.0.tgz","fileCount":74,"unpackedSize":564741,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcPk1NCRA9TVsSAnZWagAAR90QAIrsgg8VNsFczUXEMz3J\nlvGu+hzTR8pdKoV+DDq4Oyi6T1wSi7DAxZVw9uGqBWlmcqzj4lBWqog9Yf2n\nxYrAXxJoDgM2SZKpcAetWoGaxaTfziIwsuZ2aW6722DPrg8dPdlwtN5qT/4Y\nEyaQpSODwQf/lbehE/wIihuM5w3MIcTWR0q95F+gE8ykjJZIb7ldnWFtfmTv\n/8vgVNRORUTe02g51AvlKOH5qTv/Ahi5RrqxfVUrNGaexpn55FdbB6/bWYch\n+VCj3aqqBWafoq8zK70R6GtVLw/CTZjxAKj7I13KAX8I5FV35o+dUpS7ORyc\nqrZDuQpBfVsJuSdq9aNoCZk25H9TQA1mfBRd9hj0kHMlMz9vJi62LMyhlHyX\n+bAhwcQKuVEgj498QWTglIHrXRS5M/bZsY4K4z6Y+QRZF7gQVCyM8ffRAebd\nwmwa3Y5tCdIMf8j706oXhwPvzUGK5b6HMTYIJJfMy+VhfD8NKgwWfWgOAurJ\n2fGbYbHDRlnIfZnNG2upRrTulIy2RQJ4sIETv7GcMg35oxLehUDMvz5+dC7k\ncz3s18e1hF07pBcr9dgCSHK39/G8izfqOKyzQFuAHzZnfh167LWSCZiggVFc\n9jxXBByHF5X8m2HaO0PakuCQ/bXiUDcj5d3zrfJpffJ4nJM16gEbzol0N2BD\nyVWQ\r\n=dz0s\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-83491be.0_1547586892692_0.40259280810174114"},"_hasShrinkwrap":false},"20.0.0-0d537ba.0":{"name":"eosjs","version":"20.0.0-0d537ba.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/jest":"^23.3.1","@types/node":"^10.3.1","@types/text-encoding":"^0.0.35","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"6f7c6d65322d12e52f1969dad8de771b8386338d","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport JsSignatureProvider from 'eosjs/dist/eosjs-jssig'; // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst JsSignatureProvider = require('eosjs/dist/eosjs-jssig').default;  // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Web Integration Test Suite\nRun `npm run build-web` to build the browser distrubution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-0d537ba.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-dsnHoZJPIX515p7k2wbRWhVVVWCWLXLV3uIh09wx5TubSga5PhHMyao//BokDE/nn3vformTZHtP5VaGE95xkw==","shasum":"44fbe365037d49a953a1850e322814808081af95","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-0d537ba.0.tgz","fileCount":74,"unpackedSize":629243,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWf3mCRA9TVsSAnZWagAAlZoP/2ueEplSlfAfNkoR5+V4\n16EWTT8676yRrsRgKMI8psG2Ox/GEzXkNwp0iQPZdM5atycYCa/BqT73GuLy\nqhBcHODhNfYKXvIXdq89OgcfxBTn0ialT/mGBm1tgzWPQxPTzap+fYHnlCSl\n7A9Zs24I7jIMc/AWAZyPI7zUpJSTEsYd0JPaqHyqMjqVTQ8/ejoAo2Dt6h9L\nClZN98GWrlGDeEXRao5lGrgSvqQTHOY2bpKMw1BMSQqphFLI5wtlR5EoghjC\n07cBgjxd7QCQoZxu+FCsVNKNUjYRofFgI7cFUitififNpfjHwybj3VmxR9hn\nHR4xO+X8Kx5fDxFMeHM5nu6yocF46VQDd+GpUdEdBMC9uBbYJMDgdMAQfh5b\nPIfZqRATBTNr8DblWx2uAYcKEQH7LE2CxspSo0Bqdd2VqEyhW1iV6x8yM7ch\ntcR2Anib2HNGaFrwhv+Gq3Yk2qMWDs/LPJCVca2yIor10kyXTK4tZwyTII/H\nJmsrOB1Stthyc3j+yPSAwHIaDpICususuyJctEiPEjODwStqwN7W3Fts+aUG\nnPPT7b2boQ8MlBX6nWu6VNFqTnYaKWJzdR2GHHep8KsaNBy8W4lKN7CdJnOb\nnjbggckYLHbZ1DQQUToD822pQzZncNizd5i35XciRe8M7qnScbR7PPyMDYlH\n5r1s\r\n=LUB/\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-0d537ba.0_1549401573189_0.020617294563781474"},"_hasShrinkwrap":false},"20.0.0-c04336f.0":{"name":"eosjs","version":"20.0.0-c04336f.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/jest":"^23.3.1","@types/node":"^10.3.1","@types/text-encoding":"^0.0.35","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"681ec814fff392414a523342c24ff983a473e70f","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport JsSignatureProvider from 'eosjs/dist/eosjs-jssig'; // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst JsSignatureProvider = require('eosjs/dist/eosjs-jssig').default;  // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Web Integration Test Suite\nRun `npm run build-web` to build the browser distrubution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-c04336f.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-hxssF/cAq/DUGSimZZIjRCKrCIztFsYMcvmr5IEedKVz3ntTPaShm8mO6BrIUmBP7zObV82U8T621mo0uhWNPg==","shasum":"5009d99cbd78f7b9cd2edcad8d9986a50a95d600","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-c04336f.0.tgz","fileCount":74,"unpackedSize":629056,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWgCxCRA9TVsSAnZWagAA46AP/AhrVyWZCEkrqnXBXTbO\nZG09RV69rUojP3INwPY307nHjd6HkqUjoWyLQnFKce9uETL7kj/EqXpZ9YRU\nblG+5kKUfuW9dqwwi2nWxLTkJeXpJadrzdPneF4QeEV0hwGbFUZR54HsF+ZQ\nrDVkCwU0ZU5gav/LmyFqFMmBd69oPJGWFJPnq043czdVfZy619Bl3Swex5DY\nQz1oNOC86VCMUyxcx08Cb4xQoiJfXdjiZA7PJiobHWXFn4QQbDgFnd5ESwsc\nFTk0OzAMo0ik9GAeSvAvq9jcX49S22gp2kGLvOzV1AQxn0sO0vqKoeNcCD1V\nzWhJSsdAaBxnWwqXDnObpBdGRlk93Uxu4/n3AYg9v0yCEJpxB4KmprdHMn62\nQMcjRex0JQSap/dW/p+dJPm84y2QaIaYoovcOlSC/rzTrFDtYb42T2UwhJKL\nHd6loLt2ljAskfP1fxZgy3UL5PLFXX8cHwJ8+K1mHwpSBr4EY/bF0x0mRR6q\ndjy1mdQBWd8kk9FayngQMH1CsrYjQkDi81NX7sLwjMAvAzxlPuP+R1/eHe6o\nQV+jGvOseEVsV11aIaSZagA814Tcoad2IuaAVIuIgDg7BMfwmHVU2Q02vQ/f\nsd17v7wIhQaXKEHbp3vs6mlVGGce7jcMfln1/v2Pi6dqil1Popb4jWe99pBQ\nZvFv\r\n=zqnK\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-c04336f.0_1549402288937_0.02326633699091296"},"_hasShrinkwrap":false},"20.0.0-bf85117.0":{"name":"eosjs","version":"20.0.0-bf85117.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","test-node":"node src/tests/nodeTest.js","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/jest":"^23.3.1","@types/node":"^10.3.1","@types/text-encoding":"^0.0.35","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"cd900783423498093b47ba41922894fddb5529d9","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport JsSignatureProvider from 'eosjs/dist/eosjs-jssig'; // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst JsSignatureProvider = require('eosjs/dist/eosjs-jssig').default;  // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // useraaaaaaaa\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in browser.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Web Integration Test Suite\nRun `npm run build-web` to build the browser distrubution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-bf85117.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-9zFBASF5gvroJxugefAxGeIxOh8+UisRT4G3KZAFTftNr5pJvUB31IEh9fPKLfTCTY7jCESub3bPeXjDJSRlrg==","shasum":"b4624dd848b760c37f08eaed3215704c45b94f7d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-bf85117.0.tgz","fileCount":75,"unpackedSize":634014,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcWgPCCRA9TVsSAnZWagAAOs0P/1CfCyHdqqIrLeTdASr2\no4eUVzYsbCp5PH/bVmIXM9Rabnic9J3O2VkvNvBbu5qiN6h4SoGuXM4MI+sL\nRLvslbhqtpw7wWX4IhpJrKfmsecBQ4NGFUm7Dre8qpnY/vBQGEXTYwYn0RUt\n2sIxI8ZUoSNNj4lYjRrevd8XIy+S/bn1B6iQFBHVZw6X8ESqyftmyJPrymfw\nvVqPMoxX0rEpaFrezlMxXZ/Y4OzXpqROFKZ6htar78LLuwU/LngsHeZYL+Xz\nR2cVQUPGWJoyKyU/ffIH8fkrQrPDd31gQvbj77VZYKfZZWUGqDUcfPsnM3LX\n2h+cfrh9tk4QRTx7AkLB/EYGsJdZKpJvv4jsQzqjyjN/Hup/dkimMBjliG5v\nLoShgdk0Ivwg3u3lplGifY99zDkAT5cOChG2cDe7GXUqvmhUhF3pQEFomR7Q\n1pICRNGSLvChfmLrnu+EEBbXryaJgQ4zLcUqu/khAQ6u3vF922yu0EbaK6Uu\nsNhvyXs/e+xA5kFDJRmu4aknMweLCyt9Vw+fhFvh57Wv3sytV9Lf7N1ISrBx\n1DUsHBmNx9l5wSrvrB5/LX932r0+tD5NSP+a4m9J3sH0uxZ12iwToNXEWk/q\nUzIKEdsyCq2dpng7dzoF5EE3CqF8zL+/Yiux6j9IieOGNN0+n2I99hFo1tvF\nL3jd\r\n=a6HI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-bf85117.0_1549403073282_0.29600789869227473"},"_hasShrinkwrap":false},"20.0.0-9ff971c.0":{"name":"eosjs","version":"20.0.0-9ff971c.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","test-node":"node src/tests/nodeTest.js","lint":"tslint -c tslint.json src/**/*.ts","lint-fix":"tslint -c tslint.json src/**/*.ts --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@types/jest":"^23.3.1","@types/node":"^10.3.1","@types/text-encoding":"^0.0.35","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"5e139937a3c643ad12d8cb1433da1215b27554f2","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Integration Test Suite\n\n#### Web Environment\n\nRun `npm run build-web` or `yarn build-web` to build the browser distribution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n\n#### NodeJS Environment\n\nRun `npm run build` or `yarn build` to build the NPM distribution bundle then run `npm run test-node` or `yarn test-node`.  The file should run through 6 tests, relaying the results onto your terminal with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-9ff971c.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-AG/UwpzZkE7ar+DyKl+onfA5+Wsr8Fz7USMcE165RgH8J0W8fjPwckLVl4bhp9G1SmHVdaxMRFXKHVOwy8GlkA==","shasum":"511d2f0154c71227f516623d1acd976ab1c2e574","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-9ff971c.0.tgz","fileCount":75,"unpackedSize":634497,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXIQ9CRA9TVsSAnZWagAAFpAP/RCbT21ojo4lfAVWfRDZ\nRNEeYNPWxScrvswZXIjxWTd1/t7LR7fYoILC1qwSDcVcfSlYS8Wkf2FLSOkv\nAgaEx1OouIFJSYHh5/NT0O0b5QfBuxNEfUcv4wroDX1YHyxptEKPC9oKZMys\nofFHT5b/FTiR4as3Lb0IDFJJ1lxfIPDwW1mxErN7yRdr3WNIXPhFqum0Rd/n\nTAdEmSpFJT8Ui/Jf74K9ddWXjktfaxjjRlGDAonbgv/OFhKvC5PqdJffcUhS\npJxAS0xOn9vmoABcJnEvWZm9MEFG/DUJiuvV+sfzAQZyhtxXm6jMPsd3ch4M\nvn3Z7ynCtPvvgc8obNLOkj1jZl474iy8kbaG2XwHecpsquMbNYDZ1HXtly4W\nnUlw9jD0uJ99/iCUAq0zH5JDRi5h4OH+z1FzO1Ym/L5DZTml+qndjMNDc983\ny+fWEtHZ766tanJw+cqHDqkTXrhfifq9aqNF2p8gKU6q+k516yuIecXDFuN7\n2wUQg7o2QsT66W4ja5loklRfohVPp+Fy2gqeJKOyhi9vvlMRsCqEb1GeypjM\nauBaxswkSFCKiN26F1jCr2RgulKnrz6G9bQhueptzDqHPLH36WbwCVRpHezR\nj6k86d7xCov0zb+j48YY4602s0+7O7KwR1gh+0f/JegGJDjXFTlO/4sn7oGp\nBUIA\r\n=kdNS\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-9ff971c.0_1549567036981_0.6211869188006407"},"_hasShrinkwrap":false},"20.0.0-519f746.0":{"name":"eosjs","version":"20.0.0-519f746.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"prepare":"npm run build","test":"jest","test-node":"node src/tests/nodeTest.js","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@blockone/tslint-config-blockone":"^2.0.0","@types/jest":"^23.3.1","@types/node":"^10.3.1","@types/text-encoding":"^0.0.35","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"^23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"56d91dc19d80d1dd82ea8c025cbab33a31adecec","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Integration Test Suite\n\n#### Web Environment\n\nRun `npm run build-web` or `yarn build-web` to build the browser distribution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n\n#### NodeJS Environment\n\nRun `npm run build` or `yarn build` to build the NPM distribution bundle then run `npm run test-node` or `yarn test-node`.  The file should run through 6 tests, relaying the results onto your terminal with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-519f746.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-PRwp9jZbQPDHeLiWv5hjasciqm9bhE1zImWyOZlwBrcVPacyRUVaN8LSqh7MockS80F5HIEyglH17EvP44CG9g==","shasum":"3357087bca224560becedca86727ef51c821250d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-519f746.0.tgz","fileCount":34,"unpackedSize":215107,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcYzOaCRA9TVsSAnZWagAAALoP/2KdNhCo7Hty0f4AA+LN\nfZI10nnh5kVBCtKsk0w7EKnBqMLR8Ip8HWMSOSff52BspGCm3qYfLwxIZoTQ\nUOXrF3QnOZR3iCQvjQk9aYUYsT5zxC+5FSEsHbuVnqV7FqUIeww8NKdOIS0B\nO3IeKFPwjqpEohFdPTRl+KZgfQKx9EfeaQOVLtSFqbusn9GYlBzq9VLT8abg\nsBlwIvOMYNRvw+HDIr4plb1hOJIxRHFtwm5MF9V+mpl0fXg6RNwSWghXYDEL\nD7dBJC7NPjGMqqjRiOXnIFo9bNp8I2zlYWw/Y+uh64IJNQvfTDEXsM62/cOe\nUIXryuXZbwtf+CNo2Brk7v+1GP+ZxSXUAZvu8ymFn6Kxjl3YmL5Zv32eoGCA\nEocb4vl8i4u6qyBKM+uoI7HNWZpulV+bV/BqfGWGDZijmLhuUt8DJtjA87n4\n225b/jAKsxIRj3UaAgIFFbULYlXXVHg5SgBUkMZu4yia/SuDGgHcIXKsCaxk\nBkL+gFPcZ29yUrpj7smEm+UMb1RaUNFhUhGNE6uuZ7oyj8INlKp8EFrEPdCF\nsKP2uNfWJMe2Ov4qyoDPH5z+9Fueo1kbYIKcO43c8Ml1MzCoPOP+0FvtWgV8\nBg6YChljMVEcfbWktKzokiVI0n9PEFlawiJpnPTmYADM5EHi2uK6ZRR7H2kJ\n83jV\r\n=p8ik\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-519f746.0_1550005145026_0.36227604413167325"},"_hasShrinkwrap":false},"20.0.0-f6c2e54.0":{"name":"eosjs","version":"20.0.0-f6c2e54.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn test-all && yarn build && yarn build-web","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@blockone/tslint-config-blockone":"^2.0.0","@types/jest":"23.3.1","@types/node":"^10.3.1","@types/text-encoding":"^0.0.35","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","jest":"23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","ts-jest":"23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"2ca1545497f1b4b22ab79da1317c5ddbb614711f","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Integration Test Suite\n\n#### Web Environment\n\nRun `npm run build-web` or `yarn build-web` to build the browser distribution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n\n#### NodeJS Environment\n\nRun `npm run build` or `yarn build` to build the NPM distribution bundle then run `npm run test-node` or `yarn test-node`.  The file should run through 6 tests, relaying the results onto your terminal with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-f6c2e54.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-leiRzGpsIsGZRsLfuU0CbBgCTijrGw5Ao70hvSZIQB12csY0BLKymcrUK4lB6vQjxd/sdb1iRqIIWSKUNx+U4A==","shasum":"10f15cbf45abcfec402c2becd9bbf4527104ca44","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-f6c2e54.0.tgz","fileCount":3,"unpackedSize":8095,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcbHeVCRA9TVsSAnZWagAAv5gP/2fatJa/XZt5GYTMWeTE\n+8GYApv+HXI9VcAwqC6OSAjQvs5WhGRWEEEnynM9cm43AHkYmKpDlLKgrAlH\nZNGm+/WCeReRgEvfv4+xUG7jxOt4zadGrCqzWa15uVpDkQU8t01lSz+Use30\nWrVPJWPrrEiAiCB9VhSg5PkiZREwc0Cj8kRS/T96rWe7ZC0USZBWJfL6zlo1\nJbe3JBnTbdxWrvkV/V5NHsNAxNATJrOioKcgm2xmaJabxXO0FdqMacJdg8Xi\nchMiLNXqDwryZ6wyTCBG2IP1KZgRQiqlP0kVzLbpw90v+9qYKFdcgWsfZW+v\nze5im4+ScgwaS/DeLXSdZ5HTaMZUowLC8r76q9zHIkxUx7ttLsjP9nvGjxEF\nM0j14ghQJPdPxiZ+rCVuzgt3bYxpGeBzL1z0qUQVHAh5dXSO3gigIbYYYb1y\nhS6J1IYwaOtrPFnKukjbwO2gAspEtN07/HVxpe5dAgjfePyBOmzJSo3OUjKY\ntAhEnPrC9dh7K1ANxWvS4bWq6HRRxpBv/3V0WqorS8I6t8nbJkbTNAwdRw/w\nwjfszymSIdSnHgsUK5s6b+WJVA1LyjrAJRBzGhpR4cMnVlPOgOpgj5ewjl5F\nlEpVg+YQFcvjpcISm42OHjHX+LstkI8yJCmDFFZYwph7eymZOjXSbHh6d2Px\nLooJ\r\n=K01c\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-f6c2e54.0_1550612373179_0.2742660567091746"},"_hasShrinkwrap":false,"deprecated":"This is a deprecated prerelease version, please install with 'yarn add eosjs@edge'"},"20.0.0-18cab6c.0":{"name":"eosjs","version":"20.0.0-18cab6c.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn test-all && yarn build && yarn build-web","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"^6.26.0","eosjs-ecc":"^4.0.1","text-encoding":"^0.6.4"},"devDependencies":{"@blockone/tslint-config-blockone":"^2.0.0","@types/jest":"23.3.1","@types/node":"^10.3.1","@types/text-encoding":"^0.0.35","babel-cli":"^6.26.0","babel-plugin-transform-runtime":"^6.23.0","babel-preset-env":"^1.7.0","babel-preset-stage-1":"^6.24.1","cypress":"^3.1.5","jest":"23.5.0","jest-fetch-mock":"^1.6.5","json-loader":"^0.5.7","mocha":"^5.2.0","mochawesome":"^3.1.1","ts-jest":"23.1.4","ts-loader":"^4.3.1","tslint":"^5.11.0","tslint-eslint-rules":"^5.4.0","typescript":"^2.9.1","webpack":"^4.11.0","webpack-cli":"^3.0.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"3b17b4883b1d9ac7bcbc97967be0e5247bd9ff77","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Integration Test Suite\n\n#### Web Environment\n\nRun `npm run build-web` or `yarn build-web` to build the browser distribution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n\n#### NodeJS Environment\n\nRun `npm run build` or `yarn build` to build the NPM distribution bundle then run `npm run test-node` or `yarn test-node`.  The file should run through 6 tests, relaying the results onto your terminal with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-18cab6c.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-ai/NoqvK7t7zT46rbytGK3MMzGnCwUOdW8FBWfPyq6eoHr8V9W24+lHnxk2b2l6UGs22duSl1bDHk3vhUqr+8w==","shasum":"d1da0e391e9280fdf893733e6632223635ad8d0d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-18cab6c.0.tgz","fileCount":5,"unpackedSize":8867,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcbscRCRA9TVsSAnZWagAAFvIP/2avDGDo8r19lWXX4Svp\ndQEgcqqj6rAfwY4sFPhCqeM7w5uHRRxfQRhVPo/7w2glxLuQrOPMXejMVx2l\nPZWizmgZdZvFMvLfo2IhPIfkX3VzXs9ewBlb5ZttNwDf2AjpwcGvQvHnAxPr\n+ve56DF1NDXGsY81ivUUZJn6cLPEjYLo7BWTura+rko3zmuhZ9ZcXAonjLqe\n7pTl14gsBPFgrXVpppGs5eCE/HKaaEx1XlVl2Ccq4MIIn5piDC1pm+VggMYf\n4PtrEA0kafbCR+nwnr2oum9xJRKbA5q3SqsD2xcyCMUKQ718B65NvTTYbdYM\n2ndXL1XPuoJCaCbA8tDM5wHhGZlrkvpZGqwBW07+LIweGgESWYgXsctpJ9+e\nj2qWUdrrnfcb5J5oqwFB/eSu/hKdraPJinhGYJOnkbNgqb4W6DvM/3WE+Jue\n73GYPmMQr4wYBjeR/O6T2NcFoBYtUoJCgiKjvEhLnfB3Fc3yUPixa4Lx07Z6\nM3L/0ZrmD5KFPoAAfqD/vs70sEJHS7/sqWmFH7acDdnegYfkITF9vfSTQvAn\ndiCdBJ28opCHnhXCC4lPUkrE+wJFpDXsAP2wlPY3epu45RiDajiKiuCc/gT6\n5wjkC9VojCprf5REHOXKgvsJStOvM+gQNAcY8Rx/leBs9GvFYK7kdWraVtZy\nsJ2i\r\n=11k6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-18cab6c.0_1550763792431_0.25137782579427626"},"_hasShrinkwrap":false},"20.0.0-0c18f69.0":{"name":"eosjs","version":"20.0.0-0c18f69.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"4ab561115f1b49f644f7e153ef7127165bc77fb2","readme":"⚠️ ***Important! We recently released a major breaking rewrite for eosjs. Be sure to lock your dependencies.*** ⚠️\n\nIf you are looking for the the previous version of `eosjs` you can [find it here](https://github.com/EOSIO/eosjs/tree/v16.0.9).\n\n# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`npm install eosjs@beta` or `yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `npm run build-web` or `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\n### Automated Unit Test Suite\n`npm run test` or `yarn test`\n\n### Integration Test Suite\n\n#### Web Environment\n\nRun `npm run build-web` or `yarn build-web` to build the browser distribution then open `src/tests/web.html` in the browser of your choice.  The file should run through 6 tests, relaying the results onto the webpage with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown onto the webpage for an invalid transaction and invalid rpc call.\n\n#### NodeJS Environment\n\nRun `npm run build` or `yarn build` to build the NPM distribution bundle then run `npm run test-node` or `yarn test-node`.  The file should run through 6 tests, relaying the results onto your terminal with a 2 second delay after each test.  The final 2 tests should relay the exceptions being thrown for an invalid transaction and invalid rpc call.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-0c18f69.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-8+pj++AWSrOFUjYGcQbo3S/uzoueO0sbRK6/53vRmByUHYhbjSNwctDj2VP7yigqgcmd1BQa0uHEBmpf6E+d5w==","shasum":"0a5a14bd67571a552dc83f916cac965782f87c61","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-0c18f69.0.tgz","fileCount":36,"unpackedSize":224205,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJccAoICRA9TVsSAnZWagAA2ZwP/3rWTGQ08Xl83JMgAIZV\nuMgA7F2mREfMoPQYoga98Jxm/FTK8RqeUHyh/ZH3HSq8UJtwMlkRFeqqsYri\npIOwuSVc+BGOwyO0sDATpWVRMlC7pxUNK/5dYARxWmqp5R6pE7d7wGr3RPre\nsDi8eFFEjeFbHav30cyPjw2u2ytLNqlKzrajXP0bISowxk1pkvCmHaXxXCmU\nZ4XgFWWCXAITxFp1nJxwQqVAH5rLjTeywG4PK/XNyE1764QwG9V/mzDgdxaB\nvrn3gKXid55QbdeZCL2QzkxKc8aKY2l59oClW1bwD6Ie3rkLFP2NLWtLn9I1\nk9XUravXbCi7aKLvHfyyW5YKpNylBhkR7rTk/J1Us1BEDUUPVev1FVdbVZfF\niesK4n04QvNKl3ud+EDEx7HZwhgdwKqYFaHRkGYs16kcu1NcbF9GLkjI2Whc\nAu5FPujqVFdiOfhz5DecwLoKRWCKJWNMVrNExvY3kEPamqycdZT0wUHfC0E/\n7JZXRKUEPVSzmU5OugJLUoCrLu27w+6TwMJ0og/yEFfcm3PefkD2gddGPZvo\nQuI32BNR3op2dRYhj77llBMorRqPTersB2NtKgRL5vG9SJPlHtMmP7ozxr8u\ncWdK5WV7/ucA8MeP+O0HAXtqvLhT1Y08+txF4ycfWvRwO9QV5Hb+Re9Xjt7F\nho8X\r\n=spc5\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-0c18f69.0_1550846471574_0.41971006168841507"},"_hasShrinkwrap":false},"20.0.0-92da292.0":{"name":"eosjs","version":"20.0.0-92da292.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"546522f65e6103d7af081a4f5580989305bce3dc","readme":"# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Running Tests\n\nAll tests should be run prior to a pull request being opened to ensure the changes will not break any environment.  This can be accomplished by running `yarn build-production`, which will build all production bundles then run the `yarn test-all` command. \n\n### Automated Unit Test Suite\n\n`yarn test` will run through the core functionality of each EOSJS module with Jest.\n\n### Integration Test Suite\n\nIntegration tests will only work with a local node running on port 8888 and with test accounts \"bob\" and \"alice\".  This can be accomplished by following the [EOSIO Developer Getting Started Guide](https://developers.eos.io/eosio-home/docs/getting-the-software#section-step-1-1-start-keosd)\n\n#### Web Environment\n\nRun `yarn build-web` to create the `dist-web` folder and web distrubution modules then `yarn test-web`.  This will run through the `tests/web.html` file using Cypress to inform you on the command line of any test failures.\n\n#### NodeJS Environment\n\nRun `yarn build` to build the NPM distribution bundle then run `yarn test-node`.  This will create an out of box node environment with `tests/node.js` then test that environment with Jest and relay the results to the command line.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-92da292.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-y0EMGBAQuAVJfAOHEmyx3iUeHcpMwNQyzpyMORtJAuAZan/GpmcMfMJVfhE41TuU3lJ+JMDQ6NXORTAFGbu2GQ==","shasum":"329da0926e79347bd3a04d0de0601a2d281a0406","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-92da292.0.tgz","fileCount":36,"unpackedSize":224223,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJccBrmCRA9TVsSAnZWagAAyDsP/RCRa8UOEnFRY22VbnH4\n+8ncynq7oZ1QooThVyUcT3NCAonXRDCAJV9ZZ4u2IOO6Yc+LPYYRnULRdizs\nFE6p5smGpFgLekuJ+M9HBDioLioElT8Lq53lX9rF3mEcDzBBn+m7gzjD11uH\nhZdSikkmta+kFlvHF6mj/sPYpicB4PdjBY5yrjAXdT0o4SrY9LZ5tzPdKdTH\nMGZnp9k4xOzQfDU1QQlnbzqYBswVFTQ2hZ8NK+qIhq2RCqKN7/FRF3WAWZ0Y\nM00HZgYvwQZg29L6w9h++OOuGm8tJaKpu5jT5BSTzA4ZhcE0eiG/ctOie7U5\nPjueV8nQKqul6iqXEx5VGWb7IqJF1zuiLKQ5EkkM5Y2VIYibjZCmafXAbK2H\nJVIFa65BAP4WU8vSDSlX7Dvm+m8cmcjXlb129TtTwcfF5NeXMiHBIlV1QlAY\nOc7kpe4x8INvK3tYGWwbm8Ie1YPjFn9DiZwLdQm09A8tXRnNaoKjT573hAHG\njMyKVb+aBHtbhb+aEppl7Xf4AxdbW1QOpBMPxFrdulIxmL9q1evrIeGrui64\nz4QoQuF+u26Nwx2J+hrEqVolcANgXDuoZdIJD3lxDclrajxxS3+tVpVGJ1Bv\n3tcydNVvhQZ9cYVK4BAr7EmdzcR0ls0npZQG5RjF0Ag9slJx/2T9sn1mB7bJ\npaUX\r\n=8UAp\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-92da292.0_1550850789193_0.8527005531651604"},"_hasShrinkwrap":false},"20.0.0-08d2a9b.0":{"name":"eosjs","version":"20.0.0-08d2a9b.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"3e3c2bec342777f427e7be4d07c0a466cf2b884b","readme":"# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contribution\nCheck out the [Contributing](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md) guide and please adhere to the [Code of Conduct](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md#conduct).\n\n## License\n[MIT licensed](https://github.com/EOSIO/eosjs/blob/develop/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-08d2a9b.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-nNC60NYrNW4l1COI70RVcmpbs4LlEZCaIeA+oojo5Wqy2WpLaxPtvcFeSYRBM+ZsgD+DM4GiXqKoR6/h5S/Kkw==","shasum":"0618f717f37c95ef50ef9d0156fd0e7279b18524","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-08d2a9b.0.tgz","fileCount":37,"unpackedSize":232646,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcdZnZCRA9TVsSAnZWagAA3n8P/0VjA34EL3pKQvNnq5Uw\nxvY7aPfr4llgqHoRMlEvHVg6Na4rcClgg45edB9pMdH/OYEu3mYYG6bu4NnN\nOhyte6dLKnvHwxfFJp8rrEYHuXqE+wXmEpcDUlNjuCuxpui8Wba9kKoWWPnH\nwHwTMpN5SmwzVoduppTvOP0idcUAMyhejHIOYGy9U4GY52FtmArMgHftu6Xv\nrHyFpg0fCyq1KMRY6uckddWpRNTPxHcyeFt6FoiN1giCyMQFj0lERcQCEE/u\n8qexa435CUe0e97agiiPHPnP4BtthdMMJlZsDCcgFnHLoQrePcmLYmcU7cJu\n6ynZxuO+QRevP9nKqXeq53dEDovI3AhRmyVQlE1Ab8eci5c5ZavqGoaaJBQD\niQqXxVFblJmIn4lSfSV1i4ZaZCWoDYCPxpxfIjoXPysXFig0Eg3bT20L+Ow6\nj2YnqUirheXcRmbRtDRi3hBHmV4Pz06GXsN+rnevsEBdSjh8Y4nP/sY0ZlC8\nq0ENBB22oNi5Ch4YYzy8L9pBao2JZ/vlR4RhpIaQciITBdXKSK8zNWl2s02K\nbZSxR1swtcS45Gulegs4IsvACWbaPcQqU62zKTG9XbmF9HaRxFW9j+PZRJi5\ndY8RurBRFH4yoyB4OiFDZKoM+Ki2AM+Oc9l9APuvUVxqhq5rwke5cbdT4rIi\nVDsO\r\n=WqRO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-08d2a9b.0_1551210968991_0.23711750115882912"},"_hasShrinkwrap":false},"20.0.0-abc6e0e.0":{"name":"eosjs","version":"20.0.0-abc6e0e.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"8e95da811e1634ddac703e1ac300a8c7bd20fe96","readme":"# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contribution\nCheck out the [Contributing](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md) guide and please adhere to the [Code of Conduct](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md#conduct).\n\n## License\n[MIT licensed](https://github.com/EOSIO/eosjs/blob/develop/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-abc6e0e.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-dfpprkqQt98LAvpy4VxViaS4GC43M5l8a5+EZeD7e9Rfttkm/PMIci/ghLU+LDaM38K9Tky7wUWEWL0F5UCvOg==","shasum":"0949f066552aafe2b8798519c826ea9bab12bd68","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-abc6e0e.0.tgz","fileCount":37,"unpackedSize":232658,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcdvXiCRA9TVsSAnZWagAAT0oP+gKfWnQqX1NH6F63RgKo\nef8cjnUsTNYib3rFEJPy/ZBfMM8B6pLs+h1LBgHec2/BwFZ2yOHp8Cq90Ylr\nfUwIENpT3ZUCozh7Vt6hO9hE04oM/18w0IRztRfI11lAYP+peA/Kne8d6K3B\npHnWPp6BtDXWmvNdwarSIGGVprji7vTcRgweLQLIhjOnBkxJY5BVqi8cgqrb\nOc5vyrpRumMOBoU3OWzvwHIbsIwKvQ5xQYjIApuN9hazZYGfU/g8YhrpYZ5Z\nkIYTkBv2iO29YXGy5Gltc1B0vv9HqhSu3FKAtHboZaeJWy9gHuuUEsYIYCMe\na3959jJZIFEm6dx6RNSuheWnZ1lagg+feJM5JpuoEGw/tHfWOqrs+adm5mfU\n9JKzB/03bSDCB89UrlhF6jxk6T0uCF83Bs7R0nzGUvHh4PARGcc9cAsvXf/r\n5lwa3fyEvR1Tlcpl4vBC+Ev+ECppofLHKH53peM3k5bUHpW2x+2gp58pQCGf\n9et6X6reI4I8SiZhtM9cbj1Wx1tk5rYA57/Vzm25gZrJWVGBVgcFKsFOLRG0\nK/UGIZ4IXjiHmSRgTaTD09fFKkevsaw5oew0miDHyhafWktnP33q5STHcnVh\n02wUUjT0M+y2NCsfsFmXZvDHFM5QSsh29MKppOqYpLoQ0al6SDy/Oh8Ncwa8\nj0b1\r\n=T0Xp\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"slim2k@protonmail.com","name":"jamesc"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-abc6e0e.0_1551300065802_0.49812204651895353"},"_hasShrinkwrap":false},"20.0.0-9d39604.0":{"name":"eosjs","version":"20.0.0-9d39604.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"2e6444787c22f33edbe8795859c2354dcde83fd7","readme":"# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contribution\nCheck out the [Contributing](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md) guide and please adhere to the [Code of Conduct](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md#conduct).\n\n## License\n[MIT licensed](https://github.com/EOSIO/eosjs/blob/develop/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-9d39604.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-uQ3ieEEFZvDlwKxuCIXclZOlvHIpcFYUl9CRivwW0oPfAyoyQ76YMoIVJXHmIWSn5uAbnGUMsHdYQ8T9pFGmYw==","shasum":"39e6b9b679c9b7a1b8d59f3db3abf0953a47affb","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-9d39604.0.tgz","fileCount":37,"unpackedSize":232658,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJceBqhCRA9TVsSAnZWagAAANMP/21BT2d7SyR4U7/aU6g3\ntTK5SohsuMzGRst9KIJzwLr1cmyiEIFIUnAZJSGpPQcQ8J5f+cQCZTQz5ZuG\nToeBWEs4AA/HA/N0N5JWsFQamAmsCAipnrIW3dWZhh1d5sWqdierOSyoizvg\nmVlV8Vb5RKAndJUb2/LfwIzNwXRJbKgPUlCglOELuZVJvkZxoEjDx1iFAvaZ\nI7tT+Ymx3By5abzU7ZD3qggCSzid7hJPLusBGzPm7A5hPwyR908b0wTsgROA\n8HywG6FloMn1WxLALo4OP9lZ6irgPHeuRM+hvKXjKEVfqdmAqftiPSijxvE0\nj50QYqxI3bhe8FzaVIITcmj0iVtiLurw1KmkJtBVAeN2HnrJgztlf9+/NABK\nUiJe23H+Y0M1/XFSMCUOGkuzAIbRoBJys4TT5KdsSEiVb0yCoHlMOLiNnDVf\nb5oakepmx/JnYeyhVoE/qu2oR4R6fu45mrVMjcWLotGfOWa0nVI5Oex1mGQf\nyC4JrrqNJMYNfgzAHWLEx2iHcavX16NjV3uVDaMk3zn57sEyk6O9X403ALjD\n4DAu0tJKql/kE3UcvegUSIBxzdDnmiCRuOMSaYDkZLG3fCASYuB12owS3VpN\nIgx6NljPCukYozBK1H+1nKxbUpFdy1lDzcug6XEADpG59ZN36q4owf0QHjAL\nXvFC\r\n=kvxb\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-9d39604.0_1551375008634_0.6468689692173324"},"_hasShrinkwrap":false},"20.0.0-2b26a3c.0":{"name":"eosjs","version":"20.0.0-2b26a3c.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"2dce3579f04a25aef3da7bf3a88fde830c29e4d4","readme":"# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contribution\nCheck out the [Contributing](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md) guide and please adhere to the [Code of Conduct](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md#conduct).\n\n## License\n[MIT licensed](https://github.com/EOSIO/eosjs/blob/develop/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-2b26a3c.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-fSuPOA0xsNrgMicqt8PA1CvLWVTk0tiuHV5Vy4SWvAGEejEHQKcxx2M3uV8IM0BgrCV9T5V1DkcpUklrZlCwfA==","shasum":"3820376e7a25883f9b1877f69beb05dbe59ac530","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-2b26a3c.0.tgz","fileCount":37,"unpackedSize":232804,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJceFbvCRA9TVsSAnZWagAAOcMQAI+n812lYP1MAW1sOaoZ\nodMC1mt9nAT98Fv0gRNgS6Z7lUBOc0fAlARAteYvWRhU2C0NmJgUDULvZmwS\nAu9Cc2ug3gI9801g1KWZuiODBbGWb3OcPM+AmrP958C2oliuku/ySi6HDm7g\nSoBSrR6enJ4if0cOh0FXn0A08BJDANHM6S7aoNkQizz0cY728BpdFYUc7fV1\nPkmbFivUag5gHqvFp6h8r5X+Cl7jp4WSXOd7Pjh+mYAIVGNYV+wXvJEuVvOw\nPQNsn7QAJdkQ6N5/rVpYSPbSdOTnWQ336Enq+clfLqkahGIOOpbBRqcTwU0D\nVr0+v7l8V8H8/tm8MwPQ18i/R09vSVUQQr6VMeE9O55kCi844leUVcsYNTad\nVFi9dNRZsTChOE2Mqj8YotfX0gF/dJwnPEl/y5SVXZLz99cRkNoVoOXMSmJ0\ngr4SXU0FRE0PvcHtsXutxqu7DdZ55mEnXDGlPibnj+3Ky5kgVfH1cOWmr19q\nDHaL8oX6Vvczw9ugj2XWmZydD8RYszM7pU/zf4po66Nvon8U6XdYP1ASIk+L\nKZYLqYsE/GQXeCN6435u/d7/P3ELqUFi9JYQgTPpS/SCqPmqapLN/edfbSPc\n7gWcGY85uRByslXan1ftXMKE0wk+yIlM7F3vqxJYrBkZZ06PS5D7dATDmYbI\nq2QZ\r\n=m4o9\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-2b26a3c.0_1551390446464_0.7938246124397981"},"_hasShrinkwrap":false},"20.0.0-ffffff.0":{"name":"eosjs","version":"20.0.0-ffffff.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"_resolved":"","_integrity":"","_from":"file:eosjs-20.0.0-ffffff.0.tgz","readme":"# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contribution\nCheck out the [Contributing](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md) guide and please adhere to the [Code of Conduct](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md#conduct).\n\n## License\n[MIT licensed](https://github.com/EOSIO/eosjs/blob/develop/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-ffffff.0","_npmVersion":"6.5.0","_nodeVersion":"11.9.0","_npmUser":{"name":"cody.douglass","email":"cody.douglass@block.one"},"dist":{"integrity":"sha512-j6kV8ZGZ8fE00nGnjvj5NnnWH+7FmeyAVajt6CnX+oshGVULadufipTucap/pUEdI3pme4G/rwCzHBTgJuh4kw==","shasum":"7d984a14566c0dcf37510a24f50227e986dc8a77","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-ffffff.0.tgz","fileCount":37,"unpackedSize":232803,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJceFlUCRA9TVsSAnZWagAAEn4QAIgtOTco9ZbfplKVGx8y\nKpUbPWwLQzyNBa5FcI+LTyFlGMN6ya/lkKGa53V4u+UiYWhpoSoyUP3ptbSH\nQ4Ir8t45YixKbPE2UNlmD8xP8sBLL6rSyY0LJGIHwUv5yvUvJYJQgdu0LUHr\nTOGf5/lJPT5/GmudmnYVT8b54ayGzetNzt4x49FHfv9imDeKwtY4v4VhLdtf\nimny4AxHKqFp79AwFnMN3tyLeScPNUHi99D71EUkTuL6XOQSOXIx+boe2QKX\ngqyzyUlbR0dgNMN6Vx7ZsYXfPha888aUUvs9i3NbdcLUXQOpWCriufHagfDk\n1nJcfK+h4CwWtp9Vqu8sUtD1tMISh7+T8LbWlo9ToiWst3dlmZUQ6gUGhW4Z\nSa69orXWprJSsdZ2eepIUaWz7Ma0fOX9lEZduZoa2IaBUkjN8xQvj5JkKRgK\nwOrXjALzvVBJp9LCzwHDmcfVE2xGOgkhDe3mMUKWj+wqydOoliTkM1hKDh01\nCMFITKbQzTs2NIpUDX3V3Rk6y/C4Iys6fsKRpYwFRWwBxdGbbMdkiQX4Xdi4\nDLMlGRcRMw1Fz/SB36ZoIu8iwSEq5+dDHwsC/fFS5GjwNdBux80sZXsm2x9Z\nDwiFYtKaH+4zJA66vxJ+h55sHlTMew4FJvpd8mEH706/EgJeejAklzKxsdeT\nXtub\r\n=4mm3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-ffffff.0_1551391060151_0.3837064967399124"},"_hasShrinkwrap":false},"20.0.0-b06ca22.0":{"name":"eosjs","version":"20.0.0-b06ca22.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"02012b81b9a0a1d5dd95fe47053a70b837e0c3f0","readme":"# eosjs\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contribution\nCheck out the [Contributing](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md) guide and please adhere to the [Code of Conduct](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md#conduct).\n\n## License\n[MIT licensed](https://github.com/EOSIO/eosjs/blob/develop/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-b06ca22.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-ykhGbZnRNPxm2OfnsC4yEnIbNLKvyywW9u1GwjJBocba7iSP+6FMqn+8VExqc546Sz88xVJY7yYmsSiv11acGg==","shasum":"583bbfe4be3e48c9fba21c9296162161e04905d6","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-b06ca22.0.tgz","fileCount":37,"unpackedSize":232805,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJceGJiCRA9TVsSAnZWagAAIVAP/jtHygjJCEVRPWmBLnzT\n+P6jKQPIiPaIlYphmOht3/OQ6ccWbDMvkCX+OWnrkhhgG5j0klCKMsEINAvv\nweVWMSR+8cp4zY4z/oL5VwCgUw1Do8AFxZzt7iGkEQetxCaU5Dbr2IGr5nmG\nCs+KBco/nXO+RHVd8qKm1QDqidw7tkYiLvyWW5ePZrETqOv4EGBdDN73LFXa\ngxfYGkLjSqyc9XHiWDc533UmE8bgfhrYGi3JFp8qdAYbhic0ko7T+T48oAuR\nzMl8kFvbR6Yc98uyrLgBdLdq6HdJ2v2ehYKwrc9TPcaxFQboWgxBm9GF0721\nkwTs8aWGDmu19neVIdbxnyWGvF/zAA5v7Jw4DdzpSyXqKqJvNWAampqKPgXt\nXo7pdi07bTKmBkLSwlO9TqYxDHCsbH6/QVftj+gt2AIRdqJvMzy8zUY6pPZJ\n2GxFsBCumfZ38OH6RL1DeACUnlQqMwxfmuIZ2Qhj18Cu57QGUb9IsgVmqML5\nH+GZpar3PsrfCIluYCOs4idJ4z5E9pwkC5kRMpBBqGkOHHViU4PVIXX6NzzK\noW4o6uLA9FaBpGkKUFHeKFa1VZEg+BB0291XUBklmrgXDVestGbdzDF1GZQO\nQG2etPqBaO+Z0vCiQBCoc5ApHkiOJG5RJBZrEQvfOaWRtpRYlK+AJGPM3tuk\nvpEM\r\n=aB1g\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-b06ca22.0_1551393377682_0.8010281422507202"},"_hasShrinkwrap":false},"20.0.0-56c14a9.0":{"name":"eosjs","version":"20.0.0-56c14a9.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"28e1207ee94eb69bbadb756c70bc4ac43a684fdf","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs@beta3`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contribution\nCheck out the [Contributing](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md) guide and please adhere to the [Code of Conduct](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md#conduct).\n\n## License\n[MIT licensed](https://github.com/EOSIO/eosjs/blob/develop/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-56c14a9.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-iH/WNLPSvGObvw09pDuY780w5Wj3t9BJmmKE3+PKekRfsm+dV1Xd/lFoSBzC3kwrf/FoioLUVlzGL+OcR7S0sQ==","shasum":"4329a32561687bfac1a53a358dc954a6a71ad04f","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-56c14a9.0.tgz","fileCount":37,"unpackedSize":232963,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcfqbnCRA9TVsSAnZWagAA3eAP/1uCf19sFiyAgbOsEtsQ\n3u48fX5cXmEn0tq3qaSfdzfCft7EWwzA8EovZUzGZ0y0DptXmPUVcqycc5xD\nPy6Sa2QPSqmN4hNb0EhuhHRRDF8lRvc5hjmyZrZv8LBIemgDZ7YIYGZXTa4e\nfgXzZI5lLjkWoTQazlth3g1aK0PNwhndFT0vWRUYhCCvf235iKq+3GpsktE5\nfByZR3NoYYVfWGT6CE16sH9pEG884bgQ8cT0yjOExtxNontXofqtqjbFkuyV\nT/rVF6VooTK1sLuMX2lIFpHsblwgnOE7lUkXP3Aoa5U/i82PlqCaM/h3tzM/\nKerjUlKTQOwZ4uYuZRY8ZGmCE+BlneyFGIF4EetsilMRXYG1UuJKqWf+e7y5\nw+ZlJjPKTCIWAqB36Pg5l21bh3JJN0niDhoVR797wO9AbThgLUMAdPqkiBxE\nCF82hCYRr2Ru+gE25tA65GdRJ/Brt05+vbpo7qjC33CKCd6ZzKU+TmrmenLi\nLqDwAnG1emWtAmxyzbdvtcRsw2F7W5EPCiavFBOJjlYqP+VLgu0fhbD1tiKi\nlqRfRijfiwnO8YbhtMp9UpXdvdu1mvY0pMs8B//IqmAyYNg4D43JG+YXYSzO\nHlDDBzPRQLfNPeS8IgrEAzh6Plh2FUbV09bMPq5wlCs6R9jH9wx4eM8nWh0b\nMsly\r\n=y0ru\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-56c14a9.0_1551804135063_0.03143353916891156"},"_hasShrinkwrap":false},"20.0.0-ac84c38.0":{"name":"eosjs","version":"20.0.0-ac84c38.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"5edf9256040ed97560e7c48031f9c75060b992dd","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs@beta3`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contribution\nCheck out the [Contributing](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md) guide and please adhere to the [Code of Conduct](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md#conduct).\n\n## License\n[MIT licensed](https://github.com/EOSIO/eosjs/blob/develop/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-ac84c38.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-u3xsjE/1W7b5nAF/EJOjsTaqC9qpFcdCTMj7pgrwWWwx+dFYADgfiVWNOEZ4gb324ze+y8Qi+uQVSQsZqpAkvw==","shasum":"27d11e474c0258a5ecbdcd82d2a5b3ff2f6d5d72","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-ac84c38.0.tgz","fileCount":37,"unpackedSize":234370,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcgS1BCRA9TVsSAnZWagAAMYAQAJcQ6ejXfrd+sxYVtLxP\nKvJhjeLW/yuzn7NWutaHJAQz6LAzQf3f60RvEgBnyJEGbAL6R/KCLNdvKk9V\nyQJQLQVTvJl0jWd1+Rg+82dJNw/yG/psskap8bNd5Kn755TAWE0FWbenJjyI\nVFTooqgRFTJmmfsG3KZmaacMKwrBwjPVjkZObXnkjral21JcwaST+PDoduZ6\n7B0XFqQwhYMxh/P1xYHIfCQM/86vVfOkCY8JDjabUW0ZcyJzEV2ZoIFs7nI5\nHJIFC/4Hylf2phh2cecdNTeDw6YAI0YiDnR5bPCfB4W91tZTJky0cdtDhWtD\nwz3VuYVOpCWArBnF2hIHvYK0xE+1pLs/HlzyS5iZC9/4NewzqGW0OY1Wv92d\nT1UkpK4ozZjPWdQhzI1a3/NXXvmh7Jc8EORD0xS3nAH7tg/9/ps6G5Aya8zD\nloSKGbAMMc68DCxkyvc9tFAOBVv+IuT7QEZ6THVl0XXu1ep59iwkU7KgjyTf\nJbZCYo/9EbQvqbBf/htgMmEf9b/cU2E17Gnuy/lfNnl9SNiV4a5MvWlnGnUz\neRozj2kFZoAmSKod95TYwblQWW0k2DEN60JxZSmwysyVxkQDMYfTK5V4r+TR\nv4/hWwZ6KJNIdHCzrUfvoV2f7u1GlFFcvwHOy8bftX8NGs30kTDsTdSt49jf\nPjr8\r\n=c05h\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-ac84c38.0_1551969600448_0.11798891331677441"},"_hasShrinkwrap":false},"20.0.0-6b2a494.0":{"name":"eosjs","version":"20.0.0-6b2a494.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"979d28da71975eb10bf6159c1b413da1d80f8620","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs@beta`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contribution\nCheck out the [Contributing](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md) guide and please adhere to the [Code of Conduct](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md#conduct).\n\n## License\n[MIT licensed](https://github.com/EOSIO/eosjs/blob/develop/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-6b2a494.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-BLAdRXMc8FhOilgJI5FNCRa1zbxrmfzeYjVTsKAKWaCx19/ra3Yo+DcjCy96C0bRzyj/MU/v2iVIAHG8ZdPs1g==","shasum":"2a04be00259e4f52eac3095cc5e8ff8417695cef","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-6b2a494.0.tgz","fileCount":37,"unpackedSize":234369,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJckPv2CRA9TVsSAnZWagAAhm4P/A+EodsSXWsu3G6gwxl5\n0EXXr/9S41aW78kXd5dcrLdKRIkxSdWi4e4FVg2z0yjGxZN4Qt3rr3rn1Vtu\nB2fUJDa5lqNoxxfuPsBfS+2c0BJD2jOLtvrpKhKn10llnS+riJmvpfV+EoiH\nhSD+kfO9Oh7FRuKsqXX9zV48KhbWWqxYsZVJIpQ2hh4uhnFCQy/Ib3FAJUsQ\nm7CV/EomkQcCoe2HOK9pY8AQsNmI00nycaOGdYYvCJkXjYgPHFkGAIBU/C3Q\nwwHP1PYe5ECxlF1yTdpikAOjdubZHr/T7SKBkmZU+9gwE2H+he8apBh+ZwiP\n3PhFWYA2b/4MHYaC+JfT1TMKs7GhsmLUGEwSrPzdSxRkA7G7LwZbLkQgH0p6\nsHf5/TwLGnlvfOFzhXd79wkEkTVuzYY5huAYEelMNhPHZeMAgar4Pqv6SgyE\n5vPYLHdB4zcppNY1fw3Q0MbQJCyIzZ2cHT6LlV+5cgVfidJIeueVn6j96N8E\nvZ9hQB3atcwXSzWok/sUVaUhNjhsn4VyUSoRXdC2mVLlF0v4Mc8lTpJmkqPz\nRqUf4t0i3ooTgEWgqMidt19jgPewdpvu9KCvISrlgcNfX9Rjr4NSQII8/o/s\nlgSEwnbBrRAAul3o76zpchsa7buwFZoYhBrgrRpnSmr477GKGrWM8Lcw51Zj\n0GaE\r\n=A4Kj\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-6b2a494.0_1553005557390_0.15273755547145562"},"_hasShrinkwrap":false},"20.0.0-ba6d627.0":{"name":"eosjs","version":"20.0.0-ba6d627.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"8edd86f6d2da7ff018acb819c4755606171f7efc","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs@edge`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contribution\nCheck out the [Contributing](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md) guide and please adhere to the [Code of Conduct](https://github.com/EOSIO/eosjs/blob/develop/CONTRIBUTING.md#conduct).\n\n## License\n[MIT licensed](https://github.com/EOSIO/eosjs/blob/develop/LICENSE)\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-ba6d627.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-eqhCTl17D7kT2tlzJQv/ANx2thYFE1S0nJwsjXDdpXdutsmh/NiF7s0RcYehJUYhyzY7/ipR1IlHF89x1RTUcg==","shasum":"7dbdee75eee137eb0a5bb05e7d1e538f90e9f6e0","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-ba6d627.0.tgz","fileCount":37,"unpackedSize":234369,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJckT0/CRA9TVsSAnZWagAANwUP/3po+peS4bwKr4P1XVYg\nJbCnsReLl5ZaTq5RQNZpAijJ9Dq1nkYGyiLztTVJW430NNw8l+d/i3r+cSWX\nH0HRfEQjUHxfKymyryNCgBEQKGY5N8iClymmPrT5qqK1xTKYapRpcj3qj7RZ\naRSl/8tdAjf3/p0bcTllzrqbhtFMPThauZIYUwbiTGebDqcONZMgchyFb96t\nWu/8laCDUNkUOvZhP0DigKzLujOvpoRgRIAgUIHA/nBJ9IBMY8VFcOjKdrjI\nC49t7O9YDzFSNlb5ciZhr+HR8Uoak7MqM3avZQzyEp1AYR/brCJT33iZwCio\n+bNm0zyButotpVT1HQZ/BoNm3BjQB04zNOnrH3pM4yuYRnomvhXwe9s9rcY4\n+wOACN/rBpNgMS4qeAc3NAzuOqyYBxTAYTjk7fJ3H4jrut8DoDZPhstqAVRZ\nfUp4Fs1VKXPsY03hcgxLZownGh5IAYsr93wCdSq6nl4Z7aKhyKkfcFkjhvgd\n4dZwT1F2j4sRCxLRJGKfwiy65Y86zKy3d3uZB+mOBIYYNldosQnZUpnj0VdG\nCwoFIpwBRFXLHtDLxCYMMWRXqx6QRFChhAqjN7J+qc2fmA3IhfFM/U2Qdd73\nc3TZAEWcg4qoMddtmYXDSdDJ+eAUQjZaJH2dqeLSTZOIQBG6wdF8Qob40fvv\n14GS\r\n=N9Bf\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-ba6d627.0_1553022270548_0.01051185783185038"},"_hasShrinkwrap":false},"20.0.0-80f0215.0":{"name":"eosjs","version":"20.0.0-80f0215.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"8badce2c820137f7dd4316401ba3ef98a779a9dd","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs@edge`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties or merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation.  Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-80f0215.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-MqNi1LxmPTS3j/NBIotXJKEybx1wnwt83lzj85E0thfxtQOnO2mYjVKrKxh9YGghs+L2NX8/oUfWy8w1YnA7Xw==","shasum":"d32a518608d7fdb06cd9b3235cecb1026e744d5b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-80f0215.0.tgz","fileCount":37,"unpackedSize":235392,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcmNbnCRA9TVsSAnZWagAA1SMP/RnijgxHdXSiKaxPqY/t\nBcrZn11B6nMfHPeQ+yqA/+majlq+og/AG++Flnab1aFq5+apk80szbqbIwSP\nkI2KtNmkmxUaxhCJkrJsIeD9KA2WVXw6KspAkyNwYnO0KwiojyBy+o1D6bBt\nNjZr35QUtGRiaw3hjkm6ec/jwJj1ZhYSYDzP5ecW91OQX5ow3zYSVR3dZwXZ\n+j0YYD7l3HI4Ey9O4EpH1L9NVr2dLgWPpE+qamwVTZvmZ/VDeR2pFtN2nzHO\nos1kBHxjYemwMCqYQKhpj9ij+iD1um+pzckZvgVDldm7ezx9s9ubsklujtQb\nVL34/a/X6Vf1q+KN2WfqWR62pmkXfOwYm0yP0lEJuCzOfJq2//uKygsgDZID\nDog2tQrHjAq7h1BZdKMKBkb0kRA/NdNAtc/TCeJKxNh1y8ftYBKc9R0/UxlO\nGsFgpUJoXK4GlbC2PYzejj3F73P3qheSKlbwPjkz22K/zlTIaiwaZIzNG7kx\nGJ7o/+wQ5QuCb0M73lJscV0AadACbIVMQobCeXh6xNQOh2mqCvg+yXc0qhBJ\nnrXBqkTJXkphZj6d2AYO6QmkyjLldc31/W4I6sWo0xS4DeTpXiO4C6Uib2jx\n+HQaxVU1N0UpE0i5Vf2NJ6TVWVs8tv4I+xdHmXeeyryWMlcvDJ6NsUrRibbK\niikU\r\n=hYoR\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-80f0215.0_1553520358759_0.8720533086060207"},"_hasShrinkwrap":false},"20.0.0-80e73f2.0":{"name":"eosjs","version":"20.0.0-80e73f2.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"033a7b32f18fa295b1c2c0b482a624a6c09e126a","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs@edge`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties or merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation.  Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-80e73f2.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-9Z5EqrM5y9gw782+rCwy7JQy8pG7g7Zfo/aMeq8Xx6/9SSrjnfqbY3Tg3RnvntswZJSKkar8X1X8UQC22uV75A==","shasum":"462b75e6171638e0549c7f2b569a4aa1a91a29d9","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-80e73f2.0.tgz","fileCount":37,"unpackedSize":235392,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcmkD0CRA9TVsSAnZWagAAP70P/3jOHzGf3VGIyzGRsZ0n\nkd5Q68PuO4AGeEQ9F8vmjkbW7TMuxf2iW/EHlC6Rg3FRzQpqTd7QZZ2NAh7n\nGuFIAksag6LG22kk30nVZ9G8p7ge6A0MrRBSHIfTLzOO6aqdGUIXSYy7uW10\nqC7D0V15dmVRQtdUGl9ubDS9QZUhrH2MN1gVd3h7w/M5rhiVwSMHKkzNWrnS\nqkT07WIPif1d+7pUmaCsws9Bwy2Jporr/LcX98l9pBQWS/bm8+7rBgFQ19Av\nTEe2NDBOkFLPYi9tzzwdc0tOx2Z1AEcXfU95JN9+AHaCGLyZpiRMlHXkO+iX\nDlfPAR+SO0XyLB9VnegToJfH+9fIKDj2oVeJHaZJ/v/B7G3gxviSl+ThGJCg\n92pcl6VbsOfZqiGW6jhD5Y69fSCjmXzrx4BbXaZYVkUxguEocIzt8lWh6NyZ\nICmGBsLHueubcJL1Z2oRE0ed4p80kWuK8hipYuqZqdSuPkXw2yx7ZCJeefwl\nkkWJEo2UR64sz5/PBEXNHjrbCjnVL9JcXVaEDBSM9l1NhXY3L1JzZvcHcqdq\nBWQuTCCyBTGrMtF2aKhlMGaGIqx6Mx6kqdvpS8MMEfrczcH1telM1ywbYPp7\n2txFvVDSw31k7OqHoCjuxE+V5lwpaJndk8wLL1Uj9qxTC52ManVuA+iRFD0z\n7Vfa\r\n=e0jT\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-80e73f2.0_1553613043407_0.16090638492982756"},"_hasShrinkwrap":false},"20.0.0-53d8efc.0":{"name":"eosjs","version":"20.0.0-53d8efc.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"fda541890829a7ffeb48c84ad8c38c13b2195831","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs@edge`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties or merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation.  Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-53d8efc.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-OCRwzRh4j8/ODJczM4OyX7swrx/pluN8hwmLSU8ZhqALypIVYU14YeqsIR98HtxdaTSRqG2hKQuljUdcX4OSiw==","shasum":"e6f64e58ffa95d8dd84fee2a1497c64a3d5538d9","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-53d8efc.0.tgz","fileCount":37,"unpackedSize":235415,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcoiyeCRA9TVsSAnZWagAAdGYQAJz/srcP5381UDoMRjwj\nLchgnG9NCoNHhQgy6S+Szfh0eGvbDqeDmcrWBMmP6obXHNX2egX7SsWWIw/p\nnEFs5BA9Dpnxl88Ty0f/C9IDZV/i7LacnDPG8iBwEGByRBIEtNuyYrzzG4+4\nTLm8YTIv22hN/dr5mwGjQrODhYFHlo/aaB2O4NXnbMaK+zeLD7UHP+TkBRR+\nog6LH9dz4XGTv/FneGSbqC7Yagk7JS34qdQnl+TieJMoD4PhIvVsqiDvriLz\nWxcKQUzz1I30/gNZFkfI5BXYcbMnBAgAOWycb77xe/FhfaLltiG8D222FU3u\nKTSG4b0Up8YCHYsYDPDEMOdFSfoeAGUK1iTRI89nxPJXioR8WLqi6uQkBqPB\nR0x5+whuIn2h/huV0uukp3X80jtd0kZZXWFZ5GU+iZ1Z+tyMxxH6SEO4CWNY\ntWypRgwtSKPOKL1PYJrIhSxKtsI66prM/+iby7YkBANVS4uAZ0pmSrxYBIKZ\n1on9f2D8gEq02/i1MhtJ7p1ofGUfa1BbfInkgD4rN/TMsQ7USY/5GD0zQMHO\nEcQP8bdcE66fLwtKoodQt21VTZlbeSJrfwAoBklTg/XvdAxk80eTI9YgyzWP\nyivMBhufH0G6fgns9EtKLR08KfEUPEIttd3K1xDpDl5glG1guVV2QrT2RTWa\nufdT\r\n=0akb\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-53d8efc.0_1554132125737_0.6663337240460347"},"_hasShrinkwrap":false},"20.0.0-08d7252.0":{"name":"eosjs","version":"20.0.0-08d7252.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"2.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"3d0edec925db8ac349806b0b2f0fd0d9b19f52c6","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs@edge`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties or merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation.  Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0-08d7252.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-ZnJZqJX0C9IE55y5uK1Z6QnUhofHKofEsyB5a1l2wwWbBB3JFOJPVOtGUZ28a5UtyX7O1+RnIrj3tDb/APEPBg==","shasum":"ef65b084347c5173c736f542ee904ca52e1c7744","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0-08d7252.0.tgz","fileCount":37,"unpackedSize":235929,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcojS/CRA9TVsSAnZWagAAzjUP+QCl93jvfPIhGS5qpqTk\njxh3NIxonkJwTyswpQMn7QjDC4QmdMZGXPB1NZnvwwuxpEVHUE9tVE4uJRWG\naPTtIQtzjBPJruaMI9r/UgG3J9OCCEuxcyG/BFusQCfrLlaTRYuQpTJdQM5t\nigx5PsQGHjMDSOBq7gBicxrgXvG+sjwiwedKtf+QL65gTn2/XB8gvUIYdNtl\ntlgCNYksaJnVlFFsRncyz0BXyX52etRzA4+NFRD2ll9dqXnEzqqCdDlrJOFc\nyXqYWYMlc3g/nFvvNWu6KD+MAOY3h0/01m2CTIErvWkz7od31di0NZkyL+2M\nBjkPUDEkJLxXJHOwzjLBjmct0BBSELD9OMN46ZsbBNHo4CY8zHMn6ZB59nD2\nz9rtxyONExixp1omjcMBQe2gh0cyUQhYSuOm4vmaJuuvuHVCA3YI1hlBSSD+\n8cAMHgRM59XTYeZO6+ezzFyk2pHLenB2JddPMVGpdNti9VqKzERsWZImvXSo\nCnKuESlJVi2H7iK4s9+pc9cI0CzpqWkzS6XetihJCoMGBYEnVduD8l43d2qz\nafnAbu8E2msykERrw/FeiMlTC8yXNZldaJjMHqjcOQIzOk4uoEITh/ff2vav\n4Q9Mops02i6ymHXOKNqbNLgntUx1cIHi35BVzjOKG+Nb9gAPOf65aHwKOf7X\ngrsQ\r\n=fdqZ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0-08d7252.0_1554134206763_0.9283025120505268"},"_hasShrinkwrap":false},"20.0.1-d100296.0":{"name":"eosjs","version":"20.0.1-d100296.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"0a54d357d8c9d6673f04a620d85a2a03e15a956d","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties or merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation.  Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.1-d100296.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-Uf4QCqf9KF2vsraGbQHShpkbpd/lMc/gtZKRrBDPp+6FgD3i0FYT/McvGGvDUlgoI3q3DzF0fcur1349F1ga/w==","shasum":"6108f425858fedcf76ad20ce36384dde4e0acc04","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.1-d100296.0.tgz","fileCount":37,"unpackedSize":235924,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcoj6BCRA9TVsSAnZWagAARXYP/1WQscX0zhiAhMpYRFn7\nbN/s32H1uGqgSb2+02aDzpgRUtbN2w8AlHU+yyyrqw8dFwsibfelGnJNyajo\nZoeIodcTf5gAgRZAi3S1QlX+1ExgLT4lK/0w7ySoq4m5VrUtfmv//gdVlmXm\n26GyFBtNiXZ3KM3/IveTsoczadD2mEL/RtGlbSdj7GH2gveuc4ogGDIYx55R\n66qpCJTICn+FErpVvPaZyBhJQXVxsJDGPy5Pv5wy7iXmTYhb3sJFlbG6OTRK\noWJgXsG0nvPD5HEO1BAqpcWZM10uAvM4nXlzM2J23/cuMZOqTyMIvsfwA6Or\nPZH6vwtJedeMsQTr7xETiAriRkzDH5jygRml5Jf39g+SEgYLRfWSpVVhPsjg\ncDyteZf3lfh6f9rC6SQrOd6GmLWmtP+C66OAgcNPN/f1QG5misn1MvL+8h0x\nwsTfQrpj9JVolft1X5uNaxTfqUr+Zmn4ObSfuzY7X58TKWFk18p5oYRIPdqh\nrxnViftOglE+Vq++xHXvhj127TEYtF31Oo1bXdCSvHZhnfZvDKYdIARhUpxk\nEEgWGyO7rtNgjS3OzAcM9ojfn0Hn+b2nvoXhPGeqocOp47ORk+BrEe1whHmy\nIjSDHFWfGErnoPJkR5PfIlrH9uLZrfSPNIZr3ofPPXXqOU95ZJz1ioUNcx78\n/r2H\r\n=4eQi\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.1-d100296.0_1554136704759_0.7834104827057378"},"_hasShrinkwrap":false},"20.0.1-a2c7836.0":{"name":"eosjs","version":"20.0.1-a2c7836.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"a520a2b66cd6af9cf1843279a53356a68110c524","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties or merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation.  Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.1-a2c7836.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-vJ6hueItQZA79mEEqnePhgxKl4c4KURcBtV6SvDVgk6Y3nWQVChcumcXWxFtE8IdQ+O0nSq6Uo1XoKlGUdWOAg==","shasum":"285baf6e28a46ff64a79e1c8b3363c6057e21b70","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.1-a2c7836.0.tgz","fileCount":37,"unpackedSize":236237,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcokGtCRA9TVsSAnZWagAAVVUP/jpL7glOL24DSQD59Miz\nx5waUXvTD4VXe3AjuUffvs1DjVhfR0SWv0XS7sh8+sPWncge+RXhJpKWl6hD\no/hlE2E5XmGfh9FFf7a2O22RsU/7c6XUVlEKMfwTN8NwYvuOlQgiWd/eqi8c\nY03OcmXAFxHFko2V+OzAJxJQbdscTdvDSgvNj/NjUSWd6BpzFOVBjeiGIzBI\nBxXP66SFZmmvjhaaztWh5g2+6bovy/cpnLt7lB45rTqvjmJ9zH3GAZnbZJ6M\n4ecx1PbezG1VzzQHfJU+G/UsswsChA/Z0mEuXT3JdZbIUBoKYdO/HQe8ETDO\ndOQk0gVGBWHcXW9+Q4W/MpcWF0l8wFewAnp9O/BvZBMRmtD98Tw57a0zfgvw\ncWMnkkan7FBZwFoC9ltIIvphED14/w4LJ6yl+G2o0cMfLfnmCbN6V8ZJTMXE\nrFN/9ML+fUf8I86LqkYBc/cHCWrWunmQ/ILgDjC+4fmPlosBSeN9EMtj6pLg\nV7v5gW8EZGGd0EM7EQCH9eQek0X4tbvqOudXzOw5aDqEQqWrOJAGVqz4quqI\ncXk0AodM4eklnkPpUBfOk8In/87nwdZTdsTJH3IYfk2Yn5S/7JiGlLDRcTNY\nJaz59+BN/VtoHBli7mbAqkTuSHYkJq4wWU5xkSX1pIBjw+URcL8eOp1pbVC/\nvcaY\r\n=Y14b\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.1-a2c7836.0_1554137516519_0.7842913370117799"},"_hasShrinkwrap":false},"20.0.0":{"name":"eosjs","version":"20.0.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"a2c783623aa77d82ee194dae60670e88e791d7d6","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-Ak9CPtZgCFayUmq43X3Nsn4v67lkLfSzEdTUfMk1XAWA5s4HRn7lBTeTeDCzJ/rggi+dZ170VeJwc5T3gPk4HQ==","shasum":"43940abfe15cd191ce4027d60294036e914613e9","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.0.tgz","fileCount":37,"unpackedSize":236227,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcokgLCRA9TVsSAnZWagAAy1MP/2JWOCKAUFcBLOyt+veu\nlHdZABQzTpvZlsex/ZG98B/Ujcj8cnyUYYWbQfaLnZRyDzJ7Q7mjvaGCPsDy\nYZ5tmkrcSyW84xe4cM4nYqhWj5lYC2/4BCq+XmZjQEFIxifkhsxJmxYbYZYy\n7qWu7yGBHdEZfHszsyLWa/+xzei8gfCDlmVNLNeJgBetZ4kLW+2CsMRZV6UJ\nLn/R7c3E9gyyJoWXJpjDlx9zZ2gYz02v60ylemaoqqnZ6WSatQ6XzvsSyc4P\n9F3kYDNKj53q1wl7VHg5mAKzom3XzOyM+12gNfN2CGte5kRB8h8xAzvtMDfk\neT458pE+ZfcEsh3T3gAnrar0qEycixMKlde//PIqsAPLHw3j7DAsxKqmzeyi\n5aphPYxi6oIV7+hDiuraScPi7BpI0Igy+fZgZujvsa/0LM/7IGjK9N1azBSd\nwALfSXZu2FpxzNriCmv/EDJhWlZyyk22X8/B0XLaBSp3gLCcrqfWYwHIT+8n\njoCkkWLUCZ/Svvx9WDwY8TV3ZcLsGhB+TsDv43/fllw2lcVmm+G8HJYrJH6A\nKloTjYuY6ayyFZQ94HC/Yce+caANkSsutaXOciDgK2Fe//mVdwTrFtwVX2VQ\nCfl8CR/44G1LuuHv8+OWhWn1QOkhg1v911uhzueRV9r+FZlWTDSUtInj7MZB\nsrew\r\n=oR5W\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.0_1554139146947_0.08832491380004592"},"_hasShrinkwrap":false},"20.0.1-e2045ab.0":{"name":"eosjs","version":"20.0.1-e2045ab.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"6b01253eb5b65b259293baa03897ddee878a5117","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties or merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation.  Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.1-e2045ab.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-/N41gNMwc6N+cg4h6fx7SX5xa/snw8QAC0KClw/hAFvZ3ySg9jjf3DbUGE/tnDsZljlhqzpl3xgWI5nQNb5pVg==","shasum":"949f9112c616ec10a06831527c351ec5009fd505","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.1-e2045ab.0.tgz","fileCount":37,"unpackedSize":237390,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcsd6DCRA9TVsSAnZWagAAAgIP/0SO7KKtLj1a/xpCUWcL\ntWvB1Rb6Z22yyta0Rm3ubkt/eb0I8ZMwAk8oCDP21ieloaqJ+CMjyQ8Mxnf3\nHF6Ottf2ccQoYL5AezuJJKtAlzifhalJ/Jk3GYx6yqR/dAJAaPAE4t+pHmbu\nnxBDXHJaA8I47As93/EUKh/q0JpzEuEo/fcago8+H1PK1H5LSrtWW3AZMmGr\nG6qqnIZ/6Ohjg8C/f/WfyguZdh3Uz6DWywRSdvfEXJ6eZ35G2+JFRB6kpO4a\nxEcsx7gf/o04OUWntPoMbCR9m7w7k3EF48iErpBONIfDlevX/CAhHP9csCvm\nn43xYaSgjqDO+YpCTrkVLzHJvzdEnqT2xQoCnXZ9sxEXNGaZcrGgx/RWKPOg\ns0B29Lk4+1Puw5iHuvGNghjmk18aNl83DkCSVZk3eeiqTOgCQuVoHLUXMySj\nABQdObwp5h4K1Y5lYWarqNQUvO9P9uxrEOPF6zTGbL5eIpopTEaAVs31Kqy3\n/ughcT7jVJYKz0tfx5qwhhGfnP63wha73wfQkkhdA+bXjJ9BFfMbqkJBuZgV\nv6AeQAeby6fExSQ2InJATjPbIH4DPI1sMGhzm0o6nNsNDsB0iGji7ALkBAbp\nW+4F/D2BzhE4m0zSfMsV7JhaWxheeTl+8FVV2NjgvyY0jFBiIQ4RAeOaiHG9\n65Uc\r\n=P3wQ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.1-e2045ab.0_1555160706185_0.03727329742492902"},"_hasShrinkwrap":false},"20.0.1-8ca3a69.0":{"name":"eosjs","version":"20.0.1-8ca3a69.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"375170da0da64558890062f577db22118aaed301","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties or merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation.  Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.1-8ca3a69.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-UNT4a/mm/O7qDqh0L2Tc1Yc9Z1qGVvAlrwE2u6vQYAjbuvlcdMyNLOVhAAk81Q1bIJSOeGTHCPDD+HuVR7sEGw==","shasum":"a1ed5a7faa62ee49f97f1db3b9ffab1f07fcb740","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.1-8ca3a69.0.tgz","fileCount":37,"unpackedSize":241571,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcte4XCRA9TVsSAnZWagAA2KMQAJXBee4MKYUkF8JFi5TJ\n52gZ+D/xyKyq85Gb8X+T9DyRPp1JBg+NdQ/QuPqovyNFP30fpCxyttjveizj\nVgCjQuRQGLjvl2dgpqrAfY5h3gvvcp/b3yiBhkTy7xxwwHORrPS2gLFdNLBl\neJFPhND4DNaRoj4U4IDVq5lQXNre3IXuxarJ+Rt63d1b1ojgAswMLKD0vRlo\n/x/56Hyq9LbQYdHoUQzs+Dnoh9SwO6yOsqK8ZKhJKX2BRjbk0VGCdjqGB4/6\nWAeEYZlBa6O/NXO+0viZfimn92ilkChe+XaG5RfEjNEDeuuwHA5XBhJRhg3b\nhf9bvOqARDLiQgzyNyTYrKY3fjRehl0pl5FZzmZdRT8bq96kKNWAtlWiCggb\n5lF+GZ2ONMooFz0bZC1i8gs8sGTt/uGrf7Eob/xYrfBw8dT6X4wFZ8eDEKbJ\n40EGMuf+Y8fjIJd+9XP1AKAo9ZoljUaUPEhdTwN2+yG+z+/hIefiQeTeFKR1\nPzdNLM4zZMXmbM2IN0Zx6OZdGwMD+PJpwLnk0XRTeURwBGo+YlJJP2IEuCrE\nr2BimUa0oqDi43+A4kBRChuqiieNos3M6nJiekBFTVay4O5OD3qVeGZdXAbs\n7/Jx+hrDzlgh+j1hHMTfCx1ibygiyMXCmtUqookFJqEleLXkuOO5W6vZyn8J\nAQaK\r\n=pEm+\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.1-8ca3a69.0_1555426838635_0.77295588789982"},"_hasShrinkwrap":false},"20.0.1-e34c16e.0":{"name":"eosjs","version":"20.0.1-e34c16e.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"b5b1b4f3595b0b27045e0d4d08a9d3aadf27a45d","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties or merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation.  Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.1-e34c16e.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-AIVuiXiJbZlFHbeZf4aglgl4DmE4Xo2f8wXRg5xOj+A5/ONmWoUcM1XPRYfQDCIACCQWtJXzW8zcYXaZyQQzQw==","shasum":"e2b5b5d0173700acd60c40de5ce80e584b953e29","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.1-e34c16e.0.tgz","fileCount":37,"unpackedSize":242482,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcvcGqCRA9TVsSAnZWagAAyPkP/2lAXaskToUHiOtL8v1D\nUJE1kxLYMUDym9Imk+gU/BVdkkLj06maX3xxHXswYBMj4CYSpO8qRnLTWoGI\nWl7El9P8Cl/YBy4KrTkHNIbXc+OK/p6a54iwGkJSjp1LOBpzsKs+jwktuVoR\nxBFjTN5H/6XO4/DDL1aP+28Yj+oFQNgSnojbC1nFnLH/AAHknjS7XSDd2l+n\nU/327bb+kyx1sthr5OZnhMnU8rezY/xfrDDe27KiEGyG/q4MgMKWVahUpymi\nPhQ73E8pAZfkcGV8Zy0jQiNkHA+FZ4ZrjWyxnYGZXUuhEXOQjkTparThFhNx\nNmlGBSIXoF7/kuidIWAG3a2G/3zfZwl1LoSntFSODId2f8aLRESMv9+QaXnd\nyb8qHyAoy6WUMhIIiog/P5KhOYYfsg3xdgng8wN2PWD4laxPaC9v+6knHSUs\nJMdG/981l9t8QhaXMM3ErDrPTIPHnj2nkgn9oaZzkhxknP7u0/noNJDb5H9c\nlYwEmr4fkvrXAh+cPy8twFkDwYw/8335e2nM+c1wJ9iXkJSWGqKttS2K5kHu\nrJNjHS1BRUs3gz+YFOUau81vbFX8avLrSbaUoICLmCgsrfxMQ2Tcg90VP5i6\nc4YrQEVmeSvOVIOOwM6+yuBbd39AQ84TRRLF9aMH0VbJox9LAD2T/6Po7iFg\nSftM\r\n=8OBs\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.1-e34c16e.0_1555939754019_0.8504257786447962"},"_hasShrinkwrap":false},"20.0.1-6f4bb5c.0":{"name":"eosjs","version":"20.0.1-6f4bb5c.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"a31d1ed7846fdbb5e2d830053e56740536227d43","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.1-6f4bb5c.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-VfnShJxsnk+UX7Nq635tsIycorlbyLSps6HffhOsuayAxtmOluykYUbzzbt1x9dZNcOc8NKoayA6tn1BOXX+eg==","shasum":"665713e51abd4c090670eb71cdb7e13cbe36e4f0","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.1-6f4bb5c.0.tgz","fileCount":37,"unpackedSize":243157,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc7rooCRA9TVsSAnZWagAAsSoQAKNnTNjfjMo9ZEhStmuo\nsspRUpc/UwPMzArFW5zPx8LGpdU/Gujsyr9RYYI+6HLgp4HoPvpnjp6eifr/\n/pigvheVtLdqpNlsJOikyNXhxKvWiOTL6eFdDsSdmv3bZ3W0dSklnXbufqmV\nq/yWGbMQprnuG0eooVRuu3Qj3Yabi+KbOqKYPa7N1ym1TVXrr02ePBHPvTmP\nFMKKNBaN4rHSbN5hVGbHOBHhU2LMTX1dqnhEygSZhok5U7bLkafUEpE+SFZF\nHcEJtK71MkR3qRSzgzghBFYuSJ2bbql8XlfHt6oX5CYAfqSx9PPmPy2Ti4hN\nGCQRImyDhescEEPF5xbzn74B/uICmCFu9937f7fluhL9IFQoJcr77OOx9wQ3\nLSQ1hwg+6hEQCLnvYYP5VH/CM2NvPYiu0+fxvhn6/Sm26ZUsQRUalIzBAmrj\n5fMjr6lBy4MpX+4F6KGFbV+qRkmzF72gQGxaVM0yAcD1LAX66r7PGx49Tkol\n8QUxQNHcxZVx93VIRbq2QfplRUD1NLWIWsSDm5Pe9ys2p2x9ebiu/wgxRzYF\nZCv3OAHn79mFfbD7/DrwqzKx1jJj2QsBmrVvb+9Y281PkE/M844Zy44kirfY\nA+1dF+vac3sP8NCmuAdLsXSDSqN8zk8FPsl9W2ubhAc9hOcoQaY0yQ74q+PG\nGJXk\r\n=zOpz\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.1-6f4bb5c.0_1559149095504_0.2768913731254037"},"_hasShrinkwrap":false},"20.0.1-1fed0be.0":{"name":"eosjs","version":"20.0.1-1fed0be.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"1e11e39a9bd3a5e810c8c4e63b10488c473e59f5","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.1-1fed0be.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-4K699zLN6KPa1MRM4a7Cxbq7i5QJxEKH3x3dExlAzDW4FsAwVpRPIEp3beLLTv5MQCHFzWJhpMR64RZWkX+0zA==","shasum":"bf45215ee0537e36c3511853c8a28a348587ba5b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.1-1fed0be.0.tgz","fileCount":37,"unpackedSize":242739,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc+nE8CRA9TVsSAnZWagAAPuUP/Am1EnoAVa4m8waLNMuP\nImt3aufsSxQDmQv/ajMjxLvHU1IOpdIf0dMZYIvt00MSHTTLJizi3th/XJWw\ncoC+T/b9ZuQSbU79GgCHaB1Kx/vtN2M8Sip0auSKkPnwUNuIibBdZM6wCjCc\nRGarKkvsB4V5ij7afrXBdk88hIlTPPO8ygICCsCdup9z/KhVyG4CbvlqP4A4\nXlOtpcI9k7kLiSEvxbzrPpsHaDbLkLQEIc9XIrC3jPL1oh1cS3GUkX1NiI31\no+VXC/F4B7n4RtBMzVkxudncw0oNNRoPwlJQ9TqvOsj0KxpXFXjj8GBW95+K\nFo7ohHVdwPfnKKbpPXO6MGaOytNju6Z2FU2TYyc3m3Q3bKCQO41Ve7d5X6yo\nBKuZhdBWeAKZ0vRYaKZQKo4XlO9JtcqWgJyl7XOJo21kfHWMmnfY2ZQcMkE4\ndpqAe1pGLcHG6ZWGazq9xPMoOMWYFNkUQzdqSO/wuOba+5ITv2aBKimUtVP/\nvMbiBINyKokxAwi58ermkQ2trZZhetV5M/YlHDCWM4Vnxbf21Ma8Y83EZ62o\nJLB05KT/c5F8TY3+DzA6/De4VnclVMnHCXwZYkOn5K9+7/JXIATvUqnXKSXt\nHqiCwN5Y3YVdaQ/QghlMXrg9FkZoJP5k8YTngfQjUKz9B9U8XhAEDOMGwCH4\ntKP5\r\n=V/JP\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.1-1fed0be.0_1559916859273_0.562486337325603"},"_hasShrinkwrap":false},"20.0.2-9ee5235.0":{"name":"eosjs","version":"20.0.2-9ee5235.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"498b9b1df9f42a48a9cd6726cd819fc73d1c146f","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-9ee5235.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-J3uYC5VKpHGFtD0n9RFtu0hL987AihHdLIjwMCSCUkkADXhXXAV4AzDc6ECHR5Ej4yPCJX0DWvL4hpzgJoaekA==","shasum":"e547a21affd6f19b16b119d8091ab5efbad1aac1","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-9ee5235.0.tgz","fileCount":37,"unpackedSize":244268,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdHSm9CRA9TVsSAnZWagAA5rEP/0qzsVa0mOwittOtxQ2G\n/hF/Mh5WdYprrraKDKgMMUZTxNQtMNGORnbP77h5go6ZEHFUeLG1u7CS3uxm\nh2yYojYtIIrT0o3pjberGCWwJUmtiilNE7n1IHsocj6JDq7L7PVDHqRc7WWF\njIieqI219Jriu6r/v6mbnG9IF3BQf+IYLsJFgffVVfTq4sbUYmQtANRgW2tO\nHnWeQnPQTx4ly5jz8AcJrQ4J7FR0tbzl+dKL/9hpjr20rSisKt0KrNI+65fQ\n+98KzfP63J/RlUn/UJObG+i4is4MQnjBRQS1ipPndIzFJKMdrcO23WyHFeGw\nj26JSuGePI4qbqSeRvQF195e/urNYKYXwfEjpemvMfkTPHheFJcqDyicCE+w\n938iLm1ch08TfGCqQ/y2JDS+IEjRBmscKFs8XXT/jogTJksI5uDcyEdBZaZf\n1jwR2ICFoEHn2EQIqgA1rwHD336m2WKqg2koyEpwaCpSSE2eLzpcjrZ4pDzn\nlWPFFA32guy69i+fbU8EHK9olA4rDmeCglYUn8RBOvEgKnZRZRpE0uYh5zCl\nUj2LM5obPgetSLQuub7Zzr9cgEY3TZcirZH4rJLcuFes2u26yv5dJwhgILCy\nRY38SWw2LqdeJOC+P+FfRZokR4y5IirdflTgoGlSptDhEgcidgpbDXJmZqTN\njuj+\r\n=chcS\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-9ee5235.0_1562192317015_0.42781672757593525"},"_hasShrinkwrap":false},"20.0.2-cea185c.0":{"name":"eosjs","version":"20.0.2-cea185c.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"8e6e6f4fae8b887155555ef2430a76b5644f0da9","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-cea185c.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-O7+Dw7nGWWFh8Zx3qWA3ljQFyaJVGr7IIoeKgDY17W49fHUKDVLvfbqyo1E9LvYFBPJyf2ldeCzoVb/kXkcx8Q==","shasum":"6c7913f05dd79eb0555e172a921a6356521efc1f","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-cea185c.0.tgz","fileCount":37,"unpackedSize":244322,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdH5/ACRA9TVsSAnZWagAAZ/4P/3rRNkjr9U6b6+c78UgI\nSaM9lqQuO68uioJGgcXrgER4tXbTAhCnCG+Qhdi8VrYJbfEpshF6c7P7ML7z\nQjPE02Go5wJCA9ygYFTfzKLrzfkm7i+ZTWAJBfgEDXUr0C+eFOEKFDcJvzSe\n/+4BWfsIB/GOvlzmxBE1wZ/O+LvwqxwFOZz7hvd4BOL7YX6e2Asdo9GtNgrY\n9OfUPVhIVWNxq5D5UNVkvN6JT9E4i9/OZ15AsTVc03u2/5Fsrj/RvH8gO+wJ\nGcMATLhZFeDAQFGe1MenO9ulaEb2PJdxgd4XGrZV+sdLlwcjpwpIQwvqkP9R\npCfVtbvUdxmU4Xhw1IpT2+weihzsXPO8VhZkYBsEtqqfrk3GoTye4K3SFLGH\noN/lFIKbei7hNY4ACLxFYuQcgY+u5VTU28KBhmESxh9awFdIOFpZbYuwBog/\nw7Rkud+pG8a04OS5cc0VgxdgjH9F5YHK6rO9GOhZLF8r7SEvat09jwEqLHOb\nF2rhHlhLUgYPXsKCi0CJubi5vTON1CcIThK0g92hfwtfXqWQHtFOt8Z4UM2C\n3f35NSzoeZK8IzNnAwmKqojBaXwPDQi557CKXLIw48pg/qC3Wj/tS5+Jd6IV\nrBXoROD9zp1wGt90X8soJY8wx96Ep+P/uzS+NGQVoLABQUKuTvb+WQg9V5Gy\noslv\r\n=k5rc\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-cea185c.0_1562353599556_0.7120460240881745"},"_hasShrinkwrap":false},"20.0.2-cbcef42.0":{"name":"eosjs","version":"20.0.2-cbcef42.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"9461c09698495359ddafbcf368f0cebf92b1d2f3","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-cbcef42.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-wSFXqFQi8Q6FDqt28s6Y1tO2YaIcTqgVVvzy//gCrSZaclkcRkbuZ3xHt01HQiGrE5858Gi2ADraTKjRgf31hg==","shasum":"feab26ab7b189b2dbd70f2e89bf9e31f5c57fd74","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-cbcef42.0.tgz","fileCount":37,"unpackedSize":244322,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdLJLoCRA9TVsSAnZWagAAjmsP/03TeX7X2OS9h7YEPSSk\nCPwaQkYc7ZZegcPJYo9No+e8A/1M1fr6GxIA+ySUCAZ2KaPIDdDaM7mDFu0F\nBhWfMTIAf33DngxMNuTKsmpe46KyZU+NM4HiCogZ3FUaYKPLUFhd7hc4WNH3\n7G6g3SeEY8JnNr8xZsXaQYu3uQ9Zr6XRRjJZS+iiA6Yb5O8mNEMZtqpGVAU4\njss498e0BrBZam1vt0iUqEp09hArCRrx9pCxX5wLqlVTc7v46ucsnJZnSGPj\nTMg/aKEjxPtEhNjySYh4LWUlVv1quqw9vixnvZ+N1+i59CT7gdRtmhMGLbcd\n0tZA8hbzCQgHyxo8AksyPTYJOVvxWGeRaC3AnrVjo6NRLEyUVcXkMWUUhM5d\n1ylRJ1K6pkx+YbWeIMGJ1dXkfHZE40EYA0FdyL6SG/UGBfOc+AXqq0VTv3en\niNOSvH+w3Q+i8ZuK2ANjiMAZosoNwV2/62POXXJH8G5QEFcI5LUdEtsJCmof\nUNJ8fWDecCp89uteU5vBsHapsoQqiBlWq/CFfcztMadqe1/Xu7rzG0zvpPF9\n0HH6FAZ5Wn8cBiG1pjSkJtGhOLBI9F56diFvaqMrauA/7y7FW0mrrQKwPxe8\ncQnVMhzrFyhL8QRWZLoDtNj5+PPmZOBMMHfPfdgbnbjoA6fL1l122tpK0SCI\nGohJ\r\n=GaTY\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-cbcef42.0_1563202279437_0.771785868059492"},"_hasShrinkwrap":false},"20.0.2-d85dbee.0":{"name":"eosjs","version":"20.0.2-d85dbee.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.4","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.9","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"6533b48a09af30fb9df756fdd875eb27378c05c3","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-d85dbee.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-EVFZfwBuvszlKnNeococEIyIoOMPFmcm53NZX06x+DywUjtW3SdEsx9VjTVddua0DIqDmEkRSSesSJzKhWoUTg==","shasum":"a6db4def0bcb6a45aaf98b0cc656e006bb283bd9","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-d85dbee.0.tgz","fileCount":40,"unpackedSize":265221,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdTHoSCRA9TVsSAnZWagAAEcYP/RwvgWtrG41oAxcdp3oo\nH3APmgEDeGk14BA9YZLWUpSuWVdO5udsDJGv1BMk2cSx557ZdREyiuAEN2BB\nUGzpCdejeuQ39XAgvJuMk9IlNtSaGTINN/EEgzAtP9X0165IT6yhRvLUChRg\nteWa0eZ7SNmnV2PT95cRLadhvuMiEzEOIwOeGmpipoI6C17lv4x/nL1O8MSt\nrTroFI1uKq+60udiu06sMapHlfHayZY2fQuEivGfc5/wXWXL/Ribhc8EEsia\nFNNgFxWxgP2sl4UDp4QrngyMOkc9oDXh2cznMqmFO28XOy/HUmaNXcV6Iqne\nbxfs7N8gxK7wQSq/y9CH7U7ijoqGjUcqx2k0gCK/ZEb61j4jnTU2BI+uZcgX\nghe/ZWsQn1e0MzqJYiHM/jRyN7+/s2GXX6ce3vBqobBqpdJ/yTNKYoyyqq0i\nnhiJzj4rM07pM8sK3IV05nx3YJOShrCAuc+p1tMnjXMd6211ALNtA/mkr5Dz\ntpk42Ivn/gNR9KmsObYI97zNA8V8O8E9yx6tsev/PxDM8Uhe/EzUMmfA4Xan\n7P8ef4H9xnMrFvT3QenESy5aBxAZ8nX124EXYnaK3J2oPQp+PKqrQKRJKhIz\nGQKcpHNGp5eGShak6gBB2/ZwvBkB9+uHkSvYOlaCYjik01MNWl/6zj3klKGd\n03cm\r\n=7CXL\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-d85dbee.0_1565293074002_0.8978577354358335"},"_hasShrinkwrap":false},"20.0.2-3d6c39c.0":{"name":"eosjs","version":"20.0.2-3d6c39c.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.9","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"a08d0a43ef2e7cb850789c6daad3b1aee363caeb","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-3d6c39c.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-uqkDif8WXyiO7qEHcZS5B9NZLCnCO9BMvU5XVGGS5D+fYPKqqD0Un/XyOmRij4QE4dVtuE8dJqMqYg5MNbf8DQ==","shasum":"f541bd771e03b5bccd7637e1e09e2c7f3034b4ea","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-3d6c39c.0.tgz","fileCount":40,"unpackedSize":269067,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdTa1wCRA9TVsSAnZWagAAn/wP/iP1kX99dgRFwTeBAazb\nyB9bA7x0Ui20ZcfpqE3KzfKPE1UBCwDLA0RrPUYTU6W1/sFxVEFuaMKeSoL3\n8bTn28LnZnKafVcTP3Qp818FHCPbY83LSDzh1RanlB9t/x8YIkB4BkUQeN6k\nn/TJCzWP1vi/KGNO2hVnGH4eaB3c8zUTJtuV+QGDLyNl1JXXDntMT39ZXZUG\ntEmMpMgLiVC478uU06+kioOk6A5KtUjonAKNuhvcB/ot6r7BmlmMo64f2kw+\n+rksOEqDyAv8k9rKkNxkujn02guIW1wv8FJU4MdabIHbrTbLC1cHDRl1N+Ag\nm3hmDswFS9QYt9XmM0pWxymc32/H/PvPGLzQLqNMXF8kyac3aI3rTOnxg//S\nQxxhtV+frIFsRZZp8vlG1NbBIxqzTXpMdBG8BXahmRakQYDLD9i33yrC10ZJ\nGpZdWgTwXMQc1hPX3+g2CkQoWzaC7NhXM+0kR1a+NZK7gAwsUgDLLOlxrbn/\nNBo6wW0X8hwU6PuZvU/vapo5eTPUo1KIrMFbPzQ3WDteku2g2k7HRSRK1aLZ\neFEuYMMP4JCuq2PpU8BPqwn6SLJ9SleTx9v+agZGyGpD+VMqhKYYJmS6IbQg\ns/uWHWO3EgMt5XIDQrPuqqxFChhr88vSXUDMMf7tEBTdYmdxX+tESz1bDS0G\nhb40\r\n=xf5C\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-3d6c39c.0_1565371759623_0.4626117889762906"},"_hasShrinkwrap":false},"20.0.2-4a27bf1.0":{"name":"eosjs","version":"20.0.2-4a27bf1.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.9","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"359820030fe25e92c617180cb4330f96f44e5d97","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-4a27bf1.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-qD8pClvgbLh+TjgfE0LoLO4q7dz8egwz8yf2INMU6KulGfwZN/vsugRjDvhbdiwPM0FctUkC+Gi+XKYSfmWhHg==","shasum":"4d289e4bdd1aa51c9c999c66073912b6eaa61f43","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-4a27bf1.0.tgz","fileCount":40,"unpackedSize":269067,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdUbzCCRA9TVsSAnZWagAAiYUP/3gYr1QNS7j0LFxMFXJX\nQVlL7QCf5J02CnFLek/y49tQkrzmY6hMjwhVP/izbHSPbMUGL+gDlzSniZ6R\naatWH3m/8RRnKdKK00p709044WhPoneR/Wb1P5CrG/CqIm957mAN18VU6jMZ\nhAgeAVwj0yp1hlupm0lRybIMBIP44jiSHFUJT311fPIeHkWldHftPiEhxoOL\nf8M52qX/RqQ6RY4w1ClErxlBkDHG3eay+55uYahjTGkTMbTTA4wgBZI3mCPm\nWHYbmf79T74JdtnTuTIMdfx3xtOWkegeDEGFL7WE89Ukshnj2rnFWv8Zprb1\nq7MuMOhnPUbiPVuVQ5ycI+hYuQKk2E5aRvZzYPn5owVwDcHlTp2XbuFY6KYm\nDeTnDI9wrJLj8mbxvKpJo8N8/qYRSfKapBniZqzhIWbyfqwjeHIXGA5Q2Sg2\n+1jMc48Ob7PNOGZoz4MtZrVddH7SdcQ9/dfnTik2TddtH/yLN9LMOuIWpG7q\nNs/e440jnp2W1ci/ohKRTaKZMjPsq09L4RBFsbsEoW70MufVrZpUBiiITsbY\nlqkYMMzH00iWsIgz2Z76Hq6LNt+D6ISSMQZzvfMgaDb8BK5DK8xb4YB8vErw\n1mt7vrAgMFcBg0ZpWEajCNZvigdCn6/1ObRJGxvIctOQIKuus8Vqn8qdfQoB\no+KQ\r\n=afSG\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-4a27bf1.0_1565637825680_0.7033684928182187"},"_hasShrinkwrap":false},"20.0.2-9487f32.0":{"name":"eosjs","version":"20.0.2-9487f32.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.9","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"c5af448b0aef26fca397f573c64c19fa59499242","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-9487f32.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-3tiwhCPjKZZOiNsq47F3WrGAh38HweuEPsp4dip6LcS327a5iNOXoRoNhqq9+vBv03QDrXHf9gtUCrqBVGhTBg==","shasum":"3ff20c9b7870cdf79fec11e187714116a49f6470","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-9487f32.0.tgz","fileCount":40,"unpackedSize":269450,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdUb/fCRA9TVsSAnZWagAAX90P/RdMP2gn6Fz2vP2O5Wgg\ntyvL1f+RYFOphwqvuMil7Pb9Lz6/yP2zp9smGm5b4gJvIwrZNZP98Z0D8Ign\nWLS6K4DdMnNYng1haXfVAXQGjrsYxntl0QlOZrkD1TJST2c1Wrcz8ySmLoDt\nQZAGw1IDGy43RDSYBXnkVqkQ+dP6oelokyevis+XGolExzgX1W4tqpE00f/D\nTKSDQYCK/zHYDzFGJteuCeCPjlYqXot+SIK/ytc+3lwwdTK+wG+idM49u7/o\nNCDp2fIzncfXO6jHy5WxTQFpZ9VgXbvxNbOMIOx604wnPVpYDCINsf+tiDBS\nmZTkDglEZh/TN/qgvKbNfaw1+X4iuEJK/DHwUxcrTunk2kciaiRCxUgQQpo0\nLRwiHPNivtBTcCHvfRRvD6o8ck8FYyibr48o0XA5zkeXJJMu5dXL9wR6J8h8\ndC/FAPxcQM04RP9wsNWFNMd0t0CRnw36yYCEuag+/uDiZtbB80Tua2poUSB0\ngp1HWherOg5S93QLHqk4W+ZFiiyRD+hgGFlZsv8D3EokBQi3jRFWL1oCBa7n\n3oER6Z3A21KF2wpvQ8NwC/C7tpxayVjWIiPAXZj+wa7m73wYW62uFMZDLfEe\nl0Cy1RtG18CM1U9LUHEHkrjJaJyM7fuQ1M/4MICdhZbZl/iE8GoM5od7kywT\nIdmY\r\n=vlkj\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-9487f32.0_1565638623384_0.18043238584891585"},"_hasShrinkwrap":false},"20.0.2-11fbd89.0":{"name":"eosjs","version":"20.0.2-11fbd89.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.9","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"5abbde6edfc5e0220e8cda632a6514dc25d5a1f2","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-11fbd89.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-BN2ye2ec2kMYrID9TwBKa5ePRWzB3smY3yLXwYu+8KegGpCuLfV0+1lEWuOWZddan8o2yhkcOcyDOKQJbeC7UA==","shasum":"0fb8b3d7f257b961c71f0839cce6e0a5eb8f7cce","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-11fbd89.0.tgz","fileCount":40,"unpackedSize":271217,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdVIUcCRA9TVsSAnZWagAAkyoP/2StzPKtvkCYwkJymgDS\nIzEk9Mlh7StSI5QODg8nxVZsdsQjuoKz92FD87kidieBfdKllJE8nPwL+ePR\nPe2uEHsGdL6tHeUpqiTV8ue26ojfa2NUe2FOt1HlocvSiOZObTbsgSAK79mu\njRdpbVROj0lpv76nfmzob8nX33Jvc9OJZzUJShV/JgQiSN7zXkvfXdMFIHCi\n8GqvTOodj53knvX20UDFHHYugDTJr2l0tyEyOEmhWml7nB0g2n/9pwEfegFr\ndjd4B9N5W1mNwCNXTuzwH/wQW7sP1EuVRH6HYj09WXS8GPQJ5UASORQs0w9r\npz/Ncw9D3TWHanufRUwpsTdYVvp9/n3iK+AwefVmdrjSozn6SVYWlmbjeJul\nNjUTatd9TECtBOT5YPffoHZEDqZxkJCmeo5ZGk2vuFmMU4HaJsi1YcRyWUwb\n6RLpT8NR7qIzwPrnuXLIuuqetzRF1lO9T2WaWkM+krQFbURFwn/KERV8WxQR\nMACY7osvv6rbVt5AlPPOWg13RUwuxcH/lEo2aJGVp/cC6oeQERrJlBTM1bSS\nX/at/HRpbhZ8Hl0ToVXPFfNWNwjorMcatMdHWAyPUlhtdGBlQaIo+OwKBHjk\nKAVpGJ2v7crn0jJKEvk/b/A3L6xR9pxSyhISA9y0DPJ1KcJeYlIRgJ6C5Fve\nIgry\r\n=JT22\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-11fbd89.0_1565820188113_0.9652203296996731"},"_hasShrinkwrap":false},"20.0.2-2b2e331.0":{"name":"eosjs","version":"20.0.2-2b2e331.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.9","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"0516ed4982631603abcd3cd734b0d20ac7533797","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-2b2e331.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-T1S9lbp+N3PeOdgkk8xvjNmfWMFdivwfGhxif03/B4cCwfehmxbuOOSsNc/Fun9L0Rseo+6tCXVKpviFqJWZPQ==","shasum":"48236dacfd62976d33e80296825f0bf10586c339","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-2b2e331.0.tgz","fileCount":40,"unpackedSize":271217,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdZ9mVCRA9TVsSAnZWagAA4ZEP+QEuDwC7Qh/L3ftIO/FZ\nF5oNHVNOG5B1NCPRMt3OmmpbuPILEA4lpYgAJhNv03SlZbu8Ylx+J8ebdtTK\n522Q8eJfPp/Gr+cthYDyLSc9SK/n2lPuSQ0+123V3FPOxGVTrbNnuuvfZTyt\nac5sZpcZIgYtWWr22tpAh/4DpskkLZNbAVyo6YIhCMMtSL+yYzbnI/ThUuzR\nc9i+5gDwNwUyT2WFi20glW+c9whx5KANqwKsTnkpY448vVPKhkys9/DCaQuR\nBNstkck4HEkJe+OC7SpYWfxXqY+OmikNpiuflF4hRs+mUKvAhE4bO8rfrfED\nV3N6L5Dyk3zDC3Ed7AKu5X43N8k8cHT/ktwn80bPjJ94ab3noBZqLpdMCjK9\ngRCdSRfw1XwoD3S64p6wm+YTvMlFwedJL4YZbyiWYb1L+cvdQI6+n9EpVh9W\nk69OeoQ8h9mVVAoTK7/uK65LpDFd0RfBIgKDpoYg6fqQUbk92+UfWOcnOSNz\nAhALj6vIylwTqlP7PbS79hywO1GxFriVjhvGrT5DhDM2bYEBh5eiYklkkOuB\nseNSjfN4GnoGjTTiGwqkfbOcCSCjYePpxeW22S1RyDJc62533OX9SJJCOp+3\ntdXdJLZZmdJu+l8WevpJzau++i1rryFsfUBzL9XMvuMad3wYohzpgwcNYind\ncxo6\r\n=YzaB\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-2b2e331.0_1567086996378_0.5477458670588189"},"_hasShrinkwrap":false},"20.0.2-a53eecb.0":{"name":"eosjs","version":"20.0.2-a53eecb.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.9","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"dea40ffc450078842ac32b2ca3830e86b8d2c963","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-a53eecb.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-VGirrkYKy3LrBMkMH+C5ncnj0ZZ/9QaL+5RhWFtxBsOsgH+IiGwFtweBGOo0aSXlOJNJ9Mt+kR01tYhm3QkTDQ==","shasum":"1a131bd8fb7c98a2dee178885dc47c9899f7e4a3","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-a53eecb.0.tgz","fileCount":40,"unpackedSize":272010,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdcBOVCRA9TVsSAnZWagAAZDMP/jaalGeHsUtv8uEU17ej\nmzrlCOiPr2v2WNUvyJHXDRpTait97fTXMeJ3QMxmn3k1z2XtlTyUb8PhcaMu\nEFx2NArVOtSDkVY9EIHCrN6/S47lMwmQIFP5oHk9iJfUtglxEBVmmP1krJov\nbRuNp2YHllT0Ki4u5ckCm6P/hm3aj6cdheQhzBwvE3zFwa+Mer7aypsHDJ7p\nOGrgGPiSXR+G8S7EJnvHP0dtFlA/hv3kd8Wx8tNSmHFLLE+MMS8XC6kjogmo\n6L4/3tn/hUTPA/pYhb3jNQ3+KXfiWDKP58IiNJK7hPlsmDH4dGwFpzlWSEvh\n6fOaQXrcbQPMCW0ev6d+Hn7ShJSmwOqYL9PIfsETohVIG7/+0lrJTtHr5R9+\n4RZ3FB79ZvKytnk9a9P16fdXd3z/wPUfMGYkVEUoXVVyRBHz9H1ry4pZ6zh0\nS+Z2eWzM2fUiOlA9szZ+5YgZLl2XZwS0N9fyE1Nlh6ZPFpxrOsE0IAzG99pW\n4m6pvXWMYX9pv7RBl9MqvIXEEwMBAGdNWPcnHI05E43inuaIL6QCrG0qym2n\nAiJcZXRwypYdRA+3tJ1fiV84pLLHOjY1KXtg1l6v1RMKxC/TdpCpkoUwbAFh\nVZAeNahR9lvXrmdh8zX9jQ7tPgVBJ0oUNACbf7HCnTWY3UdNB17itorVd6Lc\nZ+8D\r\n=TtnP\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-a53eecb.0_1567626132738_0.19627441679734647"},"_hasShrinkwrap":false},"20.0.2-27905cc.0":{"name":"eosjs","version":"20.0.2-27905cc.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"7a0943a7c9cccace00e25b7859a25b2c76a820b9","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-27905cc.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-aPMCnV67q6qcW4nZSI8YRLvqwRWDWy7s4tNioWdXMlcFpsaUEsxjqthF8FoLSUz8nRQyAwk5VK7uwaQGfbVamg==","shasum":"8f6ed1633b855b266ec5e643c2d5c388048e7128","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-27905cc.0.tgz","fileCount":52,"unpackedSize":285321,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdphzpCRA9TVsSAnZWagAAP8AP/jpJgt0i3aAdWJYFRhP6\nrO+gHydsDaDiuJ1ibHRn4qvC8DJc7Lq/n2P5huVPMXhb+4AyWA4sI1iEZ3GA\nb0MbSrVfrdM2w8NX87Accsbejg9Ul4qx9fuBsDWNIld8v/a9Hl14SWNpybtI\nC4v+KVomIANxcL67z428DJIrq/UHC4cA1VirxYhE2KVTtOIRL8+ZE3iP+Bnx\n4YCEuFuRwXtkeYOzLU+jDwTnq5EWSNQalSLwkLjdNdQ6rXXApoFwLPgva/X2\nilfl86whvtEuvQq4lJSinEONMrsYwQcSxDH4V7IN1J2zHKOFp3z8nXS2UiE0\nbpMhpGV7R0G5ZtUg7/xAN3O/PH1xCOrzpYwqebFbjNHLHPPNIEKnUdJ0z+BW\nCBdlOQOg9bu9n24v8EW8wJl8f0YsHwucJ+uL3M0XqXF+PsyYNm58gNFfoCaT\nbgz3Vxz/WV/ZtcBK3FNrtkNxH6fvEX1SnPsD9NOSltxO6+g+O2qmWjMGj2iJ\nG8ehSLKqlgchaSnt1BogRImiDRB7e36KWX/Yie98iLL1xBiLvbJQKd9X7CmU\nzM71U1Dp1J9wYrWyiZy5rQOEuzN1LCmr9juhwuFzSjYauY8y6Va+uz7m8TDH\nGA+OkUbbRqGR6xjWUxMaHxghVLB5/rCHNPEa4Z+gkLsfdnwDTeGEOl2SGb7c\nw/9U\r\n=nbHM\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-27905cc.0_1571167464626_0.9686587896878409"},"_hasShrinkwrap":false},"20.0.2-af47366.0":{"name":"eosjs","version":"20.0.2-af47366.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"4a18a4396b2d23f68a2593357a767064863f0542","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-af47366.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-VkCfHhEPM+TtQBYnoG9JSug0gmV5qhCT7rgySwoFPH5qL9f7+OzmYS3VJ65IqzUzaD5yD9utcc5aY0Q0dKCWxA==","shasum":"b617fbb6cc176accf6f40b6836466cdd7c9b1448","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-af47366.0.tgz","fileCount":52,"unpackedSize":285543,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdxlHECRA9TVsSAnZWagAAdOkQAJxGWpjs2rFDh7nq7ynr\nU/osJYnH2p94ZCu4VS1nP/rJLDI4R3gNj+HpQfIlMoxcXeG9a5T37eZnFq/U\ncUcfMsUaXMInpHnrKD5GscXfjpFWynLQc2PH//Cz+VHOXM3VhSkUcCKhNjDk\nxM0JEIl9Z+MNvOIc5PiRNaxbDEA13b3y1NqAM9frtgXHwG7+rd8/Zu/34SXi\nkIh5ndUiYI8EIBkcMDYhRYGwFE29ouNRkYyuJrIpO1BG+fesJdlSq00Y1937\n4fVZEH35wv951DML1EOQjEFhm8n3O6CLTvILVtWP7isp6ZR2GVwFkG7w+D9j\nVZoUOJSOTFdyfBTN1l1w7Rz6K0cQmrHUqU9LLfuCgRwcte49Qgoed2yQXNRm\ndc2JYk7Uy58hTCB61RrpZCEd/EIol90POl/TUnSnFpgVCPXE/wtBC5kSg9kX\nBTpX7Bl933sV08Svrwes25Tgvjb6coxxou2Nk8Ue56sYlARhG9pJiFBlPc+E\nnAaheW2wo97nKIqZCjoQAoZ+3d7aD7NZSFGjYhZw7njQ8c6TJtnIQ4Uk1wN3\nW0k0Yx1skvh9C4xFaKtqPwbq/XZv+TK1B5Fbq58kEfLKdTQrYPioeykxEmZt\n9hzoubTH7+yH3ZtPHrHOm9FHHYrD5MOQ06pKwVmYI7acxmGWXuPiCxN0lRK8\nm5Nc\r\n=i10W\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-af47366.0_1573278147609_0.8092662286607497"},"_hasShrinkwrap":false},"20.0.2":{"name":"eosjs","version":"20.0.2","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","eosjs-ecc":"^4.0.7","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","gitHead":"cd2fb093e6f7bfa34948fbffc5d7cb3fd995460b","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"mikemanfredi","email":"mike.manfredi@block.one"},"dist":{"integrity":"sha512-rDITnI4lVGqCFWbjum9Y3wBomFX8tPZjI3ustssECkTHVz72qByq53GnPAtjTMUZqjYwyYj0Q8+CZLWJe4+LmQ==","shasum":"89f8b802703bfc7ee75027cfc2464bfc5ee7f0e1","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2.tgz","fileCount":52,"unpackedSize":285558,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdyxhKCRA9TVsSAnZWagAAC6IP/Aq9jSEwIi0OtYQJw2/a\nVHWEsmYv0bndwmUZFiHgyyWoWSphwYnLywtMvfaBbAHPuHtNaVpIbRYZTdUc\negHqPJ2mLiHKWWeS8Fs6WTMeZvB8M/UUplAMTct3Z/Pg1bPSd7aoqM4/hE1f\neQaRS7rFzPRayRc13WRppZ52RAyUqk9rYVI3Ml9wBPuzg5I/mcuvbKA9L1V6\n6lsNM+j2Mae94WGjdftekEmXDEyj/q0Uw6ZEc2kZObrWiUd3wX1CwW91/g0B\n00Qykjoz5OKJNGobd2h7rK3nXAbzMni3FH3R7aFT+mOJkO5DSBA0hVj8m6FO\n7OoEcKlxuugTqN5aHu8LmfrRU32awpBE4DKbjoqLcwEytGlpIwM89I8FQNYy\ngxT36/XxzV+9ED2MNXKM4FYMMoneqUJH8Zrghl0giYNIFXs0B2b49kBkWe/V\nLlmgoYB2lsg8AKfs4SId2p9lmtDB4eYQuWQc+nijR9BuF8WqQ+B8lR+6TShJ\nhzCaWdYMBg/ctfRXTUiAproF+W2YeJA4fr1VpuQUYgO0PuaoM64pP27CYJOS\nQjO8Y86t9kAUewfaLkpqJWPYmckMfwOT8JEpL5sIRWkjV3xefVMjwJq2w7vN\nH8QZvspFPAt+gy8eVK/LjNQc4M5ZABKisfXxV7F3X3RdKFyyZmXoj6pHQL8F\nEjBH\r\n=1YO5\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2_1573591114524_0.4095784495301724"},"_hasShrinkwrap":false},"20.0.3-cd2fb09.0":{"name":"eosjs","version":"20.0.3-cd2fb09.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","eosjs-ecc":"^4.0.7","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"d015437a3bab995ca680d24209a1ef3b99ab7ea9","readme":"# eosjs ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.3-cd2fb09.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-FuMr/4THF3nIXXOBf5EniGCipQta7amdXv4efpGTXJZRR6vJ3QJAXu8kaSy1mmyKbUAPo56rudrjggTNY35OJQ==","shasum":"d6281fe6cd849ed4531e3029a2f55fc7a907817d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.3-cd2fb09.0.tgz","fileCount":52,"unpackedSize":285568,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdyxiECRA9TVsSAnZWagAATp4P/AhykWgEdfzX3eWE0LzX\nAdXSaH+DgvQ5NBMafTwY8NfEcEwCtEC/BYXS/mnfUhsIw8Rm7PonWTTrOVnc\nVxhuZhG8ZtCpTVbRy4MbTJZM5kE2h2Ah1GTu48Y4NyMUGLGDl0o3JqVAt2Wa\ng1a0PzkWqY36cG53wn/BtjZwoJnfwXJGYjcXK+jZCwG3WNZXvM/PxoMQ8AyX\nY53CgHysK7ZfjHH9SxvBXx5NEns5MVdt4Vjnpur7FpXFh3oXxSCRl2yMzuiL\nDG1heKbmSgKO3Ikc9zhYodu13g74NfuJwBScrRQn7IFK1QWRTounuUIjycn1\nQevdcgzsrxDHq4jszoMrAVjth3ZSU7jB/73ovmc++uXNS1QEIcKGYq73p8hw\nuNvfzk8EOkfQ7aAflqG6w/dCDdSSHsYHFwhVeYZ8Iihs21aHWYA3oBo+W897\nt+y95pnCqlAlo6uTBTSe40ioxPCw7GOe5DYaMkejQiOAbl1ju+d7D5CV5SxK\nuLJm4c7d/Xors7wWEFz5hepD948t4ulTgzluUm8FVpSsqvn8SQrqfPUErltd\njNNPJYvmCImYFPQXHyL8dtcWTKSPK9IKmzTOW8EPSSa37xYhqUvwnbzTYhmf\nrXdS3wjOZv+bQ9r9BaGhIiEyUYfUibx4elFH28TxMthTUNnqSnW0RxDmaLJO\nEFDo\r\n=3Ixx\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.3-cd2fb09.0_1573591171629_0.4926141762621301"},"_hasShrinkwrap":false},"20.0.3-7fd6f84.0":{"name":"eosjs","version":"20.0.3-7fd6f84.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","eosjs-ecc":"^4.0.7","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"674c5fb632682ee82b526091eba84494bbe27e9d","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.3-7fd6f84.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-mB4d4zVU9uF+he1F0xsiuq2AmHRoHJ7e/Aw1jDgIHqOx3pt+DBQLrOBKmzDErC9JyAnEGX0PeRCqEsdvaauaZw==","shasum":"057a156c1da8f84f580a4664d1386d371acfaeea","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.3-7fd6f84.0.tgz","fileCount":52,"unpackedSize":285966,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd6XevCRA9TVsSAnZWagAAlcsQAKDdjzw5SBjYOzdzZqeE\nuCX5zk4FN3n5o6XH/eCnmp0+dsNb2zqcUqUR5SOBLwZm6O1S0jfqXKEkCMN2\nYCVLc9Ub8Hsy0jN+mIEPFA4SRfcmBdLtwUaWEmFoOE8noWlcLLlcCc9gGEn0\n9kEbqs0xrUR+If9j9Vpp6y+4CufXx+ATosZIHueNNi4XdSVX6zSF1BRE6BcM\nCePEKUsqifw6Fb2UCgblfHU2RLQAhu/e1R6DB3BOP0rZg0Npge0h2j6AaqPr\nRMY6R0dXDZ6tYuZMP05FA45etDytwsgn12oLRBjzkNzDG/VpOwjy0oZz2tm+\n5LQYrmtSjdAhAhpC9p9TMo1TcLSXHqlHqOnNwFE7ZF43xDGrYSkbxkZkv423\nOJh/HqMOaTEl3zoPRTKY/3ZMNJFv2x1AtlcbKjqBUqxnmZibTZxQkt92uIDj\nWcOsMjmq6LbYHcl+B8v366d806F04hnG2OM6zo4Yo8YG77RqJgvds+NRFxF1\nsbhZdee1Vze5r/qGI2nED7JV2NP4jsbSMau79c3lFIRTnncAXFzmxsO4aTPh\n/6rL9p9Sy4MAeOOJmGm5N4reHevV7dG3AjIcc+/NVSVrEdr0UORC1pIxqUqq\nxC30PQc6bsMRz7ljmOipEjUdCLkiD/r/W3ecq+58r76OLLz4ZOtxgpZ3okCc\n7qwU\r\n=E7xM\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.3-7fd6f84.0_1575581614485_0.17984395296776912"},"_hasShrinkwrap":false},"20.0.3-a61e5ff.0":{"name":"eosjs","version":"20.0.3-a61e5ff.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","eosjs-ecc":"^4.0.7","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"ef4146af72c5fc72ff2f661133fce862660d47df","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.3-a61e5ff.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-ZGx+1X8zGD1RgM6i+08h9/P+tg4YWxJzVH6wxp2XviEjncxwh/87fi8gaMgVATPJtVPZsvKPD6mcwPFvs0Cldw==","shasum":"e77c72a2fe212b6b36132db6322b21cdb386a7c2","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.3-a61e5ff.0.tgz","fileCount":52,"unpackedSize":285966,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd6oJICRA9TVsSAnZWagAAkNsP/2h97gd2PP9LqIT+NoWV\nJLNKNdm9/kZXjtbn7wvi24D0YIvmqqo787VwVHfmLjPQgLjawGpXeE03P/6k\nd6W6e776MmN7BiV7kVuYv8/gyIAPBjUyNQjgAC0IVtX029eyCmpnGTzop8lU\nMr0HY2yfQaUyjIAqmtGpc0KYpyGo3S0d6sM9rj0cuFAgdk9Mu+dPADUYJd7x\nSzbDSaiHirbYyNTuUOpZT8X64H9B8io1Opf78a/NJy0+A+23disE/WLp1nea\nLP2OzsYLsIdT6dbSdex9OHbFYmwpzV1+DnOm5tQjd3h6Ojk+s045KfkiO2L7\nHNQy/HGgfmhPKQoh4RSws55ek8vI9OqPruX94b1m1jCK8fcl35ADJCEnQK5x\n6DByMBKA+Zh5YOJB9+cLUfik6nXUJ03VvfJShdLyQCgdtvMh5mQV0C7AnRjd\nBaqU75IzolABvDmGk9G0QMOgBdM7V7bRsX2oTtksfLw+gPkrsA5ysQxO+S+2\nMJ9QqZE6yEC2pJfmPv/bP7WDkAJ+yFWOXeLbQnw5744T8UTkI1qxAi6o1LEz\neUqN24CbaTFAfED3p68d1ClSdhFsPSmJBEzSfTOMxCFjtKDJCHef8bZ0DdSh\nucFOo7hM3+L222VrkzVPNAD7mxDQF8GyLtcskveTtw7R8J1Do5UOs/Y+ilQV\nNd7z\r\n=iFYG\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.3-a61e5ff.0_1575649864139_0.27092875406597994"},"_hasShrinkwrap":false},"20.0.3-f9082b3.0":{"name":"eosjs","version":"20.0.3-f9082b3.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","eosjs-ecc":"^4.0.7","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"9215e1200374d4e5577a8d40a835283388787f02","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.3-f9082b3.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-cEo84IScEARYW/zI7qvQvjka5BfIhaOmGiOY1OfG3/ZWBEfVzpc0TpGs1PG26Nu8RP+9jnJQsPHhDgfR1sfS1Q==","shasum":"49b6a7b73f63df1f0cbda037d0146ee519e9649c","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.3-f9082b3.0.tgz","fileCount":52,"unpackedSize":286472,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd7te2CRA9TVsSAnZWagAA3M4P/1oax+98VbWUhrtRk5vX\nzQaktVmNxfiMTO1MfVjcWe4dmTA2GQd8iZXWOe9z8VycgrA0Dl5NgEMEdW13\nMW6y7v5dy/F80Cqah47liPUKCYF8tbzdq5oHuHXsK5F+ELF9oz+yTt2a9AuT\nPVa5AYTNpHGoME6UK9j/wlPejD1jXQgWKUT6vOG3Ngb+lHQ9SQjWWAfYnI7+\no/TAZU3C3yj+0jd2LcAST48QtIyKIzu+IaIF2I6vYjkiMcoZPw2THSamt0BO\nPh63JrBwzNQ+vxv+PJDL6+j40cMyVgV56ClkB4wl8qes/up0BuVgnunnX1Ui\niiWnizeOAw4eqN/Ad8qgGyP9RZG82NG0eWV2jUc1mdpRs/6E1o8mcYdeRxRV\nTVfqu7sdWejxhG0Qxj7nUE4FUIt7nxOWlzMbjUPsc9mV7HNlCRT4ZbmnAHFi\nlwhwCoW6Ph+Rf10yazNDobYiJ/KrVOM9qeiZZ5pj67jVhtzEzAbX44zIgoHW\nQp4+3DFu+tfgEKGsVHKXWYXCdslC+fxye3mwx1wDM/jhiAfy3nyzi5CnkNOd\n+bi2SsC8cFDDzz0EV+91ga4dIFvUxzZ2zxAk2eyXfwpqt6FblZTFGxJ/VaM0\nfdCwxi862AWSES2xrwp2tJcqRqth2bmYV5mv4HtTSrOS5nUdrLquo+KHlo+G\njkEB\r\n=yHAY\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.3-f9082b3.0_1575933877770_0.8685150334317695"},"_hasShrinkwrap":false},"20.0.2-f9082b3.0":{"name":"eosjs","version":"20.0.2-f9082b3.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","eosjs-ecc":"^4.0.7","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","gitHead":"2f859a0a062ce7181c435c0b5bd68cd068e6d756","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-f9082b3.0","_npmVersion":"6.4.1","_nodeVersion":"10.15.3","_npmUser":{"name":"mikemanfredi","email":"mike.manfredi@block.one"},"dist":{"integrity":"sha512-I7vAV30+oJ/3eMYFO4yJtXhWz+Y/oK+JBQQfgQt2DF9Qe6Jpo6ILm3pZe8a6TQvVS/QmSv41XkoWDj9h1ll9uA==","shasum":"05c603441216eb3a4d663fee54ba822a84e2bf51","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-f9082b3.0.tgz","fileCount":52,"unpackedSize":286472,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd7twMCRA9TVsSAnZWagAADYsP/i3qK08YsI2PrQcJoyBn\nDUSkv55cEmJ7YECmKSr/srjdQuD8IA2fBTQz7PwGQVKSlVZ1p80LzaT/0Q+E\nfMbZQzXxydRy1W1P281Ke4Q80WAUlO2u9VmTDZLgXdZYXp9f61/7RjsmG9on\nL0Jvcg1HN+o0bFF7UyAqQZhOmBr8dxeWrdTLL/vVWbOly+aFp2yIzNLpXUe5\na45FleEMkDQSi1t9iwIElOAyXeZOwmPEH+djd/p7WJHPVC7Ax+SN+n5AH22Z\nneZqfGZq38+L6uDWIDJfPIZLMN335f65GDHT7SfkR6dmNYgwLurYG8kJd5LV\nnTHrsDs1RD96jcZSDcrUAIliO/JNpcJQ6Pw+SUw7l60N1mSBLHEOkamMPBIw\nLHpxnbaM72HoCiu2WXWV1JhqP3PCbbNAL6PmaEZT66/nxxmKHSbvTYfbFhQ8\nl8vsJynvAVAYLs4GGsZn2kNcwVImjGiiF0O1rJ/NBaBcbPar9JdYcYaWRKhN\nRcqGlSVsFCchJo+nTxjEhwMjVWi0FF6xKurOVjchk2LlrY03+IX+u7Y5Ryrs\np2vy7oua2kDVca1zjK1GEMlr3oh1s2CcbO/Wc+S16jIqG63RKXulCwfbj6TS\nFKQVc8tbFONzc25u5kwGtkrCDWr4+ymzn+IXQGFNPSljhG8A5zdiEQW7vggJ\nbh2R\r\n=iu9p\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-f9082b3.0_1575934987651_0.2955942390348216"},"_hasShrinkwrap":false},"20.0.2-2f859a0.0":{"name":"eosjs","version":"20.0.2-2f859a0.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","eosjs-ecc":"^4.0.7","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"967dc1579a53feda27e860e26619bf46f1bac34c","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.2-2f859a0.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-6SwNxPVSlZlnYsKmLrC+Pf4Q955Uz1cux2ASUpDlh4QH10ufc/P6JzMvvMzWMFNgTMuVMr6hnV4vb62WakM7SA==","shasum":"1438ec4a8e1e5e7ffe76d1aff186486f04743126","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.2-2f859a0.0.tgz","fileCount":52,"unpackedSize":286472,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd7tyhCRA9TVsSAnZWagAAyksP/3lKtKpfk7JXp/wabiYh\nxkyYVVh05N/cZJqMr/4lin5gvX2yp4KdrGZ7ncc3bhuvDvEHnCn7jthjiSnm\ndxQzKFqKPBhNG3TJPVnjfMT/g0AIRaknFFjAJp4+uIycyACFTyAqqE0jyThg\n4hOBXUvZWyX8KaFQntHpaZ0ZGQa+LnGXM2fYvQqv7S1E5oZ6rDm/zkWny2oM\n273M0ZAza9z/rq4xL+Z2dXfWHd74G21+ImjsOAzqXzUUcRqqQD40uX3YatT3\nqYKO16/DRV8Hq1rRCIE22U71r09EaPtTavYSWAciH+OlQexShV2xq5JO53tv\nvxTQE3Krt/wIPD/voxKMY94dBKEylHJ/fvuce6IFHW+sFt6TP/83Y6mccVY7\nvCLu6RyVxdfAsSnFFnstaRv65agvaf1tRIlf4H4JN+oKC+BD9MmkqTnbZ8yr\nz4P+iFh+FqqDl3RzqAwWx/zgfMxYKRarT97NWeCP6eZIujSeVIEC2EVrATgX\nUpibFQqBYwV9DUC2FCaYG6fB9B1e1lu721QXMdIKnhP/c6KhTQ0alXFs4Qh3\neCtl/mMoGEXqriiS1OutEBUndKjeMA9vrjrGQwIPT1iRqzygUwFemuYzMxZb\nECEUJaGt+kZJo1DetlVuKzhljLZNygU1nTMfYJLMhKPEMA/soEUQyYUSLhXf\n4VPA\r\n=8unT\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.2-2f859a0.0_1575935137287_0.46784207197651906"},"_hasShrinkwrap":false},"20.0.4-67ee21f.0":{"name":"eosjs","version":"20.0.4-67ee21f.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","eosjs-ecc":"^4.0.7","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"965b501d9ae7582361a2462aa6492f42c69c9bff","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.4-67ee21f.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-RvX2Eyx6cvMeT9gncHxampRtJGs3IO1q58l7sDYzzxxVaWXxPw6YTSVOL2sE0PatQ+pUuHXy2i/Z8VIcLgYVwg==","shasum":"b430c98988f033ba40282d349c0987f6cb89e6a0","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.4-67ee21f.0.tgz","fileCount":52,"unpackedSize":286472,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd7t78CRA9TVsSAnZWagAAocUP/i7KoozyRUDgi2/N7yyM\n47eM8o3gcNX3Ub0Z9TjFQBwYCJ17JFOueQ+/DC2HjcFIsOdGX31NL+9K9bQO\ncGiAEfHjMXxWK0XnGb1JkR1ttHN0PndkAFj0CxH1+xfo31jT5iiz0EqBqEGq\nmS8+GAHj0GS2bqnEGVoZDf+XQWIZUHJBxAvNzoDRtVfzODSfBm53JKNqBCsv\nQ9zan7PPX451PjqRdhD2PtcbZGvXE0w0jgQX2E5vn1zou+2A0odT2cJD6rpA\nguJOpwGjLoZVCnq3k583CKL/IzoxMCtUq+mlBPgv9DSLgKFn+w09PRj1fXPD\n8NlyCgoOMVYotwjMctG3kElQt4TnMBeDVtdXzsIBpLAy27nLyDDpw1lRk2ed\nSYGrNtM443CVDvmxBAPmLKucn/ls7uSrBMPv9o+XjizokaOKqWfaqtOIiEB3\nx1LyD+CEtq+yIrU4SBzDfHSumb5DqOmy0NFr4sOjuxXnpA6udT+BF0eGRxhN\nyuTA28Mv16bs8lqs1lkdJUTr2FxQO3Q9eFOjkWiX8l03+ohE1jgRWo4K0QA1\nieC+Hxhwa68F2XnfkRddT14+d+N75arzeqp7QKZ067seP5/sJS7F/kWRvjAk\n53XnzvmF2wtuLO12ypewu+rREU9eylAOEKt6ZGr9EJLmQ7q3JCDewyAgi9OD\nVqc5\r\n=UOnH\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.4-67ee21f.0_1575935739748_0.4509774061228826"},"_hasShrinkwrap":false},"20.0.4-e2c667e.0":{"name":"eosjs","version":"20.0.4-e2c667e.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","eosjs-ecc":"^4.0.7","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"d9d61a971a030b175a87b5fd45af91b26e50fbf2","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.4-e2c667e.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-pL2fudVFvYv24VIX7QIWjFKFcXV+xzKrzmyyCr5UFpaDwKdxhg/Q/jtq6BSDraEapyctNnVS1sl6XLBTXr85KQ==","shasum":"8815a8d2ae476aac4dc3502d976c0b20cb931c3a","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.4-e2c667e.0.tgz","fileCount":52,"unpackedSize":286643,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd8S+jCRA9TVsSAnZWagAAW1AQAJzjwAMaDhLqdQr9GDBq\ndA9TQYRo1Igay48V/saCD70JAW39HZa7S3xBeIUWqFgVnhDNheyDeR3sPSCf\nD4lGlzQbQ/DRoD1QoUnS396FjH7AJTjIHytuLlo3iqpbjq7FELQ58LP9ZEl9\nouU1rquB8BZqJnhzXo058C3p3NmPwKQ7yuzSkNUZKGgygsn5B+GACw5kwM4A\nmvyFL8++dhCezHsT79drfw11rLraEmN7vqCt+P4ywutSuaAyasO7m0qL6Oi1\ngGl7Mk5QWC8+O6BYvdZLNxdcrBiiGJIB/2CwzGVTUsH63Kqd6GiTG7Zg+6un\nRUKAosHcvwoOJ1Tqdn0AHj93cW+ANA3hXSM4A1HVQMnLg+al+5gaJ1zZ5sWM\nUKEMWgHc6+tyNrOYVpTUkvTbrQSGRgsdq/zisLdSbx7lZ5mA+7+dqyOo9aTl\n6ZnSVV5a+Wj9ZSTHkD5ke0fdx9QBFZ4D4sX1M/JmrzJ2VjDXhE0UXmOfR9cw\ngr91913dGmiqYXMwmSw9oqCJN3F61LDdQvJb/1NhMaSZnkPFSTQOrQOHtVvn\nw/7rv38D4bK1TY9FKqoEZNNviLQ97p6rIP7tICVul54muTbc9F/1o2advHXv\nnlpirWUTqfoPdBy52Vmh0sfP/NTOKIHyc/ljlT1AvjtfI8ITfP3alaoJCRhq\nFRWk\r\n=Ls5m\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.4-e2c667e.0_1576087458823_0.6593467584971429"},"_hasShrinkwrap":false},"20.0.4-b3eb443.0":{"name":"eosjs","version":"20.0.4-b3eb443.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","eosjs-ecc":"^4.0.7","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"3c5c9bbc7411fa98befe65a1522ed339e5d0c272","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.4-b3eb443.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-Mt+XwLkznIFqAGS9dv32jgV5cS80l7Xu4C6CfHFefeekOhbloGjcWByUh8FtEmwtLZf+/tepcS602/46vCyFrg==","shasum":"9faea00191a2c86e7ab7ece729c0f2bc134e3ddd","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.4-b3eb443.0.tgz","fileCount":52,"unpackedSize":288079,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeD3TFCRA9TVsSAnZWagAAQ6oP/00YnkhvDc8EHk6DqbkO\nm3mV6P+owBb3wh5NY5+0eKkbDP3raiGgsZbIUsoaAX6h3DI/LRyufrZupycH\nI/yFPKHQXcxAw86t19PhvJqZzkzbYoMh8oSpIXCAfydFK+2T/Tu0lN7I8I9o\n9N3JgN8vdoej/y0H6cyyGXRjaQwror/G0omSGYS4LtsIdKsnC/F/DZG1aFc0\nKtTj7prfhWh7PCV3OnGWyPZoJ2Eo28I5bL70fS6U7rb7hqMeMphjqIP13ODg\nfIUCWf99TXpD92XWwE93d5FJPHKbnBH2tPLZJQxrSzddbqe46CxUeBncNpI/\niE5umuy7g1H1htuh9Q2dwbq4aX8EbAMcDmArpV9dofr1YYntZ7pg9oV9cEYS\nSKe7h0Nqg4g4sKY3TcuI3H+SYXqg7ha7O0hOj7tEU5gc1tQ0T0PLnjgJ6X36\n0mDmWltt03JNZMcHL3o0ocX7pEL0rkHcDB+Xaz7bg01YuAWnvH9592KwMe55\n6BvyFD0lMk3PtMsR/KBqXXYFiLt/ZUUiyn7tVfUZMuEOxalDtequVFEiD+Jx\n+dn3kvaYpkfyFBZlhSndC8qfAN2B8wxEMix8eG1fnyaDddcKY7IYZMVX/8iQ\n0yu2fqUxhy+ojN8aqepdVTJuJzEELLn/oKQP7fhPwXSh7N8UnlHEqSs+nVqQ\nF8/U\r\n=0FTX\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.4-b3eb443.0_1578071236777_0.16931537226678373"},"_hasShrinkwrap":false},"20.0.4-ccbd83e.0":{"name":"eosjs","version":"20.0.4-ccbd83e.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","eosjs-ecc":"^4.0.7","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"67db71ac9c95dedadf51df2365471566d2c7ba70","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.4-ccbd83e.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-QPE8nhxJPwHJlpH+GAfl9+OFvHEEs49RezgqOSMPBbVVszBs/JlHgKdnI5Q79zDUPsXqWzkJdyqzZViPyBTHkA==","shasum":"d204569c868bd1bd145c83db8a96ab264c1d3b5a","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.4-ccbd83e.0.tgz","fileCount":52,"unpackedSize":289058,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeD3TaCRA9TVsSAnZWagAAO9QQAJId+w6rlyy1oZXCoipT\nl+UtZlxinnLLitNRJcy03UzRE+Hm8ExZZ52o9C80p04XiNwWDelc9i3JikVM\n/3rWVo+XyatQoxvu7ESkZMMJM7nges/5qJYIhFMOSx6R8FasoJty2kwm+Ulx\ng4/Adt/v0TmcQgNKrqZ8OyzzmPGizzvXFCsYfjpNR2bLtfBSig/OljuBXtjU\nPkWHLnU860vdVUINl4GWpYXc9LCpM1fOmWkoJ7/EpRWUKBp0dWhQWZOVeC4v\nD8uiZRz5LySVunW2wsx1y6VeMaNoiHP9RK/RgPtVR+wgeW3J7FvcaN4tt1mO\nMgOre4AbQIVRzuQRWE+zqWxNbNssu8U9eNrBEq6C/Bm2TAZ0g0ErNkUSEfkE\nlTC9u2u1c39AdIqhaLAK2hi2Ra1GKpMXufBJvP9Y2DRmGzL5s/pYraN55Zlw\np7L+p3WuDXGq0vsLOk8xOQY48NasNtN+Rdu0zqUPNnzf8b5TXQyw1lfm6Qmv\ndaQnbxjO6i+p1z0yBWxF99i189cyVPVk+vq2jKvxTXNlbZTn3LEX7uhYXV6V\n19sdJQrd9/xm9PQ0tum2ObkzPopFoSbEEobVnnDjlcla+4lc+IPxvueMscH9\nAf4RExup0y6LBhoZOWeKAnxE5eKmQCUYbwpYP/A99vyvJmgMjunr8aCHNaAN\nNogu\r\n=+OYX\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.4-ccbd83e.0_1578071258013_0.1760195174753012"},"_hasShrinkwrap":false},"20.0.4-7938e1a.0":{"name":"eosjs","version":"20.0.4-7938e1a.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/elliptic":"^6.4.10","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","elliptic":"^6.5.0","eosjs-ecc":"^4.0.7","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"2.3.1","handlebars":"4.1.2","js-yaml":"3.13.1"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"3353abb6117d9d53e4bee7e7aabc29200f13537a","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.4-7938e1a.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-tQyxGaATeM1lMnVNdFfPtURR24a5WeGHk/XRH36tg3bx4xgkOKp+bXEtofwlkAt5lOOE0OTLZo4dmBHelk+uhQ==","shasum":"c0f14a4b4c4106b5efb6d9e1b8f7facbdb2164c6","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.4-7938e1a.0.tgz","fileCount":52,"unpackedSize":289021,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeD5ZDCRA9TVsSAnZWagAAD5oP/j1AlNkdr3K1YlumBPCa\ncyekXdtmnpkzLFvBY85Eqgp2savGmnH+eoQrveR1zIE6tc1PX6wY8+u8mZgg\n14oy1YMqPuflTsLFNcMev5mMETqBjifZKo9CqV8kfIGFLqTfhkRPz9kTDan4\nFqVBFsheTdzokH1BJwuPLr+qjGGV8rY0lUfe38+XLFEn0xDoMJgyk/Tx5ePz\npRST0ISRN/Nmxo32D448Fgky2AhuiNp2l29NEXN1pWye0HkarRvkHOPEKWEi\n9SAQFVzRSTFtlPh60iY+FQXZPOow8UFkyDOTDqH/ajhNKcO/nu8vUH2V04vv\n4XnEf5rjZBLD/KWnjSpSRES1HV2/bbicdbIGW/QixYRh1ygHMGGliiGt21Fc\noMPiZ2RKYFk5tfFgvCnxg2LLonmv+fXUBscA/70vxQy7XWRqoOWJi2bX2ZxY\nauR+lrjBE/bsO3Ki06kH6AlgCjQb+HUSAutL50r+hKvQRKrwA/U7ecwnpNQ7\nE4c1RyLRrU8d5T32j0KqFnTyd1tsagzNnZa50f2x13kpc5unYL/nNoCSCNSj\nZ6nVPLOsbas/eM41lP9AKesxVBp4T5pssGUPzZCZHLG/pJBurOER5X617SKc\nrqFM0uvdRoVMAEZhEQyahz+HtLIdzrGH2Abf0fvqB5/wjoutfWmsdT1mCDrq\nrTy+\r\n=zkJm\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.4-7938e1a.0_1578079811315_0.5255973452316198"},"_hasShrinkwrap":false},"20.0.4-3f9295a.0":{"name":"eosjs","version":"20.0.4-3f9295a.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/elliptic":"^6.4.10","babel-runtime":"6.26.0","elliptic":"^6.5.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","eosjs-ecc":"^4.0.7","jest":"23.6.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"^2.3.1","lodash":"^4.17.12"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"30f3680080d474cb0a93711242af771061f55dd0","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.4-3f9295a.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-NfmzqP/k/1V5rNpt14iUOyRfRJqnozJEFB0JnwlS38nkg+d805EQabxmLpLomiBFvoDi9QReF0cReJs53tCZqQ==","shasum":"2be366d07d3ed1e261668a6f7a26d664193ce897","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.4-3f9295a.0.tgz","fileCount":52,"unpackedSize":288996,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeIIGtCRA9TVsSAnZWagAA2icQAI11B3w+524EQZVenR4i\nFP22HqMyR/UuwlK7wx8EYAu6c7AjhO8DVBMTYMB1n3dt3i+BMUFfquESbt4y\nNbomiYVGC6eUso3PA3vQN0XZpcrkMJBnpYZUfduu4XxUlxBAXo0f6u9p4ssR\nAJozdUlRiEvaIYJAEa5qd6TMIaXR/eU6vnuP+bEb3ir/e9FpeUv5IsauV0yP\nMyRUgm+ybtAxXZMgC2ZVJSrKdtuxHjTmXNE39k3ZFPAjkDzS9WkrnP6dybV/\nxT6xnDyTphGoA02E48Vs6Mes4T8Q41GVKVKXSaHMj2L0HWHm0NGzM0FMwgQM\nzJ3JFZ9haMewAd1U61r+v1cbIz7UzudEj4I7U62wTJPUUlpDTHyKWAfHx8Ps\nfHtfyKXeYU4v0rv72jk5hMEIiDQ087OlxzwvNMVs6LeQ8WIHp0na4ULA34fn\nLm88Kif1nmOZOFHW4DSLG8WQ/75s8FSLHXclghI1X6/vpbSsTfXuz1VqB3YH\nmk+3RP6rg4Q+ycQs++9+1/+snxIWZx20GbVH+bvbl9uFnCwFSUaQjMZVfVtW\nAEg8jz2BMd4TPXMP6HRvVdbOydS5lHMfCuL4ayzBKWzduuzBRB1c910bFWqC\nrYFwreO5l3B09E9xlgxCSvSCCxIN8pl3C30qewglIkq3kmQleCaJrPnaFp1g\nkSqG\r\n=3TrL\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.4-3f9295a.0_1579188652724_0.95294750500443"},"_hasShrinkwrap":false},"21.0.0-0a31612.0":{"name":"eosjs","version":"21.0.0-0a31612.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/elliptic":"^6.4.10","babel-runtime":"6.26.0","elliptic":"^6.5.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","eosjs-ecc":"^4.0.7","jest":"23.6.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"^2.3.1","lodash":"^4.17.12"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"13d463e72fd0df1165f61380284fc7a1de1f1bab","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-0a31612.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-B3pR0PaMX+MyKezZ7sudyX1u3ThU4zNhLRF8GVGQ9d25o1mYISck2kODfAlx3SfffPPpb6qLBauh9PcYXGrpaA==","shasum":"50e0b0ada9d657340d9b61dd0a26c0285983efef","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-0a31612.0.tgz","fileCount":52,"unpackedSize":288996,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeII0dCRA9TVsSAnZWagAA0jgP/i1KzkSBcYuHQSGYjaXK\nlzTifetvpK6b4GufWZFJskNpSJHQZ1WGKpwOVBqxhMqxTe1VbS8C2lmIu6gH\nOVYCungku6hjBi4CZ4nn1YgXUZn+TtGfuKSmR2eus+3yjR/qrN02nS043kxe\n9aWQ3oGUxd/SmNhNPir+vl9PAosGaS1awy8QJZ9pEuFHXqRyw6ProaGxiJjl\npkj4vCRQpLPKPEfcHNnmg6IbvvGDf4JoPD8tlXDi9xCUNvYXHERSZmR7yBf/\n3RiVONC34CrhclDZJjM76i58i0vsOzNoDRDRbwWixjsxGc6cxOME2+7fz0F7\nCsv+Vho7AP8BqjVcLoeERz+izV2r4ts+fbAb/D01BhOfuiAjNOgPe7eSk19+\n2BS5e0LwFlvRqxIGoJuiJ9/mlA1g6tOlQ1xm5J6wJjxDmNUMETR6aFeCuthY\nLe9hRNqj7vcytSc/HrQ3n9ttfBpcgq8C0DnLV7sOg8DhDQgsR/TLiaQQCL7O\nDdn/7Ui5ZJncgue05DJWC0CSIKKxf64Dsa57TApAKEm/H05mr41W8faN0D6W\n24GREGO367A8yliovJTFPWD3QSz386R0Mzs80ww9wMgUpr+eHTn/+zjsv8XZ\nFPFcs3puag34tlN7VMDw5YukXznrNsWQJBft7+E9ntyaSKRXferE1XpghkXE\ni/f+\r\n=Na35\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-0a31612.0_1579191580941_0.9999253004177033"},"_hasShrinkwrap":false},"21.0.0-rc1":{"name":"eosjs","version":"21.0.0-rc1","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.7","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"f4b223b8e92adf8ed994e538ff5adeaded4f3585","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-rc1","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-4smYogOrm8zliKi9Cuv7Vu5KQ8YUokudEG08TlkGig2vhW4sLpWWnHZAe6WGisjaBqx6zy5xGKXtRCaGyStxMQ==","shasum":"ff1de9ac0dd89291955867e405cff130d676fbd4","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-rc1.tgz","fileCount":37,"unpackedSize":236330,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeIJd4CRA9TVsSAnZWagAAIxAQAIgkjU2ayYeVA7NEzaXB\nYiWrlLA0kg1g/TvsaKs+iXf6Q0OlDoSg2ZRbp2xCBRSz2XpwfT2/rJWK0QPg\n6CREASgF3hb2BooiCrOUDs74vRy2/oN1K299NSaHcF0SCiBuD+AY4ekj/fH+\nNUdreU4+srxedlKuD2jsdbr8Ohsb+tJenEJ7BHR93E/FnkhwEmheF7KYZSHN\npjTAmek3Zu/5gHfbFNSRCcGeU3fthYd6Q5i1p2qsbBCiWRFp0o7a9qcgg4OP\nlXLaoNtNb+mYkWdHFNpkL05pUsI0uT1KzxE2XzIVru3eggPZnToJUn6xdnCi\nYlzgUw2CDEQiHlVKZkaroUuAtlM2dNVDO04x04ua5DuKeTJw0xdDDMMNN+pW\nA/jaXgbxSz9JPjn9dJWVXNhaCOhft4nbBdVTsLIhlz6lncogOpNG4I1GWWco\nBfc72wAlkDlMepBeCvQb+oW8YWyrcirKGV7VHQwmfPi29ccZVM5t6SOlqHIQ\nSi+03NhoJWlov7tBy9BXSSuWY4g2MnKP2P9knbUP5uU49RCTOWQ4EnsXuVD3\n1/ZQB7STQwUM+Pkso3CzO8w+F/w8GCJkxneQlXACz/XSut/B3sULzuHo4m39\noVTzm4XiOna5Q6VmVB0kIIOMeY6ixLqExYKXSM68kJq66jS1yxtbUubxDeJ7\ngwsj\r\n=pOKN\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-rc1_1579194232027_0.761865057339635"},"_hasShrinkwrap":false},"21.0.0-92cf49f.0":{"name":"eosjs","version":"21.0.0-92cf49f.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/elliptic":"6.4.10","babel-runtime":"6.26.0","elliptic":"6.5.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","eosjs-ecc":"^4.0.7","jest":"23.6.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"^2.3.1","lodash":"^4.17.12"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"164e3bcdb9719986111946f814388e06d5b739fb","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-92cf49f.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-HoN5rYe3/iXFCvxaqXBvJ87kx8UhWO1wJIHsleZt89X2m8sK8B9fWhNMMdR/6yumkcmULm2Y1Oha+Qy0C6Mm5Q==","shasum":"6b0e6675b7283909455f869936756233bbe32383","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-92cf49f.0.tgz","fileCount":52,"unpackedSize":288994,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeIJfgCRA9TVsSAnZWagAA6zIP/2wAKPHdCfsvDRO6dD6s\nGF8feyxj4ha2wIEpPZ/tnKYkilm4vWXgDYdtQc32evB9IS4lHIqcqnJLUjrO\n1SQGFX9Blt0FELO8Fiz+9xA8WIK99WTbQjiquyMpYoXDB2FzTvytZ1eOEPWU\n3wT58MJnguWCIgiRn/QJrccZbYaNloxMB633gwuieZCuNKklz/9BigDzdUzD\nz6h+V0tC4dfNHrADKLF28qFUNVR9gsNTOLDNdolldrsqlk2hVTWVT4Hp0OW0\nIPDdUKTo6p9w2qwciQ5OjzmvZWGD7Le1hC6B+yHA/vFjvb6nInJOt2BgG62F\nFkzEIHx4dAySfUH+j4PKPvlbvUlZB0mNWD+DDlTgbfnWAz2ykb4wZwuZh9s9\nXQCuRjLBB3sD6GwnG2qU2HMVCMJFcF0R7tUG9wP7d9UIH6FAgHLZdz48HZwm\nh+HeBp7V1wzkwVi/H/X9VPKyyWIeCd65von2ZfxFsYAXhHSaugACa5plw3f3\n2SiyqE1HfDT4PElCGEH+92rHMsAaE05pXD7ssfpxqnF3IHqxWoJboAm128FE\nh/YLVAcRhTgDNcd5jE+dltGziy8Jt3GnJgBgzvhvdwq17sEjbGIidJ6OUUyc\nU+UpmYpDpn+E3D3GujYYskU+PdsvqXXwWXgwqPlSeGpQ1Zdtz6EGvd84TAXF\neVA+\r\n=5luV\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-92cf49f.0_1579194335848_0.10674773831715867"},"_hasShrinkwrap":false},"20.0.3":{"name":"eosjs","version":"20.0.3","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"babel-runtime":"6.26.0","eosjs-ecc":"4.0.7","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-cli":"6.26.0","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","jest":"23.5.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"3.1.1","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.29.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"f514726eb338c8553425965e71d6cd0f201d8cd8","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@20.0.3","_nodeVersion":"13.6.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-h0WSxsDo7AHz5IzpbQDrzyT/CYmbBDtFiiolTdtGd2FdKXEa6LDER4WbNp4qxCY7kD65KeG3knkGmOOFGbPJxw==","shasum":"f3ac1fa119b76dd07bf2825ad27342f6502a533b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-20.0.3.tgz","fileCount":52,"unpackedSize":266647,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeIJyJCRA9TVsSAnZWagAAyFoP/2YumvP5O/wfHKR15W/c\nvD5daiRRI8C8DcbDqcJ8WrVhDvmWo4ryqJelYoIEZ9e5kN5m41KMdZn/GX4y\nTRZBUgeT5uwv7HHOWqZwgwiGiMVdO0ozKiDEp+e3fBVn0cuk13nkOs1cTk9B\n+X7k7+kvs8RFy+Hpp7UvoNDecxko9Pgopd6VjZfRKHFBMq0tJZqPq6GkJSjy\nQCAq58AexWCHlsLAiOH8SDanAwe8STSakKskfeB30t4MC+GBBqSLSHF6kOOO\n11P8p/fuLJhr/tZsO77/Gh7OOCsgfH86scekiNWJcFpy66mP/UHOOY2GozVt\nj7FgZq2m08ntehDegAnnOEqA13HxiutoHBBKnhVdDZ2vm8HC+jxdDVaheVq9\n099et2WpqRwK4W2rXTtdcRbZnJmIzdCYbCBZ3X97tSHDsp6E0AghNHmEQ86j\nZxUlcMxdoigUseBDSdPGUTaoDzXpJ3ts9lLq+VPlRvHubLO2ZkGonWDEukGM\nP6y0ZNCL24PKm4OS9p/2c8KqdywgDPlNOsoHbtVRV2IxiESw3tZsNsaZEJrS\nB6aom34s4BRjzxp8hhv7jK3NJfG5/9Oal6a5tOkcYCmyWg71spiBpOuNACOc\nSy+qnytUNTDACjyXbpzZ9Ku5SniCqZp0G75mEoY93m0Iv3CItZ+GUCI4S5EC\nnW2G\r\n=udJM\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"jeffreyssmith2nd","email":"jeffreyssmith2nd@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_20.0.3_1579195528692_0.8202573825727881"},"_hasShrinkwrap":false},"21.0.1-rc1":{"name":"eosjs","version":"21.0.1-rc1","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/elliptic":"6.4.10","babel-runtime":"6.26.0","elliptic":"6.5.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","eosjs-ecc":"^4.0.7","jest":"23.6.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"^2.3.1","lodash":"^4.17.12"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","gitHead":"8e8d5d273a960944db8badd5c0ae0d1e28c5d1db","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.1-rc1","_nodeVersion":"13.6.0","_npmVersion":"6.13.4","dist":{"integrity":"sha512-/6vnDdgtTO8WdL2v1psFEyMSeUOQZ3gtWkxP8SSKHp1XYla2fTbPJjHW5cM7pvGhExikL2VcAEsDKKgKo1kVLA==","shasum":"671f38bf04cfa0786ef9fef4cab10aa5ca049cde","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.1-rc1.tgz","fileCount":52,"unpackedSize":288988,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeILR7CRA9TVsSAnZWagAARNoP/1wpnrYWl9AwrhycXXSS\nUng4/4IMCQSJ2ifFLTYbtTYmjCKdFEuowVL60Uxd+9gQKaKlq482CK5ZJ37S\n3orTgX9P87FOzTSLXvhhv5TuPZ1LMS4kXFfUX37frPiI4zKT8xzXvEc8vr6D\nmiMElK1z9dMWvUxFm5qYb9SUKy+MW0YYw8odvmtwifBfeSNHISb64UWiFqT9\n+t1zH9OoqfI6r9U7GB+zXnouZ1Q1WOXoxm9F2Y0iv+r6Onj41sgMTnPPXax3\nMCwp9A0ZjAWtEFnjNlzBG21BUmA7D27JOhKIE+IstIwu+INGHDZm+JiQdiZM\nTY4M50j633MBWOaIdPs0ohifrNxf2hILnFYq7wVnTgz+Ut6f3jLkEB7BVLDd\n97QXeIst2dKm2AN58wwk/mTn+aZD/ZKIvORRqtsIAmH7a2CCa2aos8htydd2\n3YGaQN9bygl9lJNZFNyko1+FmUy18E/L6vtpyEA9yImdHhTCTrwntrpZTspg\nsbhovd4yzupHdnmYQgb2cHj8dVLAXX3ZLyR9H7qK8cBZFF/7ACpXRzUEWVCq\n6/spe3jXvKacoT7dQDRUpGENR0dZl84PkkKGqWSv80E3f0Pc4a3t7pkONswx\nZHv2bxFpGP7O+FsrTWppGu9Nvgd9s5zuSAdUHEjA5V4/fx4rwC+tJRDx4vCe\nS2pm\r\n=SrpA\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"jeffreyssmith2nd","email":"jeffreyssmith2nd@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.1-rc1_1579201659477_0.4453276092734195"},"_hasShrinkwrap":false},"21.0.0-443b8c8.0":{"name":"eosjs","version":"21.0.0-443b8c8.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/elliptic":"6.4.10","babel-runtime":"6.26.0","elliptic":"6.5.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","eosjs-ecc":"^4.0.7","jest":"23.6.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"^2.3.1","lodash":"^4.17.12"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"57e14f27167862b98b47f472d576aaef6eba0dba","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-443b8c8.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-VaKpX3ta0bQhHF1WRusMMlgqqOa0sE0wDZRHB6yY3GYajZpHV2NFndBlpVRzWcV+uOvDdI9a6DspYYGZTrwpvA==","shasum":"7cec77406c786ac5e1c6bb5b27cc31c791321ccd","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-443b8c8.0.tgz","fileCount":52,"unpackedSize":294577,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeKgN5CRA9TVsSAnZWagAASG4P/2cyYHszFGC2Q+6cky0M\nIBs7czO8GEItGUPL2NeLj68nGzkEDdwbSjMdW19LJEZzGjXD7XJx1WkswY1b\nOphEytVG4O/0xG3JqmilOMJMJRqYZ/BXTEyNqG9bxkk/Ruv1qSGZObPa5AEV\n8OwGBSzlCPh1x19+zcEDPZ4dmclrGfXTtbaNl3ZkLB3dq/azat9jbnWtF4s9\nAeh/HYEhWBKYCeSoEfeK+jbimtpEcK7uKMfHpEnPDL8pKeEg58uIAH4uud2y\nUeJzgTHE6cnsA+MWYkccCTfw9+YE8AH4BcMbmzxeg44IYo2rL0CX5vorAIq7\nZ4m2LYCj+rqPw80XfdbWvi9NqzcT1XacL4iW+Lb22lZzmageBVx3ltzG62Sh\nOCr+6VaOnHsTiR/1sbwMQ0pxBx/s0yJHfqdrdhIuF65QAkiMqpeC+i0xVXJk\nYNa8SBwcak6RC8wknOWKwTXbj1weIu6tIYRTJ7MwH13WTZYMmlgfBjC3E6xZ\n+SiM8FngMHLmoG3mGFWZ7m9d1mNd5eRVeLnSAYgmxIoJp2Rjz5ZB5Q1I6xxu\nplSgTayqPl8ytyiDd2GW863yYJNydYYOxN6oPGM0fA5zNChcB+isdUeC0q0z\nLFg+iDnljmrHMSisachIqPERKdwpIN/UAvAPNCOm/LbV1OprV2Lxg4A1WJoW\nLDV/\r\n=/BUJ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-443b8c8.0_1579811705291_0.9730003914494911"},"_hasShrinkwrap":false},"21.0.0-131a987.0":{"name":"eosjs","version":"21.0.0-131a987.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/elliptic":"6.4.10","babel-runtime":"6.26.0","elliptic":"6.5.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","eosjs-ecc":"^4.0.7","jest":"23.6.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"^2.3.1","lodash":"^4.17.12"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"c62fcc94bebce3ad4577b1e153a00d76f7f0d6c2","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-131a987.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-3Vz9odQOEFkY3WwnNwFYPtAsC0UlCXsqZrr3wWlQTLiKbpfAFq9TxM4khTtUllwHY+fyIIyoQjA3y4GIXKpWfw==","shasum":"7efe56a0295539be66ddd3561f7f69f3d8e0159d","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-131a987.0.tgz","fileCount":52,"unpackedSize":294577,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeKg6VCRA9TVsSAnZWagAARoUP/2wzootTta+5fbmOyMip\n7LowK2/froJj/oMaYsIAGhVpPLO0fr0nnFHyA9aXP0Qn7Vr769bwlZ6Y6Zvq\nDi32qAPPpaNeTNgO21F8D+WJSdT/vTYdmDCclXMY7/zvnGS1AzsN2NTEfFiH\n2Wm8flo5SESoZBDRNUPoE/CuGXsFzMnKjv0rpw8yjwP+GXtIAyDNs4qzIcsR\ndsnPu7+kXW3+8xTUbCCp3hwBSrG9rzxMG2WIJC++8G1XLjcq+abDj/ZCGuO1\nIne+uxOzAERW5epQXDTGaep6mtA9ZDMD3lH46lFh3KjM1kDumDSQGw4Kzdt1\nuUgXvJzS4E4eEoXMW4083ZWIx8n30baI48dLgsNj3askYyaqmHFFs6KoiBXL\nLDTtcvKIIMP5VF6mTAS6SF97nCuHw4aXVh05vJAH2huht5DbKcV3k2hhiere\notbObK078RgVkozQneIk//+YuclbQ9/fyfHhEjVYBPtImwg4lieurIxov/yz\ndKsSrQ9ad39zdHKrxVOnWQdpCLplSMj7QlWYe7py9jvNJawlvVOAlESBVxgG\nzvD3QN938GNEJKLVAozniV29XUth5lWQqTCpgxf7wlRUL0VbN1RhMPLXbdUX\n/1jTlyPOLmPQ90ia2Y+tNTT/Lvn7UP4v3dmnkpQN9jXngjHq6zBJdbvwVabe\n+nTC\r\n=H63u\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-131a987.0_1579814548633_0.6742213692903318"},"_hasShrinkwrap":false},"21.0.0-ea5150e.0":{"name":"eosjs","version":"21.0.0-ea5150e.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/elliptic":"6.4.10","babel-runtime":"6.26.0","elliptic":"6.5.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","eosjs-ecc":"^4.0.7","jest":"23.6.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"^2.3.1","lodash":"^4.17.12"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"c132bab86d58f3a3714de06ee9730185de146929","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-ea5150e.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-SETlSByv7oI1XAM3Ir94LaOafwclI9kklb8gnxmyD5FuN+6aaY+lJojpeJ+O/i+6x3+7MwFISYcZF4bR5vYElw==","shasum":"a3b0293c4d6aaa7a2142ed3b30dc3cbaf5842134","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-ea5150e.0.tgz","fileCount":52,"unpackedSize":294633,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeMe+hCRA9TVsSAnZWagAAawkP/12wEYqK67f0hMIJjKPr\n3MJp1fy+VEb+022+Pat1Ch3REJxDW74nPq2xMte3/J4eqlZh/2/GlqXptAjY\nYuHsjZVdfg+Eu9gPmjKnTFNQWH+LxhVYWd5IbnmheJKAXKGL3TU8f5WhI+FN\nzq2fEWZ3DESy5BLm93UCbcFlB9IHp2x9IVN/FRMFCsBC5vchhdihhaK9/uxp\n2sKptNvpwhPCvLTS7HbQRpmF2WUDRLGzcL0cDnDxeNl/BHprnu5BtewbjxWo\nskTg3MlwwyPofIouabwmbncykKQqWY8QWyAhLyAfVbSh8yiRRRpAQZex2742\nboRl2ak5uyh/cFmszUCTYKGfFuaWDvIUS6Qlss+erdRvznDr6zIvwIwDDX8T\ncMlYSfmXATEphjOTjLB6r4Kx4T6mvBok1F+ZznLXOlMmAF3gfnrlpWzTIRk3\nTT8vo7ybBAqTzqJopnhLVXzSQqd3b+eT9i+l4wT7+GGNxPL2ffarQoJMFZfe\noPOlexGTQLG08JXRgMellVFZb4Gq0WOchkfhfsvsoDkhoJLBzwOrb2LXJn0/\ne72XIw/vyLSoDBgC5O/diKC0mEe0DfhO/P96+Il+vr3EDJmruZB56InmtXHG\nQVFhmq6EPrdFpbtoA85XHKzmzB4BHR0Xv48kIimuYvlIRXwxMtagdbmUqQgI\nBiYB\r\n=yEdc\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-ea5150e.0_1580330913438_0.3067062503369957"},"_hasShrinkwrap":false},"21.0.0-75f449c.0":{"name":"eosjs","version":"21.0.0-75f449c.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@types/elliptic":"6.4.10","babel-runtime":"6.26.0","elliptic":"6.5.0","text-encoding":"0.7.0"},"devDependencies":{"@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.0.6","@types/node":"11.9.4","@types/text-encoding":"0.0.35","babel-plugin-transform-runtime":"6.23.0","babel-preset-env":"1.7.0","babel-preset-stage-1":"6.24.1","cypress":"3.1.5","eosjs-ecc":"^4.0.7","jest":"23.6.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"24.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"resolutions":{"braces":"^2.3.1","lodash":"^4.17.12"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"91582561a91d4cbbe45d07d240acc2b7047e88f4","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\nconst { TextEncoder, TextDecoder } = require('text-encoding');          // React Native, IE11, and Edge Browsers only\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node, React Native, IE11 or Edge Browsers.\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-75f449c.0","_npmVersion":"6.4.1","_nodeVersion":"10.0.0","_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"dist":{"integrity":"sha512-hXd+1esISWLvUIaMjIcFAIcyQpGu5MWbzTc7BB1Jfx65E9/rnIStr6K9Vt1zgu6gNznNFPHQGTrvPqzN6jywPA==","shasum":"985c202972908f8f985aa1f9c3c1fd01d3993e66","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-75f449c.0.tgz","fileCount":52,"unpackedSize":294879,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeNDtzCRA9TVsSAnZWagAAoGwQAKRUxyZG0fCU7pScblWP\nPdjarEzSGVz+SDj9ZolYk3zwUwvoShLe9jDmM24jNAVwfre6nQl30ok0m6Z1\nIKOexMoYfE5C5vKhWrVhi9lCuzfUY6hL/47W3APCb4XzdYS5G4d2c/5OzdLY\nYarkA+31PI8iSNc7ElVpIaJpigEYtnafHLBkrpdJNe4CBYm/eJgRhBSTszhi\nyePJnaC1BaUijVIi+1orlXrKfJ9sv8v7iGFKYJzoGrxzZvbTWzfYkpLntYfS\nZYtuyS9i/efWoY/SJutZOMAicIhZjuD2Q6KcFscu4s8uJJpHAJ52zvHwkHce\nfXXV3owndFBZgZw/eWavdSuw/pG1VpuAkmiPBleEeHzPEWT39QNislpeFI2Y\nIgOYwZ9IAjH4QUjygFmYD0i9enHY4Dxx1RTj4UleOO77+Ziyl2vgv6tIXVkG\nI1Nmr2cyspAOHy5A5zNe/fCkrN/EXAgPCHXf6B1DHH/lsNdtt2fmigK1mkp9\nC5zJxPYvmWyuVeUo29QdS/ebXIScvJcHeHisOFgf/4REWbPwINkZHncqVQDY\np9toYCidHPdLefWgs8skoP1+Ss17hRhKZS2bVectlNl5EjaktUAXGNWsD6XH\nZJzavhh9NL38zZlKI9cYGATRnQiRR+6M8sed4wCl9whS0oVMx5jmdYOvaRON\nMZLf\r\n=i/eC\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-75f449c.0_1580481394779_0.21571070696669126"},"_hasShrinkwrap":false},"21.0.0-60fa818.0":{"name":"eosjs","version":"21.0.0-60fa818.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","cypress":"3.8.2","eosjs-ecc":"^4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"aa7e183c08998a4961d733bd1b5f01c716205de4","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee LICENSE for copyright and license terms.  Block.one makes its contribution on a voluntary basis as a member of the EOSIO community and is not responsible for ensuring the overall performance of the software or any related applications.  We make no representation, warranty, guarantee or undertaking in respect of the software or any related documentation, whether expressed or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall we be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or documentation or the use or other dealings in the software or documentation. Any test results or performance figures are indicative and will not reflect performance under all conditions.  Any reference to any third party or third-party product, service or other resource is not an endorsement or recommendation by Block.one.  We are not responsible, and disclaim any and all responsibility and liability, for your use of or reliance on any of these resources. Third-party resources may be updated, changed or terminated at any time, so the information here may be out of date or inaccurate.  Any person using or offering this software in connection with providing software, goods or services to third parties shall advise such third parties of these license terms, disclaimers and exclusions of liability.  Block.one, EOSIO, EOSIO Labs, EOS, the heptahedron and associated logos are trademarks of Block.one.\n\nWallets and related components are complex software that require the highest levels of security.  If incorrectly built or used, they may compromise users’ private keys and digital assets. Wallet applications and related components should undergo thorough security evaluations before being used.  Only experienced developers should work with this software.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-60fa818.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-Evp9ZoicyQjqZOHhqCJbLBzWFxfa0ZSnuj8ensYui5uc9zQ73IW7bSe+y+xiHdIFRWP9GJtmy5+6bcA+o48EEw==","shasum":"8819fa3186f172f2d818208e4e4a6b0e88b8c229","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-60fa818.0.tgz","fileCount":52,"unpackedSize":294926,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeOZ5jCRA9TVsSAnZWagAAA2oP/1IHIBuyLa+geSaGtZcx\ny3kLo74JNDFHjMBEKyxu3mn2B9IH+6g2D9g9uw+EDJJBaBXUg2uD34cCQ5Sz\nTln4Yv/Wo7LHVEF8/w2F59WQgYQZAfKaklxfgTI/BMc7oxRgaxxiAuLP6Kbm\nvu9+kwP0NGpzTEjfcmkBKNW3SZRB3cPxXWJC4m3M9H8CRhcjnO4Ax/Hpe4/G\nN1meKMvDx3mmxUID4uqx4So99d/Wf28ChH1WNdjdSiHCdZQcSc2Xl1A+x3Ez\nZt41hU7HDmGZAkbabyxoYuW2C4k996gqJ2oDr/cihtItJ3sfb35csKkoNT5r\n7Mh2SD8g5y96AliBJJDpj4N9m7Pb5qYCOpKziummzQxXH8IoN8ZrHAXCAQ7y\n8/CywjQAZiDD0u2MV3o8mN+NsCBNFwP9b5ukjxoawv3EWjcFy5+xMINijXU2\nwxCX+uF1wjhrf9iCJplqgM70K7bZqrvTiRGpVp/2iN4bsGPJkdoVKwj8Fmkf\nDeoRdAwI+nSPLo4+FBTSjEs/mXFNq5EPq7tj3GHwbfgH5PkZG+MFa2v/ivWA\nbP4xz1ZqA7eIx3LSi2usNeSOyN001ngi73rQ6D1RZEbwDcbC7A0fLB2jTnvo\nSaRWS4L0hXgi/bz3Le1wQ12x6DCAxrvva6bZNtAp1vn449wXietyS+/NziQm\n1Zlm\r\n=LkSI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-60fa818.0_1580834402969_0.5311890347335209"},"_hasShrinkwrap":false},"21.0.0-37d6d0f.0":{"name":"eosjs","version":"21.0.0-37d6d0f.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","cypress":"3.8.2","eosjs-ecc":"^4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"b4ad5d2dd10aa774e4701493d63160a693e689b3","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-37d6d0f.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-bApnKMSeReSBOXoBu0AWsifMgy1ju1IoYKpg7EKFWUoo8E0VJ1RUw9E2vgGMRzecIR/51NjNJSxNWqW7A2Zndw==","shasum":"ebbf72837167e79dbd60684bff52f6e34f2b359f","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-37d6d0f.0.tgz","fileCount":52,"unpackedSize":293476,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeOc7RCRA9TVsSAnZWagAAJD8P/1SjuR0Jq8+bjNWlbMVz\nBIS/EYUh281k1wG6vBbSrlfLsZuGoIKezGGmG8+QmdFzAHc86TJvxMlZanqW\nfUrq8Q1ajUnJ4SLtYxXA84T33DZ3aetCxqL3B1Duy12v/owgk+7UQv2Iq/Ql\nkonU7mOLkR7AO550H4iA+NRtBAT0lC2UusRQKP2IObEHOeLDVRGkY6MLD3uV\nUh6lc1jqio/3xZQkO9qlPdrMis0gOvXDFk+8Brq08Cwi/bVpAjcC6X8jwqBp\nJdTc6YToOn+k43U12nFAGED/CU0HHomNX8wPsPJlLNk5j4QK1J5yWqGcSSBX\niMgN3uwWfFcKKQbnyJ8qehii9jL27Hocvw8nNm0YNysuNuKhiqkL+f4+f+hz\n+iqAnuAlyPge7TChtuQjphevq70fUp4fCicvnaC1SPOP4hX1HOEJwgmqbjDo\n4djj5HS6cGx21DI+wHzezGazKu0dVld8W1/U3T0lwXmgPkVJzCcNsDwe/lob\ndWs+ikwoICG2goLFbCS+nPimaSe/5WdxeTJb865vJqyLaQ4aSUUQaiX4gI3j\ny+0jpenl93sUILK8+Ii2SMaTxrZcSCH6UB+T+cqfZsFcmxQzmk0l1oQcgMnh\n9Vq6Y2I2g9KpoHMgwrupyFmmjYUGwLy6t67Fsuvu0CERgTteM4lw0MTK3dXS\nJwf+\r\n=7qRB\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-37d6d0f.0_1580846800789_0.6751363722156865"},"_hasShrinkwrap":false},"21.0.0-489474c.0":{"name":"eosjs","version":"21.0.0-489474c.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","cypress":"3.8.2","eosjs-ecc":"^4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"58439c2920ba4da20f88ed0d3cd26823f90a4172","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-489474c.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-HjsiveEtJkVEERcGUkjlrtCcvFcOg7iHlqal5kHb0PDcnGoPUW/fwySyYrwApRaStNUe9CmkTC7WZula0J3kYw==","shasum":"3aea73450964b73515c5c8241d4f7d084bfbabeb","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-489474c.0.tgz","fileCount":52,"unpackedSize":293476,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeOwqaCRA9TVsSAnZWagAA6swP/RuY53wk1ufS/Vl4FO/9\noKUQuWahL0wMPFnoTRzLkCPDAOVDXPCQSdCEOkVEomXAwMXxWOTm8Vx3PG/9\n5krVf8fjQxUERSZuNVv5Yiwr/FYZYbSZ9Wu8oAQIvlfReWsmoinbcmcsYlN1\nOpXEMPlFMQveR17GD5FuQhQcnd6ciXPD/0t8bhgPwYriAADulC8gG7ptyEXx\n++jnOScCFpy0EG9NOKiAAqANS/ADDStmsi5klQLmP7FybE0w/ltdHYj+gmbE\nN0zcxuIm7PsK/4D/AzdZS2ckSRgUz8iFKA/Q4UeSvdiz4PPX1pRET+BfQIF5\nEPkYwws9cUXm/RRcE8KhnQ06dRVM8LKRLH9hUU335HSNomyVOizDt0b9B4pP\n5fCe3k0YZbbNLsD5Uug3OZjL6r9Be7dF7cBomykvbD6Kx2Ne833VOdGfOQXa\n48wa+G4NXhLyG1ouG3SUEZkYLku+r/wljCdtnQq+xPkXael60cv2qqD35xRj\n/C66OCJioDbuvTL+mc8R49YgbI3JD0XT2BhIazkeT7jTUOsGzZEn/TaA6G3k\nL0UMkhdL/2JYw9dqbY/HNHWkSfPLKX3eZKYrdyvdm2cqdLBxZ0bB48XLXhdI\n9VKKDbbVgDvn0sgnzT6/WFn/dPb/W8IAqpKXTibz0d8qRKRkFmUJ3nrNs30L\naXFV\r\n=7aBp\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-489474c.0_1580927641876_0.3064390199108413"},"_hasShrinkwrap":false},"21.0.0-9b03ef8.0":{"name":"eosjs","version":"21.0.0-9b03ef8.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","cypress":"3.8.2","eosjs-ecc":"^4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"bb2b84811529e15acc3cd79ea6002c278413ccb0","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-9b03ef8.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-2Il4SU1UongQObyXmws9Zwodmd1hFsUggGj2ysrVlbYp7u4ZFUl9qtH6ViYogL310Jep48iboA+D3bng5vtTQQ==","shasum":"7a64192889ba00a5bf77811ea7315890c117c9b5","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-9b03ef8.0.tgz","fileCount":52,"unpackedSize":293321,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJePCNRCRA9TVsSAnZWagAAKuQP/2l3E9GCc1TD8ZAE8Kmj\nEV9Cn5iLkEE3Y+gFzgwyvdUwHIMmIwLWzpj3sQuVrtsR6nRgGC1JmFxoKLTD\nuthoQVaNbnATaJvL9BmNS0Q+dvW1s/h0NeC/oamSLgAvmZSvWbrh6QLOVYbY\n0FPNK4fSDAUkTzvf4qanoPI16UdHXBhs5/5zPubK3OtErLiX3eIG0u1sP69C\ngn4JEF+2ahU+bDyu0MJGGlDRWTgfOZB0jOxQ1E/XViQsI3wq7+zZLd6tSJkf\nXQBfM6XsuPIZ9z+I0Q3km36bAMTF6RiG9gdvaIr1Kp/gBELmClLQWgEZJe3s\nsxb0NqkrY4Uq4dJcZw0Vjgetb9C+3qZoSWuvwsWDjJyjL3fgHcI52oNfPbZH\nB5XgZAixUqffTSKFhE9lqVLVm90lFZS/f1xxzNr/wn6em1GwOE3pdS6XEgYT\nlvzz4FI7j9XW4dB/E/BO6adqwI/FGPWqYiKf6TjDM5+/XrUu19t4yPUTH+vq\n6jFRCwB/tZ3D5vTL+VU/btmriwce4q40iWUw+eXY5tFflCE6wWMowqPEm+Pa\njg+DZCrusEgPZ1SyBtQ8HqdJzBN5XRWAI7lXEa8peULwZ9YHVNHMfE/w64J8\nDin1pOg7Zw1YoKjjz9llx2lOZ2kY4dgf8fNrV1dN3D4UCCqBoeHGEErJeh8n\n5U4R\r\n=FdWw\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-9b03ef8.0_1580999505214_0.6752386735282203"},"_hasShrinkwrap":false},"21.0.0-2f4c99f.0":{"name":"eosjs","version":"21.0.0-2f4c99f.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","cypress":"3.8.2","eosjs-ecc":"^4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"c92580ed911b04f60e76dcc65bc69dd7fcb661d8","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-2f4c99f.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-+JRuD4Q9SowBlGkCQM/0vh1MLFdqZPUmpNILeRWHPB23+DbH1RV3Fk0LDyd7jdnrcbEUNBDnA9dG5/r+VDRM8g==","shasum":"26b3209eeebe8ed52f1064b06b63fd90a1e3840b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-2f4c99f.0.tgz","fileCount":52,"unpackedSize":293345,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJePD6YCRA9TVsSAnZWagAA5jwQAJazhbaTYko/eOfF/cjj\nJGKd+NVrRMNZMggsacVnk+0Jf/5pYCvC50J5nP57V+cqgZol6OQbWCdSK5ey\ncx37GYJmopnm6lzrsqN8GiHlwWlfnCe/drk2THXBBA3jaz1DDFKxlpli0Rme\nmN7FYDC9QeZXTj/pRyj0EJ3yb9a6mZwTnvQoPLbDxPEkzsaVgdDp7aRYX3V3\nhACljUmo2i+zJcgYco/3N8B78J1jbRV8edQwG3BciyzZ3EZEc3CD7S2zamQs\n3ebmkjKLwVpFpSy3oej6HS2vkfJkbUDIMe7x1ihis6m6jq85+zuT9xob7wHk\nza8rqFnsj4nNyfAqDMf6iKsWpB/LgqnR2qZfVYkWD+/qiq8qOsLmJRJnOH7X\nNONdyi5Y/nriQ0POarnqFKiT1pf4eYw1ifBUP7VkeOy4A+2655/puKl0jltq\nu57vEVuswD1n2w+h0Y8vxWlB52zAh3vsI3eZIrzsVMLdSLOX/iZjO6d+EkD7\nmhjxkp/YheXiyFE3OpIaA0Mg9anRNS2yduRvgN4v+UYuv+DV2e3Qz9+31e0y\nU3gcMCnXigF9lTKXlIi5eFZp8uNyVbgb9v0Ruxffgn4/IYmF1QjwqBkqHJTr\n87hsTb/tkmwyTVW7Uh+RQXerG5nEHgPPwnhUa6+qTTeDWD0OsUKscQNsPhj8\nWJjX\r\n=65oW\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-2f4c99f.0_1581006487111_0.9241769441854002"},"_hasShrinkwrap":false},"21.0.1-rc2":{"name":"eosjs","version":"21.0.1-rc2","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs":"yarn typedoc"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","cypress":"3.8.2","eosjs-ecc":"^4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3","typedoc":"^0.16.9","typedoc-plugin-external-module-name":"^3.0.0"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"bc8edc80cbccc6137eab76153643e6b78d66629a","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.1-rc2","_nodeVersion":"13.8.0","_npmVersion":"6.13.7","dist":{"integrity":"sha512-Jq+9By5h4C5jMoywFYhAJxveSD2MnyUOhd4gigUXqS4b/SzKSdFDxLuCxKaw3Nv4QgiAoH44UhFhp8TVPgu1MA==","shasum":"9dba4b43f51e0645a6dd836440544a5ec004897f","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.1-rc2.tgz","fileCount":52,"unpackedSize":293231,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJePX36CRA9TVsSAnZWagAAXPwP/iGRUdi00LrI0rkdyCg/\nflCSkMvxZGaVegEoD9DpIgAO46ABKyN11KqqH0qNeIxAIFxtInef4hv1WOMZ\nzfnuKhY1knp7y0OzQPnlo7NFoGfWgEA5Ct8LS9rWlHNfPZwTx4uS1BslQWN4\nEAL2V/iDqn04qQuVbL3zcDQMVy65HoeiGcRtYatsqkosWua4pcq5wUNOC+qn\njRXPLSK3YLP9uO5Urz2p0QuwacBX/VrZaFvnFPIdoPuS07HdK8DX3aniFQJV\nkENM4sfxQSwCrSuIwdEpMJY3rK6AKpmgVbwvENmynwbpPa2ScrtniNwmNX8v\nf/e0pQ7bVIpCd7tBiuzoL1VXrRzS9clrdT2mPG/7K0ilGLqqTlpX91xIIICq\n9BgakQaAz/d/YptNhk9XLS82hs+6i6nJ0fg+m0jVo97G/BaGFIKNj9/ghDD8\nvB+c9JHHCImJNE6bLOtylgFGxhTXIBFnSkAleGO9oOLmaTUNj5Lu1lC6uc+y\nK0X8vLXwQ0JBu7p5f1qW9ZySm7lcIQv4GwCt3PP6xOnjEA6Pnpde1ggASjQK\ng1GiD/9v+mr5gty1oWjLUxCRU2u4q3iyj/ccCO/8xcrSr/joInhrr/5vWFM9\nyq56ksN9abH/8EB3mNFMnde1r3dW2uj9dJ93aOhSWAj8v02/3s/Q5FacA5hh\nzb9f\r\n=u10m\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"jeffreyssmith2nd","email":"jeffreyssmith2nd@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.1-rc2_1581088249825_0.22492821869118806"},"_hasShrinkwrap":false},"21.0.0-3c17dd8.0":{"name":"eosjs","version":"21.0.0-3c17dd8.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","cypress":"3.8.2","eosjs-ecc":"^4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"c85363939b82410f042b79a600ef140251520810","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `blocksBehind` and `expireSeconds`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-3c17dd8.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-b5PXvr5PU5GpVe/MKQZ5lyQmqHUpUUg3Z3D6t7/JD2uanmFv0OzdEKlWmYaMXFnlrkM4HdYvGjEhnQrJsr6dcA==","shasum":"d1791e7a22eb3d47e8a27c9269acbab787370232","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-3c17dd8.0.tgz","fileCount":52,"unpackedSize":293293,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQdr2CRA9TVsSAnZWagAAtkYQAJYrVpzHUvU4jLX2Bzpe\nTiNi63Ch2XFRABq31Cz6RziCBbdLTERvA+IY1/F5Ft4iY7DgsUFfyzzWdMhu\nBclaexDlFdBEtj8k2RMe+CLb3Cnn25ZhdJW1ARefVnAZPsu4RWZR6a6U0NBB\nJBNjUZpCRkgxfjjRSB7ypggKXysySNi8eQmFMnsOp/Encb0saSmb6C1wtJLo\n3U2Vr5mQQ6RJY7trDnuF1Zq+5lq4YeJYFY1bBCU/V2WxKpec/UPBtyT84X/g\nQSHZV/Cj1D7VwTuy1HjQEIrS6sFagsHUZm/EoTU+ksKEF533a6kIhHkM3sWU\nH4qWdwcFBKGeR+BOgu+JxtfOXpvkNvdW7xx0n9vSwIrDEyD33kGgrfHverSz\np/rfWV+MDLj2E5QDlGmWu1yJB9MafUOTCv5GQKSlL0CDX+pFplBUuSfNBFTY\nrfGOZHN/fDuEWU92E9K7AvuV+Tx7CKr3LeFmZPJ+z6sV5iMWe7mK/DBV13o0\n0SlrGKxNnXXgDukCii4moScJj2sxk53by4mSVixAg5Xjd1GN98AtbvTJNcD9\nPQqeX+7q+sgpy1CVWJTRmF5zDNTZsrzg2iyuwOE8LNF+BIGo5p/C1JHdPJ6F\n564naVW7OFJJkogEeqgx/GuUMVqxu3OKkEcKS7E1KuHYo5pgWa9+JGN3bPpZ\naVWo\r\n=QW/V\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-3c17dd8.0_1581374197339_0.3972609717386504"},"_hasShrinkwrap":false},"21.0.0-b64e61e.0":{"name":"eosjs","version":"21.0.0-b64e61e.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","cypress":"3.8.2","eosjs-ecc":"^4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"7ccc27aea51e89080a6fd6c7f18dbd494704ad3c","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-b64e61e.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-Jn2q8+mSYoqu1/1GKZkEq9Ylqx3/Ptn+JrypVEIk1hYoJZU7yhsrvrYArxjgo3b3vP2iaBu5onP+3QNWcZgUUA==","shasum":"76da0a4a6fcc291d8735667cf9f1e3288473e518","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-b64e61e.0.tgz","fileCount":52,"unpackedSize":295193,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQr4eCRA9TVsSAnZWagAADhUQAIXfNfACiUV+//auQPf2\nC/RlGQDhbVA5lJqv6Ssy40WuMyBjYL4nWpr54fzRUfjhD/R987AODkPMV1J0\nZSx/uZMr6OeCL1nqHuuRcnKI17xnXineZeek2K95C7ol1g1WsylJK7uifCFI\nFSN6Aj8haeF3VXqyxD9UclU9RHXFUn9sLiHmTcnMzzqIbURYO9TNxXTMjlcV\n4bRn9i4TJVXB2wymghacqfvKAOnBT9eZIpIH6eaQVPiD0mZ1ySqExz4/HJY1\nMEo5U5fEFhEyNZZmFGZDF01v9n1N1AwyjpHQYQ+oOcdq6Z0vXLV5+XMkQHo7\nCfXMWITh3Z0IATDUkrSVnTzy5DHc5krOJjuGSnLdvoARMjCpBntiU5HmF+AL\n04dARmq+DPwSbbDa9zJ1Ig9YilaQerZBomidEhOPYSTErjphvnz/4YVcp3i6\nxT7Is2/GFSM+GfM3F9wb5bET9w+JTgrqB5pYSDmLqegxGGCFOUqpwtK7LXRl\n844/+b1uDkwCkCs4YzbmZ8hqPow7lb2AaEFb+VOp/X2v+KAOYg4cusIAAFNP\nfV+4mebtRd00EJ4kamqUwBT2ykkQxWRhMky6C7rawv9TscOBq6KI0E6xez79\nOTnBQuwCuNGOdsUKrZxVHx+TCWn4KweHn/dpKafk0aDHR1XBXMTjIOcS2GcK\n1VHe\r\n=p3xX\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-b64e61e.0_1581432350106_0.7763324072776472"},"_hasShrinkwrap":false},"21.0.0-01fbd4a.0":{"name":"eosjs","version":"21.0.0-01fbd4a.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","pako":"1.0.11"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","@types/pako":"1.0.1","cypress":"3.8.2","eosjs-ecc":"4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"3f697bb25dec5ef18ebe9dd4d91a8935965bc6f9","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-01fbd4a.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-3zJKrI7gwsv0FU0QqGoAo0grEhxCNdwmXJnBsz2kqA5Ngg1xZhu8eA39Ii65jkE9onU+kK31YxEzuzBQnxOmzQ==","shasum":"6b7d760c296606930006f23d3c2df61b457c6fa5","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-01fbd4a.0.tgz","fileCount":52,"unpackedSize":298522,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQxDOCRA9TVsSAnZWagAAuzcP/iPkGb/pXX/vYcCLZnTA\nb941tCe7nEWHZH8/8k5/0T977psum64VEOvT6FsmtMWSmKA0sQ/8oDoMEHId\nCOWwqb5qGZluPl8hlDVbISnK8nQQFvgrJCHDelTqeM6BHfg0MZdVVvUow3cP\nDoHRIOYZ2WsIzoDGaFtoZtT1Xu7PE01Bn8F126fl7QsUDjMDqWyDChoJclZq\nn8uijm6L/ANADInUrFpLY2xaqhui6EnweKjoSFKl3tTouzdyrULebV5SSMg9\n6ZZtFFanWJWyRklGgshbJdXkD2KAlVX14+M1gTSsjg23mUGNmAFUkI+FwB/4\nGrSZSLtPPlLV66U0CZWivMCPdJukGIYe/ET8a1A3QCmuzG4Y2tlVvdikZEAn\nfghIt002WRwfgWjWTZasFi805OsN0u1Y+aZGEqLrS/lS/4Rqr4HlRnLZWRPI\nNBdi4wLslvevu7MKYKi6fSanV8rk3n90Y/X+v5aUast2RB3AtTK42yQR6sNu\nWt4tMHLp1mopfpXZ4VrN6FPvxjRNHmm9GUvNrOnzQAgxoP7A96fKpp2+E6xq\nHVktViltZzmrHaTuVeYX4YmmoxILVMW9+Spm3j6Lp6w37yxnqBOG7t8yvarT\nZ8E8w/QILNnPIpoaNhcxih/sQ0DYR4VQQyUpbnPNMNsNeTYCaRxdAXfRLhl2\n79c3\r\n=91yK\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-01fbd4a.0_1581453518376_0.862032954512191"},"_hasShrinkwrap":false},"21.0.0-28594c3.0":{"name":"eosjs","version":"21.0.0-28594c3.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","pako":"1.0.11"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","@types/pako":"1.0.1","cypress":"3.8.2","eosjs-ecc":"4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"f3f2640d5375cd8869a5f15358725eeb31ee5687","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-28594c3.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-Wp8Jo4vv2hhzfB3VNfroRGqZOBvu4OLN0kCPzk8mXM2XfzNZvLcMogeXYWLmxeVtwB3XqHScgbx9+WYjKVTpLg==","shasum":"2f4b353bf0765050ea4339529f250ea92cf54c6c","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-28594c3.0.tgz","fileCount":52,"unpackedSize":298627,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeREAXCRA9TVsSAnZWagAAe5YQAJ4BFAzJJ8Qhk7bbOQnt\nZVcsFNwGIKzU6m9uuefreXarHv4A/wEXjpgqyf09hE7rFtZx1q37WsS9qvrL\nJp2CTl4TsLPUoIVAu6I3HTmabOaZa7laDXeu/V4XS3lg+eAhzkdv9jit/vhx\nq/L8YclEcnwNB74wvubhXXY0XPRq7epGlhlZk+5AqeFHw79n/GkyDOSgtglj\nWmaibxocj1hE/YM7aT/MhA/3vD8406h6I0K5FpvgFTxc9Xqf5PoAQB2nAQOq\npHfrL35N9jMlZz8BLlTM3M7eUtzmF3cgzTwVXtsdY5hfBYgXPWgiKjA8hahF\n1OWH4JK6UeebJRpI0MOThiHoS+pCP6TlvFRTX/QIlX29bB+4vd/vyiQjP9G2\nBvsscsSJcR89u69QS6Vsa/Jlw5mw9K08ej/5sfHwSiMiTHA49DnQhA+OoOzu\ntiPxa8UzXVpKfgRrpDuaOgn2RCHWDW0FHnyd6Fhke8K1lzugulo6VcQGLNuF\npXPf+KhmrP5chTnxDwzc6RlvWGL1arnSSkVAbzrEnmZeuXuDa8uGTn0bW6T/\nkkUZbCqORpaYKd7sF86/gz3d4VOaYQI1uu/nfeyvsBrnsC/CtBqNjDu5OQPW\n4z97tKjX0ULg3+vBPbG6QycKU0DLOEqfLIAA67qBg9RuH/fjQZr7FlMvhR/S\ncp9X\r\n=8yLy\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-28594c3.0_1581531158975_0.42944992077351607"},"_hasShrinkwrap":false},"21.0.0-45854c1.0":{"name":"eosjs","version":"21.0.0-45854c1.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","@types/pako":"1.0.1","cypress":"3.8.2","eosjs-ecc":"4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"9d7fc775b4a4a1c5838bfe25f0defdc00b3974bf","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-45854c1.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-kdFT1Ad3pvCBSFTUy8cPmt86jlksAyrH1TBiA7PFhxfxU/5TzhhlhrTt8L933gFZTDB5GwgqHd7RaCB6Mi+hDQ==","shasum":"92c55cb8e833de0b00b00c4709a9065f369ee040","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-45854c1.0.tgz","fileCount":55,"unpackedSize":315314,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJea4yFCRA9TVsSAnZWagAABfsP/2rrdoq1R+0z3nbzmkX+\nJlWdNxDFrXBPNoUtxdPEOgXQQUnRxUBDbszSUmLQWlFo9uhx3KJCk7KCn5nM\nw19F6HCR7U3DfrpkPLtTkhelGPQjcLSsoHRZBEyydj0uwQOQy7Vj3PsbwgXD\nM3R5Ti8ydn28t0pqRUrHzKjCCLVftYoizk1PuMkhgce/o1NsF6AAGlT/dkSK\nJRbzRVPV0aBnOnAcnAeYj5nRiW1TR7BTEsp6pNCk+zpbAtKl5nAPvQ3NHE++\nXDkkQv4hNA+YyCIrtlHh+x7kO8Hx8+szBxp5xzkQ0UuXMI/4PQbXlBnGxeN4\nwUV7NUSM15UrYqCpl3nM3K/FkIKEoZJBs2Xu14I0LNag/IYuCIwxgHMjskg3\nKwFZshxLxfAqvbhYzzyU3aNZOegmXDQBFxoJzQa+XWvyvHhQoatXUa2E8GOS\nk0+VQnjBhnNPxhwopZb1MwYBpSBZ2qfEQCx86pUZ22fZzjqbj/1pP4BAydMY\nsHwPy/YyIq7y1Wcw7kBPHWlaHTGc8APpbBzh++X6kFkH6P2hExNGEdAzir07\nyzlZl5xr4nJ4hXqZb59YVzuwDN6bkswe/9Jm/hY7CHUIKJEt9hxXzJIua7Bm\nTrcZE3FsiDdlNEmmmqUgdRCQy2F6K3J6WzuQQ6jqETZZJ7AX1uyK59FyMYry\nn1XT\r\n=/Vtg\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-45854c1.0_1584106628570_0.8446899825800653"},"_hasShrinkwrap":false},"21.0.0-a6ad012.0":{"name":"eosjs","version":"21.0.0-a6ad012.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","@types/pako":"1.0.1","cypress":"3.8.2","eosjs-ecc":"4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"02ad892b4a3b8b33ad030ed3dff6cfb375ed6831","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-a6ad012.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-jm//Ye3l1EQmbM9uOnaQbJHyxOsBtiYn4A3bLR0joCNBeGAboeflHc6fqJjXT1pWA++U9ATzK/NZsPqFW97pTg==","shasum":"7a3608b6bd10fc6cd6c5043f5e7495eb061e5a6b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-a6ad012.0.tgz","fileCount":55,"unpackedSize":316225,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJei1RjCRA9TVsSAnZWagAASTwQAIBda9UBJTg7ijRa97cU\nHFTVmxj1Ym6r7ruYey/lGkmAlDZyi3Cmyj3dguiD96qakppukti63UIHKbEZ\nYAgLH0TwZGy8AvoAqsx+ZUDGe/0N4Rh5PKb0zE+UFBgtGua4ha5xERubJDJs\nXloxR/8Jf6jLWmh+SSFcXgCYrGLQ1Kbn9TBU7fqjb5SeLDYQye0Ai+ucUA7z\n++WeX5SJmivOYSQLudJA2VmZN48gZPUTvZdRPd8vqWhxGj2opasLHkcLVWSD\nCvk6Scgo2aJ8Q5AGqqJKvvmkaq/oE6x3VP5fgk57D3DX5oE2SQdWGBRwGOR/\nRMpeclVbRhAOq7VpxwjBvDa5xeAZt/9/AToy3hig+931qKtzz4VYJU3VhlUI\nKDjXnSa+NZI0AHchuySBYmf6+LiTVwRTuSL6n9rjlGlZa0WSGYZUkhNvSqXu\nyzH0TIU4DETD2AE41EFaRah70YjOYcQw0x+7FYIGrfhbkeNkW460NeKfDlhA\nape6alkbCpLIlc2GLWD0Kl8w+rwoPa/n1eNe1X9YU6NYDY7e1qdOUvYhaNvo\npK5jY30q61WInjhYnRn0MZiKHVS1pcR6vcYeh6rRKGWO3Ldc/GGH7rIKV6TI\ngc31OulLNp1XnOtT0z89ZM9YzjzyA2fgV1uHtG5y8aR/YUl2ix+5Utncj8Ht\nXcho\r\n=BcCM\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-a6ad012.0_1586189411112_0.4890427520508642"},"_hasShrinkwrap":false},"21.0.0-b10b79d.0":{"name":"eosjs","version":"21.0.0-b10b79d.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","@types/pako":"1.0.1","cypress":"3.8.2","eosjs-ecc":"4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.3.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"6f2f9498b6a85e3f99daefee27c2b52d108007a7","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-b10b79d.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-bdzWIVUfPb2AEo2kQ7jzMJnEqfXEXUZ+FgFVaTv15fGawxxNsHkx3DGPQOrKVE1OvMdbrOk7vSVmX1Nz24Zmwg==","shasum":"edb573c785f2292cc2a39aad31ec0c6a868206f9","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-b10b79d.0.tgz","fileCount":55,"unpackedSize":316242,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJekK6HCRA9TVsSAnZWagAAMI8P/jRkEQG8IPvKfR9RZw5i\n2fzbfsXAty1yI737cI6ATyknAmoJ6RnOZevzc+ZivrtQ6d+SRXk5OQ5ukpVH\nbJdZaRnJDQ88XTpNPtLvQoxQIb0RnrsMs3EbhIRzUi6/JysE0s46TGBBsV0V\n3Du93bmXztyRMTwgMwn9I+BMWTCFsFBHQQHn48kZ7Xv1ckFQ0ofwYXyKUSDh\n8SwdVCNnDxlVJtb0odA/q1g1GRJXRqrN365XOEQpVFKc/ho1o8ze97orz5VC\ny7KKvpn0ZcsKeRvt51RiGFvPnj1PtWUwzkIcS8uxKAzp98awmJcab8G41slz\nlV8wpGZnWTXxyg+DqxcKbJESV51mL42pVvDOK5kTm0Lhp3ZiVnt6bV97wtEX\noQ7uwldChG/w84iG0nTzldxcKyKgasOeCiiZ2xA0PsFepDpjgMDYNYayoE37\ndnlqLd0MHtsbKt/TNocFrcQa5gThY0fyXn8d+VQo+u8i+aFD15+tkGDHdcLM\n/8I3+gSuT053wYWSxhn2iU7iaOq0Nmry850e2thL2abXRbmd5PjJgNiS6nbI\n55ucSh6S+osabVqmLNypbdb6kilt7ACfIvsyjWOypit7NSF8NohSGjfn30ce\nBhfCT+fz2bxQWqdnl/MG1OuZ7zy2hSfi0GBwJNKFs0C5s/4007UJOOoMqIiA\nqOi+\r\n=QCiG\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-b10b79d.0_1586540166443_0.6290219135147195"},"_hasShrinkwrap":false},"21.0.0-646cad9.0":{"name":"eosjs","version":"21.0.0-646cad9.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","@types/pako":"1.0.1","cypress":"3.8.2","eosjs-ecc":"4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.8.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"resolutions":{"minimist":"1.2.5","yargs-parser":"18.1.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"61bbe86cf54d0f6cee7b4a9280386519cd810b86","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-646cad9.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-/YDk1bHIQWAWA41Dx/SYS3wyFnhLWVttFf0RZqLPzc85qS3k+B+gBU+qT2rhAPcuIxDJsYGj6wNOzUbosjwGZw==","shasum":"e7aa77d5cabf1bbc78710f1e5f8e0d81d34a33c0","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-646cad9.0.tgz","fileCount":58,"unpackedSize":379465,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJexuT0CRA9TVsSAnZWagAAV4QP/Rwq9pyINs3iouSb+LRN\nGkcFpeNWFf7QDbXWa/rCpQAYOBhxaRcolBlEwlbFCDDnmZ714WmX4mzbhSXg\nnqmWUGdPUE4w/IQ6NOnr67S1hN7F1xA/isCkuKHT3xeyewYz7K2yGRr1Uq6f\nm/6gXtPHkV4voIAtSkRrDAGk+6T2frmKG3+/jsFRw6Ysna9FgmlTB+0Ow8j1\npYU45dGV8zVfjUCi5gqDCrM20DinFwYxfaiuAfBJDDxJ0PjoL1a7AgNq85ml\nc8usuwGQv2EXHyO938goNsx2P7tkeA1Iw6TH5ga3JA9hj/VnpL4cA/55hWiY\nfjS5prVWSpiiQ6HmTZEcRvr6BnWLIFsaONB0mIpaayqvyuvH7wcz3GAg3R4j\n7XROb4vAb4vsGBUBCzrd6BB78JJAr25Adbqx8h80xJUJrsT6PX2ixI2g+Pwx\nMFZFfphV7UqsoX2SLNx+doEgw8WcnZUgw75PjDn7Cyg/cSf+lHqb3GV3ekEX\n5yPAVnuyVd4eD95WGb2fACIVu+9c2ldvJ612e1rNfvJXloqSIsc6h0T+/HFS\nJKTPFPyrSwAHUlDJC1Zh57/ytoUL488JsRrL6B/2fdgEB50pr2fk4gt/RnBE\nE5tH0wgNxTujEKCkXh12aPCnSPOFjl4DuK0hpWryD7N/c7lQMhYa+uXljivD\nrHRt\r\n=31Oa\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-646cad9.0_1590093043779_0.13605980855168753"},"_hasShrinkwrap":false},"21.0.0-8deba86.0":{"name":"eosjs","version":"21.0.0-8deba86.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","@types/pako":"1.0.1","cypress":"3.8.2","eosjs-ecc":"4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.8.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"resolutions":{"minimist":"1.2.5","yargs-parser":"18.1.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"e26400753476307327ffb806746bac4440c97c4f","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-8deba86.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-nZ1MF7xprb+6uhLvp+fXl9mHmbSbKB4PYkqBL8aZPQDmXbFWVYamhkE2mXhx/y3acJDzmKO3vHi++NIgXfD8ew==","shasum":"1962e72f6ff3f145334c45f0c9754b1cab784063","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-8deba86.0.tgz","fileCount":58,"unpackedSize":379956,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe0BHVCRA9TVsSAnZWagAAIK0P/j3Y4QzM/mH9yb9keA9Q\nyLsmBDtl/dgl0z/OVq+fS5gv87JkkFYA/2aKFSAHH1IqFKbh5jHfqcw1Es5D\n5tYnEGBZ3wkgVREhjtq4F6cIG5yIs/Uj3aVAN/cD2auyNxhZqw/byU9RHtm6\niHu15dpZdYcU/IZhi2JJxMbkWHGWNs6zZ7kU4WFG+K7i9RVZpjscl4YMTY7P\nx19RDUgnxasSDlDtVs6njih9OkTGOj4mozzKRotByoSq0D5bRLIjE0ImLjH7\nLJO7rn4n+9OCSLfK/0+8l/uENeYvviqbTA8l1z+B58LiHSO6tOgYFbkhO8Nw\nS2C9n985NcRWJHw7fjI6wTItYU5cBRd5RZHgd2SG9IG5I2lSpBE88CR2Viy3\ndMJdhsETpO/M5pGI5Isi6yxB5IM0HxeV0T/CcLNuJ4TZNV8AJnWYJLXy02yi\ndXRI3ShvMdGqxRokV6/p6PUtlH/u86IS+CxKNmwgzrMEKG5EW/GIcFTZRZUT\nsCc5/1K/xIjwbUhHWJBAOqpDMV58pejSWqicY5ViAwbeXzPLLt+XKongBkxh\nRctwoz8XD/XjLMOSmWhifUsCjRoMuf8niPq6uIeiNrEddYB8fsoJGRLt3HLj\nag8u58SGiBkxMJHMGQrZgiBeacGSWrsnoOT8XCjvoPeqbW0Ibd2aRDPxYMzJ\nPPhD\r\n=LLFn\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-8deba86.0_1590694356435_0.25000827561891703"},"_hasShrinkwrap":false},"21.0.0-ccc1b7e.0":{"name":"eosjs","version":"21.0.0-ccc1b7e.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","@types/pako":"1.0.1","cypress":"3.8.2","eosjs-ecc":"4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.8.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"resolutions":{"minimist":"1.2.5","yargs-parser":"18.1.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"8b8bb8139b8456d4c5e200828b28da0cc499cdd8","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-ccc1b7e.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-xxVLp75zUT4G/90mgMWcvfM9neML232dxv2hddRT5ok/KQlljeVL/AlIpxVxwpjhN9+sHM7rgbyeMCPLAwoTyw==","shasum":"dfbcd802f15864cdefdaf5b561e6235f77f9b75b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-ccc1b7e.0.tgz","fileCount":58,"unpackedSize":379956,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe0VEPCRA9TVsSAnZWagAAcL8P/iZzqLQO9ZmMVsBb/eYD\nPRC4LNdYm0VPSom6I32uzF7mjIqPyqsdUrV+wDAFgUptS3cwBXPGzz/2+Ge9\ntRHk/yfsTkYzUK7N/wJNhuu58fui41g10LNqNsS81Dpf75bprvz8jEtHeata\nTOdm9/ITtGmcrMzRDwZbt/LPImiVkTPKOby8fcnwrkFh19KkNAtjsWgH8Is5\nxLOQ6tnEMq2hgATaSf88U10TnySO1VOsv4MdsF0DS6sJRzoJpjKmrcFv1lxT\nE6jKy6BiLNvN8xldi/k+94snQ2DoZIo+p0pwkZ7Rcs27BgAmuT9dXsssBnh6\nmGdjg8rwaYZmxPge1NxCrkKJm6VRVgXzAsdJHEEGVeCHJ0X8EDR5b/Mvy1CB\n4Et0KQsOGAbLvM3+rs6BIW3ZifXbrKT9R7atY+D3ZwemS6bwwYpSwYn09JHh\no7gFeSZet+97z+9iLia8dkDdQ5F2Xt6BKrBTR04AWPjgB3p12W2nD00VfGi7\nbSWiy6qmopPZTynKEWsBifz8oU4vYNA6CIN15yTA86xNGG3GhFk/8RP/EkIr\n3rEAMJOgcI5YlyyZspAAXjFK9y/Qegf0Xa6yWyfxBk7rfE4Zv7S9/tO1xoP4\nebYJCJpsdnobW/vmk+sRuXjRgrUMKYTTcY67Fi61cafVG41IUQ1SQxgCR0Jc\n1SMU\r\n=5ksS\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-ccc1b7e.0_1590776079323_0.3242381896416042"},"_hasShrinkwrap":false},"21.0.0-6c2ef05.0":{"name":"eosjs","version":"21.0.0-6c2ef05.0","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"7.8.3","@babel/plugin-transform-runtime":"7.8.3","@babel/preset-env":"7.8.3","@babel/preset-stage-1":"7.8.3","@blockone/tslint-config-blockone":"3.0.0","@types/jest":"24.9.1","@types/node":"11.9.4","@types/pako":"1.0.1","cypress":"3.8.2","eosjs-ecc":"4.0.7","jest":"25.1.0","jest-fetch-mock":"2.1.1","json-loader":"0.5.7","mocha":"5.2.0","mochawesome":"4.1.0","ts-jest":"25.0.0","ts-loader":"5.3.3","tslint":"5.12.1","tslint-eslint-rules":"5.4.0","typescript":"3.8.3","webpack":"4.41.5","webpack-cli":"3.2.3"},"resolutions":{"minimist":"1.2.5","yargs-parser":"18.1.2"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"cfd309d30ad16c6f88bd84104f8b27051efa9ead","readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-6c2ef05.0","_nodeVersion":"12.14.1","_npmVersion":"6.13.6","dist":{"integrity":"sha512-Y/qJ8s94zabCWwZ2olBgMJ6bpahZXPQJv7EKsO2yXWWY+5sNMgU8PNC979Gx9cii9dF7GVyZ7xML8++RxAvcPw==","shasum":"8c16f17538a13a149743090bb7f401ed929bb6e2","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-6c2ef05.0.tgz","fileCount":58,"unpackedSize":380250,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe2p7gCRA9TVsSAnZWagAAdUoQAIZUjuctfN9iDlxL8SI/\nDKxFAai7/vNsvBZ6kUt953EXSySym+xoH8nvnvlSG+2/bvjl32PIDj1jNcUa\nCxjud9oDtoQYvbAp5BaF1sm5DjJzGVlEFSCJ5aunOgOzT7ueeitvf9WdBR9L\nwQQi7izThPh0ZOn91aYW61Pu8lxZ79C8MHdfgMFwL2oAK6Noqab4EugI1Q2U\nS2m7/sOYFbGA2WeH0bYJXq/TdMhUz8eXeLCPH3g3X0efRy/I0hdjnOO+MvXz\n4uL52KP8SuAij1ZpZt+zzXCh3gRxZ4Ew/cetWykcIgtPjsfjg/e3zVrKWJMq\n9GLUbdv7qqbdd5ECHlqqO9vofFLpO7o70o0orJgCKTBgkEpIkBkdZryEO/tU\n1DPFNmTqdtXMpmUQnb1OIR5st6WR6DJ2k6XTt9s9H1QSaWivVKHomQ2lxfHE\n17ecttDwHExmbNwtLBhtVbdwDAbmHEYXZd1szO6FlPu3XmUOMJKQwZBYSyuz\nYRThWzc77RGbcOq3AaF4cP0eCdZtFvAIdrOTtfZ2dDcNp5FP5yMulip0f1xM\n+f2Qg8Gb8vkc0j8Oy/+0cEezDSdsH2tSNBOKTcvOcMItHAmhINeHW2+UNLtO\nI12jtL6VQTXs/DmBrP4HYFl944k5SXRM5ZvGHItwIdQm1uIfxImtmVPu94df\nBg3a\r\n=dYPR\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-6c2ef05.0_1591385823672_0.9818593476051796"},"_hasShrinkwrap":false},"21.0.0-2-f93a703-rc1":{"name":"eosjs","version":"21.0.0-2-f93a703-rc1","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"^7.10.2","@babel/plugin-transform-runtime":"^7.10.1","@babel/preset-env":"^7.10.2","@babel/preset-stage-1":"^7.8.3","@blockone/tslint-config-blockone":"^3.1.0","@types/jest":"^24.9.1","@types/node":"^11.15.14","@types/pako":"^1.0.1","cypress":"^3.8.3","eosjs-ecc":"^4.0.7","jest":"^25.5.4","jest-fetch-mock":"^2.1.2","json-loader":"^0.5.7","mocha":"^5.2.0","mochawesome":"^4.1.0","ts-jest":"^25.5.1","ts-loader":"^5.4.5","tslint":"^5.20.1","tslint-eslint-rules":"^5.4.0","typescript":"^3.9.5","webpack":"^4.43.0","webpack-cli":"^3.3.11"},"resolutions":{"minimist":"1.2.5"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"67bb49935984091e9e2ec72d76de2cc72d96a9a7","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.0-2-f93a703-rc1","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-y7Nf3D+j2wgpeT0Jz3DWZgxWxzhyDaci1G+5Vpa9XAK5aSLjJ1XlmusMcZUU17zntTk8eIphKixrYHrKgQNksg==","shasum":"670034044af90c56a3466b4e00d2ea51d744a222","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.0-2-f93a703-rc1.tgz","fileCount":58,"unpackedSize":384669,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe3oq6CRA9TVsSAnZWagAAIwgP/1wmoxZgctY3SoQP0Wpc\nlwLtc+WBMOR9CgNL/JcqEYH1FwbTb1O510aw0NF4nPpo3k3bGuEsuSXFRnTm\nRRIBZLIGyizeNHi4LQwdG1/yK43OiMdaY4b4i+ODbV/cK3b/ZwUtWSddp47z\nQzXTO9f7OkHuijmaCwcwJ19lKG6X1OO40k+MLDWydFp2SBIirlGg1m8Z8zeL\nVxVr7pfL9AvQwRtCO21ORGxTK5iC/ld6AXgAT8jVE0SIQY7aZv+JeNpH1kqx\nqm9Xj5SBACQSQyt3DLInMZwyApN942X8Cdz+JUzZh0nKgu2+Z/ybt3oekaw/\nyQIBJeeP5J2LxIJevSQY9pJw89RtNyVZz0BqJOTjOzDTRU7zrPXdtuofCT2J\nRj0av4mW8un6FUBu435CF5nOpJfU5XkwOQQTt09ptTQkFiTvepsFGQRDPycR\nmN3A5/BbWyiOGT/sohntXM3hrw+kkoGXL1i2PZhg9Dd1ZTCFSvG2p4MQMAjW\nHdH926BrBxCKONnV4j0cvDW9wZ5tx7wQ38u7yFogE3QP4NUsJUkjXpxB/1GH\nGaPeJW5JwdwKgf/s1BhOwtxZdKHS9hxL2HoqDmbdL/lDSalyOFNXVFUBxPTI\nYC1hUDJMN9hBi/9TVoMfL9sNsfGKluDDWxIqsHKxk8xYpSWxkJN8ygiY6B2E\nVepV\r\n=k3Zl\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"chris.allnutt@block.one","name":"chris-allnutt"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.0-2-f93a703-rc1_1591642809339_0.2651418044964766"},"_hasShrinkwrap":false},"21.0.1-3-e95c391":{"name":"eosjs","version":"21.0.1-3-e95c391","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"^7.10.2","@babel/plugin-transform-runtime":"^7.10.1","@babel/preset-env":"^7.10.2","@babel/preset-stage-1":"^7.8.3","@blockone/tslint-config-blockone":"^3.1.0","@types/jest":"^24.9.1","@types/node":"^11.15.15","@types/pako":"^1.0.1","cypress":"^3.8.3","eosjs-ecc":"^4.0.7","jest":"^25.5.4","jest-fetch-mock":"^2.1.2","json-loader":"^0.5.7","mocha":"^5.2.0","mochawesome":"^4.1.0","ts-jest":"^25.5.1","ts-loader":"^5.4.5","tslint":"^5.20.1","tslint-eslint-rules":"^5.4.0","typescript":"^3.9.5","webpack":"^4.43.0","webpack-cli":"^3.3.11"},"resolutions":{"minimist":"1.2.5"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"83a5b910d535a27d4e508d4d85c5f7f607c5803f","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.1-3-e95c391","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-wxlZyQ7qSskHk1tTdyaVvzzZQVKVH6XGnYYLaRwR22+imyeoAEbg79Yo6fnZ6Qtl6coBEWmV7b1cLlq+D1CiwA==","shasum":"3db779dc87910d384138ad5b4d93b3de5a006571","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.1-3-e95c391.tgz","fileCount":58,"unpackedSize":384665,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe3pWXCRA9TVsSAnZWagAAGeAP/3Gv5w2T5AOAgeGM31YV\nG1Qt19wfQMNfQb35dgCf6RioO5dnSW7u7DY3o4GmOwfw7qXOVSDyZLvHY17a\nCWoaDwWgioy20hrmT6ZPZVArI0kzXkGgezvhsMIArQdpQlI7iRf72yaTLq9H\nN3BehfhKNWKOTYvvayp2GYTK7SiirLk0JADj4dtSnedyjhrPbp/IgBx/0YJ5\nE6kun4TpTwSMLZPlfp9HraN9VI+RFDCvvLBjULDe3xcAC54ncDs5RE2EDnP3\nXoD3ekzwExf4s+17BEtG6W+1EyJWhPB8ZOEtEUlS141lnwqowBp32CBGirCT\n1mWLzhyiQO0NqHeuUV4rjg+0dD7r4FcTy6KZwKXF2Fyd8q+EFT44k9sq4lEf\ngTHSJnahm89tFGK4tIf1OEPcplV4nS4eTsNgiZ9qSwy1cizJfzVoKyKo5MhY\nZdbaSxTPX+WcCtUHp0EMzEKdz1d5+HqICH/Lkpg66bW5HJLWomHEzKEFYZt+\nGa1K71oLKk3aR/HwrO2lAL0LimSYxyWGu2Bhc8oE4v+pXaa+KlLUce+Wa6XP\nPsh1C911TGyn3Xqv6L/vHIYyzGPPyCqAvlMP5Iha8Yo0rH0KiNs3LHMF9ncq\nooGIls/y4/mkOzVbklofC7Clay3WQ3Y9AsMIbNAr89aeIxToYzjZ7Tv187y/\nX8Th\r\n=g8J1\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.1-3-e95c391_1591645590768_0.9390819254523965"},"_hasShrinkwrap":false},"21.0.1-4-edd9641":{"name":"eosjs","version":"21.0.1-4-edd9641","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"^7.10.2","@babel/plugin-transform-runtime":"^7.10.1","@babel/preset-env":"^7.10.2","@babel/preset-stage-1":"^7.8.3","@blockone/tslint-config-blockone":"^3.1.0","@types/jest":"^24.9.1","@types/node":"^11.15.15","@types/pako":"^1.0.1","cypress":"^3.8.3","eosjs-ecc":"^4.0.7","jest":"^25.5.4","jest-fetch-mock":"^2.1.2","json-loader":"^0.5.7","mocha":"^5.2.0","mochawesome":"^4.1.0","ts-jest":"^25.5.1","ts-loader":"^5.4.5","tslint":"^5.20.1","tslint-eslint-rules":"^5.4.0","typescript":"^3.9.5","webpack":"^4.43.0","webpack-cli":"^3.3.11"},"resolutions":{"minimist":"1.2.5"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"b7a679789227490bbb21dc88231a8b765cccd2da","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.1-4-edd9641","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-9rrRlJ3U+dPda1jnSEHO+F7UQmRXnCyo0zxing8IPL7Li+PUJVkZMJt+XJwCdi3jTZrWe8fHts9rTw788U7EWQ==","shasum":"5c76866baf45fb31de26a11a17fe944e82770abd","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.1-4-edd9641.tgz","fileCount":58,"unpackedSize":384665,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe3peuCRA9TVsSAnZWagAA/UUP/Aq1PQ1uhzDbhUm/AIZ/\n5JhrGQkkMS/DOr1mxK1tW/T9/M5tbvzSWy6skm4j/RdTHPCvbIrghLRIvnS0\nhTBaKEX35mNpOpgeb7W8eVungohlk9l51XHpV0klMF7ZdjAp/dXs1e2C6KsO\nrJeRA/Ba53xV8DQ2HxRoRe6gZFwY88mMH2DReMOQzpqz4j6c+4R0PQyvUpOe\nXo3dRcq8DOCrU6z/fsM0RBHH6bPqbqdvIWom0yulTbxz2V/DcL3Cl7c0xAXX\ncGz5ujd6Vjvqw15X2EqlFv99kMxuTm8IYXT/7MiZGr1k1ZDczMNK4KtI0oBX\nXLuR9TY4nJo4WtXBQzxny2SwuxeLqNsxwalvSatJUCyNqZ0PYe7SeLWs1iA8\n62REyaGHtgQi5YIF9thYT5RI2TnyyJmCOv44CDj22E5j7frkAxKckzjTSajk\nEQgSFyM/WnKU9ZMwxwYcWoFRiQLHI4x6nWVV/Z/5wA1Oo8rgG7Ti7vgX4CCI\n1rA9uPBnIHdgWF5lHKYbJqhuoQB49/L1hBXuY/t7Q03QKPbDam7l0f+gfGj6\n2OqJrypacc/l8/qogD9Vf1IkobJgFveu3rCOOIHGo5RWBsZO9hEFwTqWHsdp\nWh1td4j2BCTkF5ttJEowZIj/dq6Dubb1SHipsraTdxY8EJHSmmd3dHLnBPUF\nO2xb\r\n=hJrv\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.1-4-edd9641_1591646126444_0.48025926342977354"},"_hasShrinkwrap":false},"21.0.1-5-f0b92e8":{"name":"eosjs","version":"21.0.1-5-f0b92e8","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"^7.10.2","@babel/plugin-transform-runtime":"^7.10.1","@babel/preset-env":"^7.10.2","@babel/preset-stage-1":"^7.8.3","@blockone/tslint-config-blockone":"^3.1.0","@types/jest":"^24.9.1","@types/node":"^11.15.15","@types/pako":"^1.0.1","cypress":"^3.8.3","eosjs-ecc":"^4.0.7","jest":"^25.5.4","jest-fetch-mock":"^2.1.2","json-loader":"^0.5.7","mocha":"^5.2.0","mochawesome":"^4.1.0","ts-jest":"^25.5.1","ts-loader":"^5.4.5","tslint":"^5.20.1","tslint-eslint-rules":"^5.4.0","typescript":"^3.9.5","webpack":"^4.43.0","webpack-cli":"^3.3.11"},"resolutions":{"minimist":"1.2.5"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"e1f97a4c98b4d7ee5a71ce0b389c236e9bc1bab9","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.1-5-f0b92e8","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-UizJJDoaQ452Q/gi/o6wG/5i0cwRmkU3F8XdKFiHvDc+7yQ+xExE3epWN0cUlNNFd/VInrht6CEGFmUL3x6AAg==","shasum":"c6993e50d5affa393ac88c5cce977c48016de46c","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.1-5-f0b92e8.tgz","fileCount":58,"unpackedSize":384702,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe3pulCRA9TVsSAnZWagAAbrkP+wfhHKBggqiV75Cy68Fb\nkRIyT94idmeAJbZZeNQWyApnr7iTO9XpGfrVZdFzNlnXDkYE8EGoq/fmC7OA\n0dvil32e5GsnueB2Ymmjw5m8w0ckL19d8feuHcfHIrukUCZGayO2A28Fbarl\neaYeD6HafSRuY1ezryW/ag7fgk3J3XgpiMzB18PXgfR4I1t41seiTFlqzjMA\neqCa9wKMhOX4UC/uVdfRxEFoGrnNR9fyTrZnnYxY9FPF8BHRHRmoZA4NXlAX\nX1O/4KtAWuhlC9Y/MdekfrQBI0mvFuA7qesgtL69YoWYtb9YM0kuvF1hk8//\nkEJ+bIPjJpHzPgs6OgPnQEipBgLHRnXUZzs76XZWJO6irDl3s6qfT/Lnh9dM\nxd+WNZULmp9551zE6mDzeCU3EdZa9j185hiCYh1IRnMSt8iUclOnHKA91RmD\nTtj9CrJIgo21OmJaOjFs7hYPn7oSVxMCbmLoNBksnfTMP0OOOG9CLS7e2xcv\nXqb3c4H9hZPTFhoZ8PGQlm1DG+kwTki7vSgPMS649OVltnesT6JzrqVhxmSH\nQjByoH62qoFougCXbYaDWQ22XB8M4SUUoDga9HxyueH891l835VTpzw1vC3V\nSCrLTuByJbvdwp9VMXcJVlGrpmxao0Wpb1XpnbmxPGeR+i2zAeoQM40p6bvL\nThFi\r\n=cuMt\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.1-5-f0b92e8_1591647141245_0.28675879042076"},"_hasShrinkwrap":false},"21.0.1-6-5bba805":{"name":"eosjs","version":"21.0.1-6-5bba805","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"tslint -c tslint.json -p tsconfig.json","lint-fix":"tslint -c tslint.json -p tsconfig.json --fix","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"^7.10.2","@babel/plugin-transform-runtime":"^7.10.1","@babel/preset-env":"^7.10.2","@babel/preset-stage-1":"^7.8.3","@blockone/tslint-config-blockone":"^3.1.0","@types/jest":"^24.9.1","@types/node":"^11.15.15","@types/pako":"^1.0.1","cypress":"^3.8.3","eosjs-ecc":"^4.0.7","jest":"^25.5.4","jest-fetch-mock":"^2.1.2","json-loader":"^0.5.7","mocha":"^5.2.0","mochawesome":"^4.1.0","ts-jest":"^25.5.1","ts-loader":"^5.4.5","tslint":"^5.20.1","tslint-eslint-rules":"^5.4.0","typescript":"^3.9.5","webpack":"^4.43.0","webpack-cli":"^3.3.11"},"resolutions":{"minimist":"1.2.5"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"1fe48680c92d8c28386d65adccb6e457810cff89","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.1-6-5bba805","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-9T3ArxHtLhNPucJADKZpnmEFRFjE7e1gWoZ810vUPJ3SSSJ/js12JxWfeKl9cWlLBeN9Xvjqgbnm9adws0bu4A==","shasum":"679a9031d9f564c85f839c4d648453faa8af363e","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.1-6-5bba805.tgz","fileCount":58,"unpackedSize":385487,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe3p97CRA9TVsSAnZWagAA9RYP/2j2LHD1Zxbxg/4PniKo\nmz6PU672CNF8gswu/z3mrVZoNUjyx2e1e4bA8Mh/f4EPmBERNflKl9tEaR26\nxE6tg0A3BEQVUa/ufLF/6LNamnSoOmwhV+4MP0vtywkuaevja88T2gOzzekC\nz+q5Pk+zYd3kEm8aos8ekEgbJXpw+l4xa9i61ryBX27N3a3hbK/KTtyU2MwK\nkc+fmnSYDfPyppytkxexEY5f42R8/++kNPuJHT2mvuG2yqZgNt1ViUx1KrA2\narEO5++jIygjSQrx2oYBpVfR8oMOo75ztzDPQ3v6bTXJ9t8LAyNP0UFmyO1B\ndVzAvnvuITvkm472ts2YMmyhltPSGmnLrk1O5OvAydg4cNSBHEoCUfAdh5Ja\nqZcjZrlEFzoni32kHF1MHN/iQ7wZRSBXNngxW12DbimLu792l3AeAKBE56Pm\nzTK23s1HLe/04qzU6EbuqAj+iXxDe6WuUjVOYctQbkxsvyIFIlFf8rOp1sAt\nuy+ZEkaT4M8ol2cDhqtS7Vd+ACCyfJDLt4bE2zPm1NnBqZ1lSYr9dyUnykS6\nuGKd6ajMZOKFRs1NIDLD2R+WKCwqEVboTXVTet8fG4NGhR8Er/JKInqHVn4b\nzOEhcyM43d7G65fNM9+yKbKXG8kJQX+WAcFlNwEB1mTYKRdOQqNW8afyt/ez\nKQY5\r\n=NBHU\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.1-6-5bba805_1591648123434_0.659940792126738"},"_hasShrinkwrap":false},"21.0.1-7-52bdc54":{"name":"eosjs","version":"21.0.1-7-52bdc54","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"./scripts/run-cypress.sh","cypress-ui":"./scripts/run-cypress.sh ui","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","clean":"rm -rf dist","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"@babel/runtime":"7.8.3","@types/elliptic":"6.4.10","elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@babel/core":"^7.10.2","@babel/plugin-transform-runtime":"^7.10.1","@babel/preset-env":"^7.10.2","@babel/preset-stage-1":"^7.8.3","@blockone/eslint-config-blockone":"3.0.0","@types/jest":"^24.9.1","@types/node":"^11.15.15","@types/pako":"^1.0.1","cypress":"^3.8.3","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^25.5.4","jest-fetch-mock":"^2.1.2","json-loader":"^0.5.7","mocha":"^5.2.0","mochawesome":"^4.1.0","ts-jest":"^25.5.1","ts-loader":"^5.4.5","typescript":"^3.9.5","webpack":"^4.43.0","webpack-cli":"^3.3.11"},"resolutions":{"minimist":"1.2.5"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"249485ffed1a4365ed4b91ae378a05fae06bcb27","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.1-7-52bdc54","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-FSsXaTgzmn1F+nEUC3N7FCIKztcrWe0c4fBiHt4Qfu7CNEyrsphVeFcImJjRUIIylPmTisJBA/NnRaozmclDvQ==","shasum":"13e490fcaf8e268c0308390451bb12413514909b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.1-7-52bdc54.tgz","fileCount":58,"unpackedSize":387226,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe3w9vCRA9TVsSAnZWagAAdX8P/2a1jZTN106R68A//S5X\n2HXvj3ZZKylHqIXN/Af5SCj8yPTb8NsKn1Cf5mPkSYsiVRVBz1qJzx6okNwA\nZRH/jDT/9Plr+MwjM3jF4QGN20i+oPdk5WYefO0qcVn3WyxSYTOCvWr7Z7Sz\njfdktOcDIpber/e8ZNla5YVYbIcbb/CH2PkIFaY8R87NYg98845I2bEqrC3o\nsg+7CZYrAM2xYAvkqM+wdD24u2GELeE7iR7sj+voDss3JMsAMFfSfK4zyfg1\nWQ+Fla52O3BA2VW1zAwPgN+0U6VUxl6F1H4sxBqa/5CtuLUnck1CK1h/7ED9\nX8Ozn66zNihGX6rZ0nw3Cz2w+k4A2MONznVU6UnM93jArT7+WPOIFXeWipFd\nVckgGJDcYMQH5pQwHCVi3NLxw8rELKSbUNzTl+PrUQ6u9LWuMURWpx3VmhrV\nNLkuPLwKVyfHUsUaYPDFTQz+zb/BoOSG+jU1QNnuTvnm0o6shOLyWqeDBLut\nAsYriZTQb6gxxPz//PAig0aQcZWNo+R4AT0tqBAe9AIsGvUlDX56A6tAOhTd\n1ap4z4FPV3lwAjqCsBBQP/HQSvCrOAD6XbZ3hI5TOMj4E5xjhZ5GqBbf9wOd\nyL6mJJT9wbN95s34x+voGj1e4uBQ7BhaPna36RgE/25InnwnZWkzjz/WoCMG\nApJP\r\n=SIg8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.1-7-52bdc54_1591676782622_0.16520286356980773"},"_hasShrinkwrap":false},"21.0.1-8-f252e2a":{"name":"eosjs","version":"21.0.1-8-f252e2a","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^25.2.3","@types/node":"^14.0.12","@types/pako":"^1.0.1","cypress":"^4.8.0","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.0.1","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.0","ts-loader":"^7.0.5","typescript":"^3.9.5","webpack":"^4.43.0","webpack-cli":"^3.3.11"},"resolutions":{"minimist":"1.2.5"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://travis-ci.org/EOSIO/eosjs.svg?branch=master)](https://travis-ci.org/EOSIO/eosjs)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"e046d0ff606971376f39c8d91d1e000133000e94","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.1-8-f252e2a","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-Db1KgyHzlyB9x2lMZVGUh9fGwjy4aDqrE0RM1irz2fGqQUhX+DzL46xrxdA6Jgz69sQF6Vhta3VJ6FNH+sjGCQ==","shasum":"674f6abb00463301f23cc440439ee3c01a7c577b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.1-8-f252e2a.tgz","fileCount":58,"unpackedSize":386981,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe3xdTCRA9TVsSAnZWagAAwq4QAJ20o2i5iDYCRjo2dHws\nwg9qmwTO4HiKshDlWJCYHbN7a59UTun2xnY30naQ+xj4yCpFQpULUb50IjhS\nAh1H0zz6Wsv5xGLNxjbwD8yrfLdNZOqoT7/a1Umwom7XDkCPlWetZ6q8hcX+\nV4gAisRwS+gBIXTZyqXIIyW7pKuXwTQt9iygQQjq2NMqj5pcTyLMiV0+eB/g\nPW7XkjNgT1Y7MInDtpfDrYniSZbm7yRJ0G/ZZZyMX+3V1hVPv42lUXgtex8i\n4xpMQPKlN5fAHmBd0nyMh/6kFxqLfEpvf1+Fzs503FphYMLL9s+Wjrqf494X\nWKC1XZE/AvEbvs+sK7vK+M5q+WS7QlExfYwpNnwIREkfKD7fw0bEWWMonGmM\nytZEh3DlU3YzXetSU0aiQUacD3UDUur2CI13PPghDFCXEdAsrud+SI3m+QgL\n927SGu5HPF1D1waLjarE1cY+Pnf08MUwUOi2/AekFG7uE04UcB7fWxbmY0o3\n+U6UDCzHb9hPptGrxmI6HppukOBgw/Zmo3GYs7TUEP/N9XDdPkGXczN4EyZE\ndcFwinQ5zjrKkd0N3f0C+d46F/38yfOQMTUopmzTm7khzX7CkESFzemBGGfH\nk5kOOo8CiV1J6PLIVe16oPSOp7rl624fRYzCVuS6S0pnPgRxAsifBxM67UlC\nZB6G\r\n=m8st\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.1-8-f252e2a_1591678803323_0.5890211062124198"},"_hasShrinkwrap":false},"21.0.1-9-c4814f3":{"name":"eosjs","version":"21.0.1-9-c4814f3","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^25.2.3","@types/node":"^14.0.13","@types/pako":"^1.0.1","cypress":"^4.8.0","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.0.1","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.0","ts-loader":"^7.0.5","typescript":"^3.9.5","webpack":"^4.43.0","webpack-cli":"^3.3.11"},"resolutions":{"minimist":"1.2.5"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"05286312b3d6e90986746ec82ef96fba3efea645","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.1-9-c4814f3","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-2dWquypbaY13doYzYR/3+xyOkYNz47ODduKaYJjSYMtu2gfJ2SYsL5AUg2kgIucZ1MkRXPKIPS6p7USofPRRtw==","shasum":"ae9cdfa92e1ead4c2a36a53a8efbc644c2375e53","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.1-9-c4814f3.tgz","fileCount":58,"unpackedSize":387002,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe4+PKCRA9TVsSAnZWagAA5H4P+wXCL/fMEh/xoTCGCn1A\nik6CtsiczPRY4h+ETjHtn6g6wbh/9Kt7aq8Q0/S0CxclgXCsQlr0UqfjomOE\ni768tn33wu5+EfxjHJhYpUDmor5c71uonOg9AjHkQ1l6HWoaeLLDoSadObwU\nnc6exXRYRVx0qhPl6dO+LKV5C5TpA2K2xBdfPt3i/3aOIwfk5RvCnaCP1K1R\nvBsxPtKSYp8XmHCahU0POKide7NnBd6MzGXHs2WY03WUIfKvXFjzdFyKOWGS\ncZ6Iay3kIbx2qTRcI0hb9sAHXGmwLf9MbgAkLufn0fzk1elnh5GT6TtVPtpo\nk+d0iaoInSSKXRfuqzUn+xG0PeDvm7GawV3q9l7+gbfx41z1e2e5BIJOVkSy\nSFDr6BKaIStD2WC5Dbf8gvxw3X9seM0t4D9QJxVQwJlC+b2fL3dJE9V+COX8\n/R9WexUbmbXwaYjzBaD1oJvaKa95YVFUeaYBPLq1JYdY30jVfwn7x8q4WJdk\nIGdwy0eld36y0Y/zX9iT48ewN04XPfo/WguIj+Ec4C2eoWr+PAitTd5Bs9Q8\n9Uw0W/jb63Rqah9AWGuRlo/4UqKAS5i6rq6/vKEYSSfIF7V3PYUaAhlpLzIY\nTHgTxatohZeXP4GzcoiD17KrCdKQjJqbynRwvmo+Q0/XCBb+oDHvUn4fZIml\nmS/6\r\n=yvG9\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.1-9-c4814f3_1591993290003_0.5356121373344047"},"_hasShrinkwrap":false},"21.0.1-rc3":{"name":"eosjs","version":"21.0.1-rc3","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"elliptic":"6.5.2","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.0","@types/node":"^14.0.13","@types/pako":"^1.0.1","cypress":"^4.8.0","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.0.1","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.0","ts-loader":"^7.0.5","typescript":"^3.9.5","webpack":"^4.43.0","webpack-cli":"^3.3.11"},"resolutions":{"minimist":"1.2.5"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"301c09181f88f489e3b03d00070035be34a583d0","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.1-rc3","_nodeVersion":"14.4.0","_npmVersion":"6.14.4","dist":{"integrity":"sha512-2Sjvm0o5S/5hW2Re3OL1PMoJ8GeBBVz6W6y7bJQXm+VVYs+6JyypxogpmB6frwAt7ipIWfuxuOUWocJn0+5NDQ==","shasum":"0da57f4dfec2ad04b4c601863b2bbbec21f3e913","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.1-rc3.tgz","fileCount":55,"unpackedSize":323870,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe6TrrCRA9TVsSAnZWagAAEXQP/1CMBLYWRAwy0WNeMA9R\noVqCEmevlEpPwAtbJUNXxS31MYWLXVjPUkgVFgxOdGclImX3XHFT/HzPiyMG\nsmJLDRRoh+hhVHIgBeX6HYTg9LETU/8h6cRVRjG3MAJwCiQwvp1CUOHgoUpD\n6CGlFNuvejxJ6AUMq5leykTANZf5KFJwSCx8b96cfSFgaHl+xUjoh47wKRAA\nERGjUOOU5UPkk0sIYNmSVA5pxFCnyoPBppitqVS1iAgUS+SQLcUY1JPOXvWI\noqkclWEEJrvtx5woiGBPP3LIIVGMKRtutC5ZWLscjRL7sugAzkGsaVpY6zSH\nUOoVWp/NtK6fCbOauIcICu4XMZmWQh6yEsTgCRpdBezcFufeNZE4qyneaLU8\n6rYgp+MFlQAWIW4N+AQNsaOLz0c4fCbZJ5bqByR2YiLn6PMrjmLMxEvrRfGY\n4tx37khrHK4Z7Wwv8coV5sLou7eGgnOV1/YyThAFe/C5i2zhFydHOp1ul8y5\nASbMycwrNAHFZf8mDGZ5qm39AWqLgn+/gzK2onVaOymheDJx6uTXAAnITp/G\nyqp/aYYZY2hvZ+QGa5rgdYG4tU0Q8INTMowR1WPckpy5ZDi/+F3rZFlZ33+d\nN2oVtpVjgCzADDCBYItb52FYnYgnp3owCP40kLGmyFP9zZHNB5LZRsnJhvh+\nAsth\r\n=Ob6t\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"jeffreyssmith2nd","email":"jeffreyssmith2nd@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.1-rc3_1592343274767_0.4537132541683506"},"_hasShrinkwrap":false},"21.0.1-10-275c3bb":{"name":"eosjs","version":"21.0.1-10-275c3bb","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^25.2.3","@types/node":"^14.0.14","@types/pako":"^1.0.1","cypress":"^4.9.0","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.1.0","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.1","ts-loader":"^7.0.5","typescript":"^3.9.5","webpack":"^4.43.0","webpack-cli":"^3.3.12"},"resolutions":{"minimist":"1.2.5"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"72572572bce657622fedc6181fdbb9711033655b","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.1-10-275c3bb","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-2EAEgdlKxp7Z3+VXM0V/sWc5O9vkZoLTKo5g1JL39YatFBuzh3m/Ai9bDfLPZqLsU3YH5l5v8OPZmXFY3i7Nvw==","shasum":"610fc9228416a0ea7425d1f4fc894f63103421b5","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.1-10-275c3bb.tgz","fileCount":58,"unpackedSize":387003,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe83lCCRA9TVsSAnZWagAAws4P/inxIp8Vw7ualJ//95+y\nWIVExJ6PMuTO/BN5ypTBaWi35p1biWS2REuMWtBxDDbWIbiLWKpE2IM16nyK\n24h/+I3bLQcuGlp68QtVTEQMhtm7E7bzpBh/F5fF826mwJ9BAD4c+/kisB+K\n0uiL+pocNIn9QS5/vNuQEz1w9vd2DQipmpk9j8iofbQsN7TdGtRefqeJEmPR\nYIMw8hKrQWHFKry1tMPCGXEutg+upTYnFvu0f9JbjGv35iJ11X9qt9SX0IbK\ntOW9TXSK+JA61vbzEGkzXcMOZt/TCDgYO6eBRUL2TIkwsbZvTFD7tiftevoH\n6WnEFVFtEtHE9Mvm2Bsa+lIe+YoyIxiBNIViF1Oof5FqJfXE2GE582dcBoiC\nQHInSJUcnEieWWJR8Sx8B26EbmULLsRx9CC9C1OEnaCP2XUzZc8Ce4ZsINMF\nrxJODVeUg2ornNS5O3Z/9aTUxWBfQoSbJhbd4noxl6SskSMnYZuBRTu/os4X\n9F5+lFdzLzhW0JKmNmvxQ6zewqf8zHAyAeon952LcpsyeChy3hw8IsWN6+qU\n0C6gYizvduYNDm28GVvs31aSg+Ijap6Ingnti6+Vk6JyuCljsdBf5yvXHBWN\nguj/bipQErDN2cdPoBgZBZo8JHzAR3Ii5M/cxyuEvVQiU+vOdlO1fpgPo3Kj\nW+iT\r\n=N6bl\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.1-10-275c3bb_1593014593522_0.20188263648513827"},"_hasShrinkwrap":false},"21.0.2-rc3":{"name":"eosjs","version":"21.0.2-rc3","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && cp src/ripemd.es5.js dist/ripemd.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.2","@types/node":"^14.0.14","@types/pako":"^1.0.1","cypress":"^4.9.0","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.1.0","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.1","ts-loader":"^7.0.5","typescript":"^3.9.5","webpack":"^4.43.0","webpack-cli":"^3.3.12"},"resolutions":{"minimist":"1.2.5"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### NodeJS Dependency\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ES6 module syntax in the browser is supported if you have a transpiler, such as Babel.\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by NodeJS out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on NodeJS.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"dc83e5103740d5ebaec9bd8228753d56661612a4","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.2-rc3","_nodeVersion":"14.4.0","_npmVersion":"6.14.4","dist":{"integrity":"sha512-i6VvjZO6sV487s9JPh7ldjk5jRgPcH3tr7aSYDrdfr82uJb6sBn6oDv5nj2GIElHBXLAz5B1Tr838/3BVW1c4w==","shasum":"8654992c875512fcf36d74ab5da40f931ed51958","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.2-rc3.tgz","fileCount":55,"unpackedSize":323870,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe85rsCRA9TVsSAnZWagAAHloP/32m74bbJ+O3NgZ3H1xI\nBX8x32JvV4GUlt6B5UrMKeV9v6k40Dv833+urwD4oGfu/pD6zrxwHNB4on+6\n7az4OhjPGr0HbeWWHbBP9kodi0wmBG/ydE8+JCli7RhkqFuNceNxvM4+NQRF\n850lCEPMasLYUVJS/WCb8wHmIJRGjGZC6KsTv/JMi7hiQ4FBR5qXJYOty0TK\napCikJrybmmVweaMb8CVDXmVFEoD0JzLI+7GVrPvhSjjwNnsadEgkxBrXuyr\noJ0ERUlFn8UH2ATJukJCSJ1H7Zh+OvQ3jdT6xgnQ7eh77NTww9xWw5jBASNT\nrXpqqxOOgnpxixV5NEPj7tzrc3OHCeiLwbmn6VSSDeZ4okGCtTkFkRPWSc9S\nwSa/z8RdFws1pABb2+GxArvL9LvBem+SJnzL0QSXFraPbXkVjo7Nf7E50ZZ8\nyhKJrRt2KLfZyiHoD6GyKWYOnZ47kCCNzgeTvOWr2PkaEI3BhsUACW4RBmez\nEsbbDUkSpfaO7v5Mvpmk9comedbk2KdldSumiF9MZ5Kgg6D4yY2mbCRN35/A\nWaaryj/OqE2WOvWyIZUXS6xU9GXCxoGUyOdt6WdBOdiM246cjeEFzPwLQK7u\nDKwXEHYBufCUgDTvR8V3o+7DlVrCL9mEtGjSRNGX88hVubB9F6lsBkFEMuTH\n2yRD\r\n=MB3U\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"jeffreyssmith2nd","email":"jeffreyssmith2nd@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.2-rc3_1593023211779_0.4046674402781232"},"_hasShrinkwrap":false},"21.0.2":{"name":"eosjs","version":"21.0.2","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.4","@types/node":"^14.0.23","@types/pako":"^1.0.1","cypress":"^4.10.0","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.1.0","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.2","ts-loader":"^7.0.5","typescript":"^3.9.6","webpack":"^4.43.0","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"94dab921c23f398cb38c2f79d4f80ed845d8a307","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.2","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-oRrjfzS6An825IupBGKnn9UXqVUSEpjKw5xH17OYtrlOoJdlDN97yuDITSTVOqBeryIBxHvss59FFgnx4c+YEg==","shasum":"e2e675e13515f8a4b9947e968737452b1146fdfc","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.2.tgz","fileCount":55,"unpackedSize":323966,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfDhZNCRA9TVsSAnZWagAAKqAP/AvR/ge3v8isnhEdFtON\nk7FdrrHQOSDJGbjSNWsXCGAuTL4mU7sW1CwFvPXHxT0Ggj097PvxYrmiSRg7\nCZO3iQIOvyxcZ0BKq242003XUDALN2kN+8jMs5ocI7JPCJgvCJi75mBjC0LW\nkFWHvKNmVKcX4e4Z45jsLwYn9bGgSaZ+1T8hZ3nNQoMXYVVlKD1GtFL1QYG5\n+nzsT6g0TbIeOhobA88j057fRHLomMBVvDr7H1uXua7YeAxoj1R7vsaNkDPG\nRokOHGiEZMLqBkoqHzyP6SlH2Ag9NrnzSoMBxvRsHRpslJy5hPwURqECZ4wX\n1VQZDoE1q5MfA0T9aVP7XmFpM2Hk/ZppmrAvrX0fm/IKkX91vfdwZEO4xTfP\nv/fN1DSeoZFCh6sHGRq99dtcpfUddQvEFu9fAUJGPQVDvFcNWn91Tnv865/g\nXuVlV0poJPdnZAlsoZTWA1SfvOdejtHGIVMTG09xPCWIekVf5SWOx0tCa+2Q\nx6hftyLfsOpFT0ds8pQo7A0EKAQ4r0ffm0Ld5vdmHARVfDhZv69QNr/Wkh2H\nsdltkRfXQY92MQsLMYjRJZw5WfVLMU5d49UlC83hKax3ceLnRPPyV2fVxL1W\n4mzbAn4oUs1GzDBPnGWE+DTC5sGgR7SGWc6zg1C6Baa9vLrpsC4umKFRJG80\ntYSP\r\n=ZeER\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.2_1594758732709_0.9014957144057247"},"_hasShrinkwrap":false},"21.0.3-11-6da6936":{"name":"eosjs","version":"21.0.3-11-6da6936","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.4","@types/node":"^14.0.23","@types/pako":"^1.0.1","cypress":"^4.10.0","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.1.0","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.2","ts-loader":"^7.0.5","typescript":"^3.9.6","webpack":"^4.43.0","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### Add dependency to your project\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ESM syntax is supported using TypeScript, [webpack](https://webpack.js.org/api/module-methods), or  [Node.js with `--experimental-modules` flag](https://nodejs.org/api/esm.html)\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by Node.js out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on Node.js.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"412e8a0541f359a5a4bc7467632b9f4619db8201","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.3-11-6da6936","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-64/G2XYrSxbjVsqbcjKGDB129LV+4q+CjoLFiEB0+L0ZbZ+M1FxY/R/vsY83yQfoS3X12tcd4OxcsKtV280u1A==","shasum":"07dcb22ae1f15257410bc2b62e5dd9504dbae88b","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.3-11-6da6936.tgz","fileCount":58,"unpackedSize":387103,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfD1klCRA9TVsSAnZWagAAITwQAISJae9k/bMDT52Ue41J\nkurEj6fEDlJlhBLzXDGXH5x7IjbV31U5QtiGZEzAlki1NVR0Sm8uCRaaj4a6\nWYQGD1qWmVnUad+Pzwjmr43ebfHbGoGFF36EATyh2l0MOyqwa7CermZlG++3\nhdXis0eHBJFg2Lcnu3Ykd/Q5U4l/N/4XuFJhxQ6AwA2e/nZ1LJIKtswZdhNz\npzoC/2LspxO5lJNx9Gwi3v4d8X8G0evZsAZF0oh65S0nypeZjfjjoYtR8hGG\ntMhL/uFGjpxRM2ZVRZV8uVcN0sIsIdpo5Xzi6/QLIVEOuyw0U/92yUa4OCBF\n64nethM4XHoHNqGwjQ/2MECoSrKBdrNchHgpYeejR6Awh80r0+xMqUeJWSIf\nTX6t8V2vytEtPcZPYIc/juHKS6Bfh6I4rHq2Xo7Ql0PZGpcc5pMELgXksUsZ\nlK4YObL071njveVNmU1NjonAoMaG0lo7kPUCd1Qel4owlmQkRtQHttlg8Ywh\nxi1F779O64ShfC5z0nLmqJy1i0JmRAADBhf0GIS64h3TAx2sb+0Wq69KX6nE\nyKndcWL51XesA/Tk7H/ZQTeBKdZQCGdtvlValva2AB4LotbF33YBwm0vABiL\n6F8AvDSS8Tb9TY438sUXFvecEGuFqD1U2bBDpR8Rwtkhd+9jzp9BwjVRvD93\n/reR\r\n=LXrl\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.3-11-6da6936_1594841380830_0.8953845085030312"},"_hasShrinkwrap":false},"21.0.3-12-8c17f52":{"name":"eosjs","version":"21.0.3-12-8c17f52","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.4","@types/node":"^14.0.23","@types/pako":"^1.0.1","cypress":"^4.10.0","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.1.0","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.2","ts-loader":"^7.0.5","typescript":"^3.9.6","webpack":"^4.43.0","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### Add dependency to your project\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ESM syntax is supported using TypeScript, [webpack](https://webpack.js.org/api/module-methods), or  [Node.js with `--experimental-modules` flag](https://nodejs.org/api/esm.html)\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by Node.js out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on Node.js.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"5af89ed94eb7854bb9668b8ddbe9b62ed785b230","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.3-12-8c17f52","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-xauWFWgcQNF4OqRY7NkStRkHGGzZJy6vOjAR2RA3hVGPLLLoHOiZbr/KZ8PN6+Rcf8Yh+PKeXb+9+ERMxRdaFA==","shasum":"643097903f70aeccffdf88668a5df4f25f3968d9","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.3-12-8c17f52.tgz","fileCount":58,"unpackedSize":386828,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfD2BECRA9TVsSAnZWagAAjA4P/2lJR3mU7+7zq9H7rokJ\nqCKZraCmXzM5vyzw7A/J7SZEBEsZD5QKrWRZOVvrMB5wWSVtUQDyOE9FsIAQ\nR6Bx60hTeGINJucVHQDiWPgJSEnuS6oxCa3Q4IYYAZS6GkawI22jrUePi1fM\niOGmrQumRm5UUVBXaG8KfFfEfGNfwFBoBHP6hQNFiWZ2lcIM3YMBT0afNch/\nXlQgJawMgQAMdMr4riSWRkubi/pfFoTOAkCf03TMjJFx5iK1kHOSPbz23ZdJ\nKVVjR4BrjkOQa3O/2stBWbZJa4/ypveWNOvcwHv6nVOLoQt/0wnU8coqtQw6\n7cm8f9zUpxHO5oiEaMUlEpocxb/dUiryGpGk7mja9qVH0+lQ7CslAPTZ+Ih0\nGdupv1MyHuWSMCjPDhLbbCBtxG/MzZnBgCfdgvzavuytnSIpLln5NZBk4smn\nrWujGX6rg/CSYaiVvA3+8f6bf39rjFDwvgRhLCnPcCcj4+QUiyH/dGO1Vggk\njPpnOkzyLiDrTp3XF+HojrbxSptF5zIHjztHatc+yUhVVG4VbJ8FlawgJV4G\nDj0R5+6dr+bA4OgzV4zsnPROUKmxaOurPN2mI7J3sLDhpD+u4lQOqzuJTtLd\n7Rr12rhlzEa6qIJVk8RCtQYBxyKuAsrgTBaNisvRvv4JKn1d3THqFaT1G049\nkwMg\r\n=NlV9\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.3-12-8c17f52_1594843204316_0.07252103674837262"},"_hasShrinkwrap":false},"21.0.3-14-3d0b936":{"name":"eosjs","version":"21.0.3-14-3d0b936","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"bn.js":"5.1.2","elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.6","@types/node":"^14.0.24","@types/pako":"^1.0.1","cypress":"^4.11.0","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.1.0","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.3","ts-loader":"^7.0.5","typescript":"^3.9.7","webpack":"^4.43.0","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### Add dependency to your project\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ESM syntax is supported using TypeScript, [webpack](https://webpack.js.org/api/module-methods), or  [Node.js with `--experimental-modules` flag](https://nodejs.org/api/esm.html)\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by Node.js out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on Node.js.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"9af172343b9c149b0bcd4c9199c9b64ee8acc605","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.3-14-3d0b936","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-78xl+Yvb9axrL7b/g5/M7ArFdZaQBtqF1O0wxj9rwV7C6+2GNEmAwfuF1A/jnLiJ5tle0MRFa2S0gLCvzjVwQg==","shasum":"df7f159f610a6acbb4db24440f91f7994e111f6a","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.3-14-3d0b936.tgz","fileCount":58,"unpackedSize":386850,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfGuqDCRA9TVsSAnZWagAAFz8P/3f29qZFSV45svdwf5hP\nm/jMEmc2hgqdx40h7Jo2Rjc5qRm5VB7EhnvLvzToeGT/OZ7ZveAGNlVEUrZA\nrjFYUsQb0LQSOFcHgcuH2F34RaSGL8G/3fE0fDIoiMAVygZcIuf1Ka40EwQx\nqydYIIkBA9iYaSrGlSzFKRE/4AWrHOKWcr8gaiGCwxm43kq/H/7RK2qT/Fmv\nPF0G6OUGTprqhVmuEWazo1bOasd1WeV/IdhbD1rSeiRRtX8/m8wgRgJbLX/b\naZwE8COYD0rOKFaoOj2CmbLPNHna4dzS6ZaOFl2tJBIO0uAdaHptVVfVn6k+\nQfrnZMvV8nyL9N2vzasTkBtexB90gy08rWQJgJsH/SS9l7ds6qBZiV9TVKBF\nQQ3wxVY1FF7vmlRfAkt8zDENUeueGQBeT3gErXmoOCJyHp3G4z2mTQqfyt8f\nWaZaFi+E8tbYvsQH79Kn9XVOc+UmQ0P7ZWnedhIzmsgSIMcpQTA+T4YvAm+2\nsK9KnVY9PykWNRPlo3xW81kw2kc3fbZPMsBFa5QrmZUetu2inYbPUVIWdd7g\nYH7qceeaS/dGsprRLeQYWhkJjRsYbOFhRVdkRqNE21kA9hHNambrUnf1rdl/\ns0rW1WD7cDV6qhbHy2fb3tNZOnXDRc1E2xzuN20dtRPweyqRo9rMWm6veU08\nFbaa\r\n=+hdb\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.3-14-3d0b936_1595599490580_0.29642781857695644"},"_hasShrinkwrap":false},"21.0.3-15-12c1d1e":{"name":"eosjs","version":"21.0.3-15-12c1d1e","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"bn.js":"5.1.2","elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.7","@types/node":"^14.0.26","@types/pako":"^1.0.1","cypress":"^4.11.0","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.1.0","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.3","ts-loader":"^7.0.5","typescript":"^3.9.7","webpack":"^4.44.0","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### Add dependency to your project\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ESM syntax is supported using TypeScript, [webpack](https://webpack.js.org/api/module-methods), or  [Node.js with `--experimental-modules` flag](https://nodejs.org/api/esm.html)\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by Node.js out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on Node.js.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"cb0fa6d2c3e4dd2e25c2e226981507ff2402b3f4","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.3-15-12c1d1e","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-3M3mIW/4iigxNfnVuI2awMQNyvUKjSgynEh4iCLtiWZaVYSQ/iFmpB4j/jDBFVmofS4n1HhbrHG9eM3ucFP7tQ==","shasum":"c658da1359eae161b9498e62b48f59690bc8d3fb","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.3-15-12c1d1e.tgz","fileCount":58,"unpackedSize":386850,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfHxonCRA9TVsSAnZWagAAEZEP/24IsaFvLBClLGaUxJcN\n190wvsxDIWBkUKCQjwNdwJ+NVuHjrEYEhLANeYJUY3AV4KRKllcXKnwP/suT\njYPXWNioZKvt4VMVWEOQZWfIdhdpv5YQFSsbT2rTwfy4hfVfjQV2i1eK0/ih\niVlQ/CNuRRr5F6Tc9OCLxrLDwFefY/UX79UHd9ygqmibl7n+rl6CLVnocx2h\nrGbcZR4LfkPaeOyksF+x80egQ/WkxHbTp/JGtIxkFZMMNeDoTw35eqo4x69c\npJ9izBkTr8mSELlr7b20qhlB0jzx2gC+KGQSwweetAVu2tORSY7kSUPXwId6\nTEQKq/q7+oNa4+HCwmrYhUsCPJis0FIGvWIgfik3yIFDh420qvVGhAS9vn+0\nPRFgEeFV1QepvUVwwXT6IWwYtCRjPGTA9oR049zJhr04zecB6w6VT9huv4kP\nXs3eaoUIIoOs8Bea9Cw8BBr8P0l0omLoErwMBdTSU+STKF6aNf4fZMsKdhpA\npRNhh1gzAJ9POK3eGMyuoT5V3UIaqil3kypraiUtywlCAK0qXE/o2DyJLVs1\n7V3DC+KLc3XZBMxeoLL5m0ESq23Vqcgo+cY8Jy+U8o5SWXtBAP2T7VPW+b15\nqoC1dEWmCt9RCRarblZeysjawmr1WRGaAjScgBdJ1jpsaLHZKJ6gwk9lqhNn\nkrWH\r\n=BOud\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.3-15-12c1d1e_1595873830416_0.3210431401811915"},"_hasShrinkwrap":false},"21.0.3-16-61a8bdf":{"name":"eosjs","version":"21.0.3-16-61a8bdf","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"bn.js":"5.1.2","elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.7","@types/node":"^14.0.26","@types/pako":"^1.0.1","cypress":"^4.11.0","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.1.0","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.4","ts-loader":"^7.0.5","typescript":"^3.9.7","webpack":"^4.44.0","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### Add dependency to your project\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ESM syntax is supported using TypeScript, [webpack](https://webpack.js.org/api/module-methods), or  [Node.js with `--experimental-modules` flag](https://nodejs.org/api/esm.html)\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by Node.js out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on Node.js.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"f4efa982c34b07c96ee6bb7abb6d3474f45a40fd","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.3-16-61a8bdf","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-bMJ+f5tZjNLQtyTPbK07iFIcsxODYKUirigs/SY9upYGAJIChEbIKmH3mQPaOmSq/WecLpq+XHIPMwfD/oys7w==","shasum":"162db3bbe6c454519a7900c347de9d2a9d316d05","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.3-16-61a8bdf.tgz","fileCount":58,"unpackedSize":387326,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfID21CRA9TVsSAnZWagAA2gwP/1N4kaIUxM1gBqUCGwZi\n7VlcMyGU9MtjR6pXuBQi2gubaKijARhvvlzsQC3heRfVkdTGEPs1Efk0het1\ngeBX+xZEwhHX50Y92ZTs+knEWcg5/8xhi9W4s0SwA6MysjUZPAPXl3hX2KxD\nzLdUfYWzqMQnMIoS1/qDbZoxXKue0kbgssHz6xPyR76n8QyPWNLw4JNcUly5\nK/V5aXei+v1e3nUnUC3G23TGvvJKSzFWeKNsW3pUcY5BzwNrnE3QhDQ6qWbu\nuSV8m7Myw5dJEm0cwQxtKZdpWlLDuPuiYrRi68h4OOMjmh2fdEbvnyt8+J2U\n+0HgLv4GrpDqxC1YJCizJ0FgwKRgz+ONoxrlCt5u5EFIp3QEg+sWEgEYZi/M\n1JE6arq9sdmVk//DQ6BwNBg0dtBGfSJ41hssDQ1sNEx3mPSk/eP7IpZ/ZNLO\nqnkhxTsUFIrEzkONlbtnEUCxsDgazikVtT9wfvwZ7SzGI87WRq1Rhfo4S1bZ\nzGv8D4eCrhVpgvKo/9EnGU+uMHC7LIDi/wkaHpyIfg0+Kceh3ElckvE3yUgG\n79jotDNLadi4p8Q+kE45YTRW4WW+tH6D7P0q1v0BK8WHqGc5J8Go2aaT2Ddd\nnmlBUrlIimUAmzrCPTzlR4SWdvyUXRxbFpPcUcREGFmt2+tl8n6L7XZWJQUK\n+U2L\r\n=2a9s\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.3-16-61a8bdf_1595948469193_0.5339944100937344"},"_hasShrinkwrap":false},"21.0.3-17-796555b":{"name":"eosjs","version":"21.0.3-17-796555b","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"bn.js":"5.1.2","elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.8","@types/node":"^14.0.27","@types/pako":"^1.0.1","cypress":"^4.12.0","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.2.2","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.4","ts-loader":"^7.0.5","typescript":"^3.9.7","webpack":"^4.44.1","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### Add dependency to your project\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ESM syntax is supported using TypeScript, [webpack](https://webpack.js.org/api/module-methods), or  [Node.js with `--experimental-modules` flag](https://nodejs.org/api/esm.html)\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by Node.js out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on Node.js.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"95842da4910a50dbfaf928f4c910482087aee5f0","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.3-17-796555b","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-p3uitphgOZLphtWdZb9YTb5uqiM3t5NievpW/1AyiNXg2PjIK6lzcmXiupi13DU+6R4NrU6en1vSKVmzO3vDbQ==","shasum":"0a1c6517b098e74322268c0c8f288f4469837cc0","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.3-17-796555b.tgz","fileCount":58,"unpackedSize":387326,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfKrXbCRA9TVsSAnZWagAA+tQP/0KLiU0dq7IETgZGDqju\nwMU+LuoRNx/rQRqzQmESlIe8VavyWm7opHvFmFMh/6n2cyqdq6bq+DYmkJGv\nlx+nX9rdWjWmzuivOgDLk7TRHvhV77fN9ogNWtyvmxYANU73IElcLr8zvkY9\nUZ3nNfjaEe0Fq0YKXbGYLPdRp50H/BVNX8USz0c4gDFa03I+epylqwjh0qxB\np5mEZSzZw9gMcHUQ6WvkQmdWoKEUBs/RoUH9Jo1R2/wlAIv2ktl6YWsqQ5tM\nlnHRZeQdatRnyjnoVYFlxLJHM+RDoqzyFKZphcusTSc6UvfgG9exbwxN0/S2\nS6CzDoC6a8tosSB8XAS+jpTNAsMHY2iTE7ptZGAuLQSeLYYqiKwCIxR2NWr4\nRRbEW0+rZ59UFXTTBnuijOysc1j0SSdLoO/HPaZ5IzMLprmSowHMHpKa2uvP\nvHReSeTt/KjhibTRPiG68KvcRI1D809Q3ku0sxTXDaEe/C5l0eUh3xPUHetO\nApsFv/dvXy+TOS4FY6qrBf8q8F/PStkg7Vxhn8h9+PPIZnRc4vkkiobX1Y5y\nu475Jk1ZGfSA62SGPN0yx44zzRlMJtyuud/Ukj0pEpP+6K1fSVdVYtPTrvde\nC2LdhuHr3iTvOzkHTErE7jx2buqZIMjcN3QB6HXtmZZtdo6Y9NAfkKG6Xng3\nGOe2\r\n=81Z6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.3-17-796555b_1596634587479_0.374027839805007"},"_hasShrinkwrap":false},"21.0.3-18-7739b8c":{"name":"eosjs","version":"21.0.3-18-7739b8c","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"bn.js":"5.1.2","elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.9","@types/node":"^14.0.27","@types/pako":"^1.0.1","cypress":"^4.12.1","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.3.0","jest-fetch-mock":"^3.0.3","ts-jest":"^26.1.4","ts-loader":"^7.0.5","typescript":"^3.9.7","webpack":"^4.44.1","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### Add dependency to your project\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ESM syntax is supported using TypeScript, [webpack](https://webpack.js.org/api/module-methods), or  [Node.js with `--experimental-modules` flag](https://nodejs.org/api/esm.html)\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by Node.js out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on Node.js.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"54e1b7db340e104bd7c581f321abed54fee3e40e","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.3-18-7739b8c","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-0itPvHd+qwRA+tuDlMW7Q+eLSzD3FxKidmRfwyx+QxCCj5JYMuUVFr/9G1okyAeorJX1zTvLGxfHNAESLzLvMw==","shasum":"8edba1a0835cbed0bb5cafd87279c3924bbf5ed7","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.3-18-7739b8c.tgz","fileCount":58,"unpackedSize":388031,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfMqzRCRA9TVsSAnZWagAAI1gP/RehQezrJq26aB1AGGfh\nIzARxdwKyHoO4cOolrxxccOc8l8ZIsPzq663BC2ANFjrSXmWW4AH/cAOKS97\nR0oehdGQl4o8cWeiyZoA7/I66P3EepkTFaVdytOYPyH+Dk8dGQNnim9kTjNE\nIec1obHdvz5iZwY1DGVhxa97ijEJrteFPDeybmLD/E8Z0oGmR/uDBB/2COlj\nQIgdqN5dVyr2Xj3zFK5Eo0spcSbFQboHQ5a4nzEj3UCf2DeCrWDygBxO6FAu\nR5z55mAd9vBNEEnUxOip6zc5QMc5qAPavAKriFfKjF0mXb3ItWWg3kcRCCvA\n5RezFac3USe/kveWHl69jARqIG1wwlT6yjjez1VqslMIzzWI2OGkJi/NLkDb\nMTvQ0Kb0NwpsWp/68LR4n8yduumjlUrJhMGbh0XzfyygNir4O/Xa8YKvpQXn\nB5l/XOz0MDjKNwVCJXc7pNyO2h3NO/3/1suyPnMjCHKtGhrd8ds0QbW+tH9V\niDhi5bSe9CEcF24f8VDfHRxRaeATcX6HmXLPndVCALQxMvD8yjOVRz3Yt7Dk\nnNpOjpTTrx+fK3fERshYu+PcZuAznxmnMSnGJnzciHoZM8qpNCIGCz79VWaF\nmU51x62xpbaifpwuBRc/8t8NlNzrWLc+XiWFN/CRxMKScBmcEVpi/dzMJmk6\ndLwY\r\n=Su1E\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.3-18-7739b8c_1597156560806_0.08477693183157475"},"_hasShrinkwrap":false},"21.1.0-19-ed75695":{"name":"eosjs","version":"21.1.0-19-ed75695","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"bn.js":"5.1.2","elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.9","@types/node":"^14.0.27","@types/pako":"^1.0.1","cypress":"^4.12.1","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.3.0","jest-fetch-mock":"^3.0.3","ts-jest":"^26.2.0","ts-loader":"^7.0.5","typescript":"^3.9.7","webpack":"^4.44.1","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### Add dependency to your project\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ESM syntax is supported using TypeScript, [webpack](https://webpack.js.org/api/module-methods), or  [Node.js with `--experimental-modules` flag](https://nodejs.org/api/esm.html)\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by Node.js out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on Node.js.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"3719a4a0ba2301dd229380bfe794298cc4c0306f","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.1.0-19-ed75695","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-BEsH3vhazDLyGUfY3KMAEK9aKYjUxnZGLvYkz/aM0L5ls6NrAd17lpXK5jl4+MdbzAlxLk1Y84CkOUzvvvvelw==","shasum":"b17956f1aa860add3dc3c194d5539b58d81b9443","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.1.0-19-ed75695.tgz","fileCount":58,"unpackedSize":388031,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfNCcJCRA9TVsSAnZWagAAJPgP/3IE8oN/MjXmCwb9CRcw\nPYC4VtVJeD+ZE3DEgjA/p3munluLdMIM2EpRpUmrwldTqGYsaRepjJNRkOzB\nDVYNKDzDw3sWuwa85QNwgF+KjVoUfxs1m9tzDb0RKJKJCab7voWW2LkYdNBv\nZhXMJM+2M5aFF2BGb/kfUs6/gShLSUIG76DOso/qlPE2M5xGTtlxdmQH3LNW\nDfoOO7+ypJhi8ZuHRY+TIyojBqJ4fXnTHPsOi4sRY1lWiswaKPtWdmDqCiq2\nSAJsrBSPf94PseKLHuC5EKRo0yAhQlW4IrlWSyV6SLXn3L4YodIlgBCp/HJm\nw+SLfHq7MjqgZvL5eKHBNRPTXETDtnMIIQCyuVvny6WUUQ3H+YVTF2PFGKV/\n8NSq5oGzy3dUTYPxUGfmmgFlC/j0eYllpKNFZ8v1x5N17gbUbLl1QwHPgskF\naDFbJ66o7aSQWuWga+6z5dDyoh8W+x+0Ne6gLoHs8Oy7+u5naNqHhZpovJRa\nVkxvgEbxL2gF1QeLbxtqvz/Ek0P4QgJ8lLIxdRYCH5o9PDp3whkZ0vGrY4bL\n1smW1Vc7sbHEultbQPKtZig63QO3Y/aqqCapqmhk2l3OyIcn55ILvB9s3mNh\nq5oHwIdniKWynuw3PpS73QfWLRglyeU8YLBoRJZrwJB0V4dAPmblkbHt0Tsx\nGGWO\r\n=jA8V\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.1.0-19-ed75695_1597253384426_0.3934378746840941"},"_hasShrinkwrap":false},"21.0.3":{"name":"eosjs","version":"21.0.3","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.9","@types/node":"^14.0.27","@types/pako":"^1.0.1","cypress":"^4.12.1","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.3.0","jest-fetch-mock":"^3.0.3","ts-jest":"^26.2.0","ts-loader":"^7.0.5","typescript":"^3.9.7","webpack":"^4.44.1","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"gitHead":"ca7c5f99cda9430fc37633affa6e3a94849f2b28","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.0.3","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-EO/lM1pvA1nohzmPnwyE6k5OvYqRo9ZkI6PfMI4npXkru04Nt/zBjcneNLFpRc7gg5W7vtGLzJeLB7NOFquDMg==","shasum":"126388f5045647f687fd0aacff4f08ed92d4369f","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.0.3.tgz","fileCount":55,"unpackedSize":324671,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfNCt9CRA9TVsSAnZWagAA3zIQAJLVtUD/SOCpjbI2oSqG\nhCyAT9J7DQZsXFdl7n+g7tCbG1RMCeHqdFJXM0SeXBPW47TkvphwOfOlnPh8\nQgN2biW/mnFv27zl3qeZqUI9900hCfZdMUdzEJcDSdXpchZmGrujLJxwqHcR\ncLX3NMjczV4UI3qSvi5PrcwHCb7I6NQ17sC1SlnJ7JjUJAY8W5O0FkWIHl7V\npgljidMTvmAQ5y5xzSsokJh6NUyNsIqqc6/0Iz76HRL4IygZF+kn3fnDcpH1\nMYCOwlptAvjgmurDW3wti7ZHI4WPhF6gDfqsVaqptbwjuO8Cg5y/Y3DFJLXb\nSz6oKJOHWQjVnsw45m64hETyhxksfFJI03ThFrVyfwl4NrwysN3gNEko7zIw\njv929/b5USeAFSr8vqRQRBBWqxPToAqBuNTR1Ub9tmB/R9gVhhn5KuLFKjwW\neFE8IHGx5UlUhFM0dqjfUHyGaHgKHbw2CyGExvBhl04pIeAT//21Fft6PQDg\nh92X4ButtTNSkWyA9Wxp2/8rF5UgD/0FQyvILktzmW9UG+5Mg3jep/qZmu0p\nybr8Q1megUoebqwCW8R2kUAbWLDddAbFRfTq53s9G6VbcErgyqbaD05HJ67c\nqID9S23vLR5nWD7QqujqUSG8nLqSqW6UABfUU63bODXZ60Kjm/QwxD7VGtVE\n8YZR\r\n=BW4P\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.0.3_1597254525017_0.13062725710136092"},"_hasShrinkwrap":false},"21.1.0-20-c31c737":{"name":"eosjs","version":"21.1.0-20-c31c737","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"bn.js":"5.1.2","elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.9","@types/node":"^14.0.27","@types/pako":"^1.0.1","cypress":"^4.12.1","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.4.0","jest-fetch-mock":"^3.0.3","ts-jest":"^26.2.0","ts-loader":"^7.0.5","typescript":"^3.9.7","webpack":"^4.44.1","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### Add dependency to your project\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ESM syntax is supported using TypeScript, [webpack](https://webpack.js.org/api/module-methods), or  [Node.js with `--experimental-modules` flag](https://nodejs.org/api/esm.html)\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by Node.js out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on Node.js.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"2cd6056a89193b80d1c414a5727fedc4de1a2ccc","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.1.0-20-c31c737","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-+f6R40caFaovy9EmppvdQOOx82+ubQKXF4dv3XxJSIduU/woA7spjW6A+Dqb8ZOQW3uz+FvYncosKmIoNHFukQ==","shasum":"decd67f76f0b00e7a9dacfc5cc35e6296012cef1","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.1.0-20-c31c737.tgz","fileCount":58,"unpackedSize":390044,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfPaE4CRA9TVsSAnZWagAAQfsP/3MJsMKdx+ajd3r6svYc\nr5vxlzb/FMli3nWPZItVmJzIVaRUgLHaJuhLq5tmoqWTWo+Vj37WeOn3/ofG\nRRHoGAi46XefMt4Xz7MwB3D4+7+JfN4yQ2t9xaMGYWbvgctXwUbdQlQt1vSC\nv5ALukWYIhZ2SvgQoto1ywBjND4n2Dm9IzSRuKMTPokAdDejVZlDP3S6c8E1\nrPm45hqE/C8O3MCJwIZJE/9nPhM7mpBXrZpSDFbmGZBvsIFriEqJqXUY5eJz\nsyvXyx5WGeXsiHAuHGggcc++5misXpV8Sf70XZrMiBEDK6IqRiUyu8zhITl8\n6nBV7Lr4CVCZYfsuQtrYLV5P/VoWdmomqrK4Yb2oixnzfNf8fCEwEOh9ZgZ5\nivOxmoDCb0fQp+MgpIKfGDGlbZoi0YuQIEadkypGx8ItwQJ7y+3tf6myB5Ui\nVVSRaQspvg2bW1A/KwFqDY3h5M6jWu7qz0oet1Edxfm6rzlFmPslSGMGP22q\nXiVjId0OSB9YqW2H31XpHuwCFTHppxyM8ANKceEaWAv2r3YX56DVSkIIOpUY\n0JEFkEicg7JnXzogP/NXgdH89IiNlyQZTlXlSdNd8aB8SqQzrGf3ogXGLyUh\nEOPQCk2UIW2fOxR8XWqk0j3g2LjsH7zpa+qIeU87t0zLvLuqYUqBqtJIPVpM\nXY0D\r\n=wudi\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"service.npm@block.one","name":"b1serviceaccount"},{"email":"cody.douglass@block.one","name":"cody.douglass"},{"email":"jeffreyssmith2nd@gmail.com","name":"jeffreyssmith2nd"},{"email":"julien.heller@block.one","name":"julienheller"},{"email":"mike.manfredi@block.one","name":"mikemanfredi"},{"email":"serg.metelin@gmail.com","name":"smetelin"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.1.0-20-c31c737_1597874487844_0.2051124530506796"},"_hasShrinkwrap":false},"21.1.0-21-ca1b301":{"name":"eosjs","version":"21.1.0-21-ca1b301","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"bn.js":"5.1.2","elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.13","@types/node":"^14.6.4","@types/pako":"^1.0.1","cypress":"^4.12.1","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.4.2","jest-fetch-mock":"^3.0.3","ts-jest":"^26.3.0","ts-loader":"^7.0.5","typescript":"^3.9.7","webpack":"^4.44.1","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### Add dependency to your project\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ESM syntax is supported using TypeScript, [webpack](https://webpack.js.org/api/module-methods), or  [Node.js with `--experimental-modules` flag](https://nodejs.org/api/esm.html)\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by Node.js out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on Node.js.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"d2d612782af4764af349b1e569948f3b0141490f","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.1.0-21-ca1b301","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-zzCg2Ywth7/54r3UKqResgnIoCxTB13QSY/Fe4aSB66dIrJTMr1F4qsCqYj82pMVlzeWA1Jp/PS9OJNQaNCubg==","shasum":"4ee1fd5e2a1f47251213479f167187424d8db59e","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.1.0-21-ca1b301.tgz","fileCount":58,"unpackedSize":390111,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfW4MmCRA9TVsSAnZWagAABZ4P/R3KgxYjKZf+voaNxTkn\nDXKpgy7YV+l1YGDFd6+c/VJ37sswdIvJzO895+5JB09rRpZOnafc7TcVrU35\nY6XnylhQHFXQKkdTfZYu6yVmxBwcc4K9lHo0U07kjz4Knfltxybqegc80E1f\na72SGzy/FcNnygpF4VGLPSNUXAU1AgQJutOVkfkPYZzVd4ndh4GvnNxH+Pjq\n57f/PozF+UvqnBKDlEgzFxemu8wpw6ZbHhZWM/qnFanCEhvpGV/vJHY+30NV\nNV3f/jNds489s0ANDyGUq2LyYPP4LqGrqM1GHd+P1atI72mPVN84bLgXeYYZ\nuwE7FrNFrOkAFbvuqVJMqefmtf0jpSD16C92T0yygyQUVAGn/s/PUAof+ODI\nappydaSVxzsjpPiCSMWYTVj/VtywBdppILoSSrK2aBpnWaNAv9QHJLUuosek\nEAPnyXDdP3JwVHKcF4Rvaf8iuwWPs+ULga7515oSv5A37PRzJt5bhFKTQrou\nCFzqgCknzyp9KjqA9IxTvucGYlLM/Gnf71v1RsRGx9UjDjh8a14JUIs45jTk\nuIuKXvc0Nh9opS2p7g9s/vEOL0YBakPaqBXtLvNH9ZC5wG0i8BjELYNA7B6Q\nT9oH55GEhFMpw8WQZqq3LZIKsbKrtmxKJcGnh+JvUYoxzEfIHxtkytYzgHvw\n3pnR\r\n=iyRt\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jeffreyssmith2nd","email":"jeffreyssmith2nd@gmail.com"},{"name":"julienheller","email":"julien.heller@block.one"},{"name":"b1serviceaccount","email":"service.npm@block.one"},{"name":"mikemanfredi","email":"mike.manfredi@block.one"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.1.0-21-ca1b301_1599832869794_0.14790890738240314"},"_hasShrinkwrap":false},"21.1.0-22-95f1f9b":{"name":"eosjs","version":"21.1.0-22-95f1f9b","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"bn.js":"5.1.2","elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.13","@types/node":"^14.6.4","@types/pako":"^1.0.1","cypress":"^4.12.1","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.4.2","jest-fetch-mock":"^3.0.3","ts-jest":"^26.3.0","ts-loader":"^7.0.5","typescript":"^3.9.7","webpack":"^4.44.1","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### Add dependency to your project\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ESM syntax is supported using TypeScript, [webpack](https://webpack.js.org/api/module-methods), or  [Node.js with `--experimental-modules` flag](https://nodejs.org/api/esm.html)\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by Node.js out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on Node.js.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"a4a75a98617790bc1ae40db48ad6d3fa993a14a9","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.1.0-22-95f1f9b","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-48jftWemrb7YQODOIPIRLsg4VBCopvjFGdFaWJol4b5SEwUlhl+kQ3Lb4PQHQ70UkoSvZseFCfUkw/swf/hv/g==","shasum":"9fb01457ae01fedc30cce73ec6fb05c3303d40eb","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.1.0-22-95f1f9b.tgz","fileCount":58,"unpackedSize":390111,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfW5RCCRA9TVsSAnZWagAAqIEP+wSLi7nCjIswiNPt0pJM\n/CMWEs3eMGqCsKPOBHTmh2LpPNlUkWRhKOQ+WO5MI+m7qMnVMxlV8yQ9Ln4C\nSXKgkiY2Svv34gEUNKvqSButAXZ3VTCOVIjSqoX1OU35bErY5yXRKgj/UsN/\nKRvp9UIvs/wlUdxtv6ovMc6XB7pKYh2iv3Ek0pfPRXJEUTgZtlStr6FxyhdZ\nI2c/9uB17R+Z8LodFDg50MDDBXZLx1EfudV5VAPf2vyUIvNss6L474lefkdo\nYRInOGS8D15JsJVtxPf2dokbEBCtNiPqxnEiPpFe6Y/wS9VW5ctBLE8g1dJR\nwNlcMJqLluyEA9tVqGV58fY8TytiWoc359L1yW4D3ZEoF2L/UL2CAlQKTL3C\nCugxUdQvXacz3Omrvk0xZNRTAI39oG0pASi+7+SORwhNYpeXcWmKtVcd7/rO\ntaABn3zE4yCn/SulkRLl2u/FpgRHlHn8fzRojIe0Hm/GLvwg9Tg+veABXk4K\nbcTHm3/0YMD5uaodlQYdScFIaEaHQxo6YSuRIXATJq8N4T+3VelNoJplFsW0\nZ3h2RuOLKNzNKjCXh9MgGI8Oyb5Ko86Q5nUgSyWs4rKEL9rAng49Xan9YDhV\nXIJdwjnXMeAep6qMAaRtsh7BgVYsW8SP9svliHPaiRxqGb+fZ5wcou06scOr\njCTK\r\n=pYBy\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jeffreyssmith2nd","email":"jeffreyssmith2nd@gmail.com"},{"name":"julienheller","email":"julien.heller@block.one"},{"name":"b1serviceaccount","email":"service.npm@block.one"},{"name":"mikemanfredi","email":"mike.manfredi@block.one"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.1.0-22-95f1f9b_1599837249992_0.39886253341068056"},"_hasShrinkwrap":false},"21.1.0-23-08dc543":{"name":"eosjs","version":"21.1.0-23-08dc543","description":"Talk to eos API","main":"dist/index.js","scripts":{"cypress":"cypress run --spec 'cypress/integration/index.spec.js'","cypress-ui":"cypress open","prepare":"npm run build","lint":"eslint --ext .js,.jsx,.ts,.tsx src","test":"jest src/tests/*eosjs*","test-node":"jest src/tests/*node*","test-all":"yarn test && yarn test-node && yarn cypress","build":"rm -rf dist && tsc -p ./tsconfig.json && node scripts/copy-ripe-md.js","build-web":"rm -rf dist-web && webpack --config webpack.prod.js && webpack --config webpack.debug.js","build-production":"yarn build && yarn build-web && yarn test-all","docs-init":"sh .docs/scripts/init.sh","docs-build":"sh .docs/scripts/build.sh","docs-serve":"python -m SimpleHTTPServer","docs-publish":"sh .docs/scripts/publish.sh"},"author":{"name":"block.one"},"license":"MIT","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"dependencies":{"bn.js":"5.1.2","elliptic":"6.5.3","hash.js":"1.1.7","pako":"1.0.11"},"devDependencies":{"@blockone/eslint-config-blockone":"^3.0.0","@types/elliptic":"^6.4.12","@types/jest":"^26.0.13","@types/node":"^14.10.1","@types/pako":"^1.0.1","cypress":"^4.12.1","eosjs-ecc":"^4.0.7","eslint":"^6.8.0","jest":"^26.4.2","jest-fetch-mock":"^3.0.3","ts-jest":"^26.3.0","ts-loader":"^7.0.5","typescript":"^3.9.7","webpack":"^4.44.1","webpack-cli":"^3.3.12"},"resolutions":{"lodash":"4.17.19"},"jest":{"automock":false,"setupFiles":["./src/tests/setupJest.js"],"moduleFileExtensions":["ts","tsx","js"],"transform":{"^.+\\.(tsx?)$":"ts-jest"},"globals":{"ts-jest":{"tsConfig":"tsconfig.json"}},"testRegex":"(/src/.*(\\.|/)(test|spec))\\.(jsx?|tsx?)$","testEnvironment":"node"},"readme":"# eosjs\n[![Build Status](https://github.com/eosio/eosjs/workflows/CI/badge.svg?branch=master)](https://github.com/EOSIO/eosjs/actions)  [![npm version](https://badge.fury.io/js/eosjs.svg)](https://badge.fury.io/js/eosjs)  [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)  ![npm](https://img.shields.io/npm/dw/eosjs.svg)\n\nJavascript API for integration with EOSIO-based blockchains using [EOSIO RPC API](https://developers.eos.io/eosio-nodeos/reference).\n\nDocumentation can be found [here](https://eosio.github.io/eosjs)\n\n## Installation\n\n### NPM\n\nThe official distribution package can be found at [npm](https://www.npmjs.com/package/eosjs).\n\n### Add dependency to your project\n\n`yarn add eosjs`\n\n### Using with Typescript\n\nIn order to get access to the `TextEncoding` and `TextDecoding` types, you need to add `@types/text-encoding` as a dev dependency:\n`yarn add --dev @types/text-encoding`\n\nIf you're using Node (not a browser) then you'll also need to make sure the `dom` lib is referenced in your `tsconfig.json`:\n\n```\n{\n\t\"compilerOptions\": {\n\t\t\"lib\": [..., \"dom\"]\n\t}\n}\n```\n\n### Browser Distribution\n\nClone this repository locally then run `yarn build-web`.  The browser distribution will be located in `dist-web` and can be directly copied into your project repository. The `dist-web` folder contains minified bundles ready for production, along with source mapped versions of the library for debugging.  For full browser usage examples, [see the documentation](https://eosio.github.io/eosjs/guides/1.-Browsers.html).\n\n## Import\n\n### ES Modules\n\nImporting using ESM syntax is supported using TypeScript, [webpack](https://webpack.js.org/api/module-methods), or  [Node.js with `--experimental-modules` flag](https://nodejs.org/api/esm.html)\n```js\nimport { Api, JsonRpc, RpcError } from 'eosjs';\nimport { JsSignatureProvider } from 'eosjs/dist/eosjs-jssig';           // development only\n```\n\n### CommonJS\n\nImporting using commonJS syntax is supported by Node.js out of the box.\n```js\nconst { Api, JsonRpc, RpcError } = require('eosjs');\nconst { JsSignatureProvider } = require('eosjs/dist/eosjs-jssig');      // development only\nconst fetch = require('node-fetch');                                    // node only; not needed in browsers\nconst { TextEncoder, TextDecoder } = require('util');                   // node only; native TextEncoder/Decoder\n```\n\n## Basic Usage\n\n### Signature Provider\n\nThe Signature Provider holds private keys and is responsible for signing transactions.\n\n***Using the JsSignatureProvider in the browser is not secure and should only be used for development purposes. Use a secure vault outside of the context of the webpage to ensure security when signing transactions in production***\n\n```js\nconst defaultPrivateKey = \"5JtUScZK2XEp3g9gh7F8bwtPTRAkASmNrrftmx4AxDKD5K4zDnr\"; // bob\nconst signatureProvider = new JsSignatureProvider([defaultPrivateKey]);\n```\n\n### JSON-RPC\n\nOpen a connection to JSON-RPC, include `fetch` when on Node.js.\n```js\nconst rpc = new JsonRpc('http://127.0.0.1:8888', { fetch });\n```\n\n### API\n\nInclude textDecoder and textEncoder when using in Node. You may exclude these when running in a browser since most modern browsers now natively support these. If your browser does not support these (https://caniuse.com/#feat=textencoder), then you can import them as a dependency through the following deprecated npm package: https://www.npmjs.com/package/text-encoding\n```js\nconst api = new Api({ rpc, signatureProvider, textDecoder: new TextDecoder(), textEncoder: new TextEncoder() });\n```\n\n### Sending a transaction\n\n`transact()` is used to sign and push transactions onto the blockchain with an optional configuration object parameter.  This parameter can override the default value of `broadcast: true`, and can be used to fill TAPOS fields given `expireSeconds` and either `blocksBehind` or `useLastIrreversible`.  Given no configuration options, transactions are expected to be unpacked with TAPOS fields (`expiration`, `ref_block_num`, `ref_block_prefix`) and will automatically be broadcast onto the chain.\n\n```js\n(async () => {\n  const result = await api.transact({\n    actions: [{\n      account: 'eosio.token',\n      name: 'transfer',\n      authorization: [{\n        actor: 'useraaaaaaaa',\n        permission: 'active',\n      }],\n      data: {\n        from: 'useraaaaaaaa',\n        to: 'useraaaaaaab',\n        quantity: '0.0001 SYS',\n        memo: '',\n      },\n    }]\n  }, {\n    blocksBehind: 3,\n    expireSeconds: 30,\n  });\n  console.dir(result);\n})();\n```\n\n### Error handling\n\nuse `RpcError` for handling RPC Errors\n```js\n...\ntry {\n  const result = await api.transact({\n  ...\n} catch (e) {\n  console.log('\\nCaught exception: ' + e);\n  if (e instanceof RpcError)\n    console.log(JSON.stringify(e.json, null, 2));\n}\n...\n```\n\n## Contributing\n\n[Contributing Guide](./CONTRIBUTING.md)\n\n[Code of Conduct](./CONTRIBUTING.md#conduct)\n\n## License\n\n[MIT](./LICENSE)\n\n## Important\n\nSee [LICENSE](./LICENSE) for copyright and license terms.\n\nAll repositories and other materials are provided subject to the terms of this [IMPORTANT](./IMPORTANT.md) notice and you must familiarize yourself with its terms.  The notice contains important information, limitations and restrictions relating to our software, publications, trademarks, third-party resources, and forward-looking statements.  By accessing any of our repositories and other materials, you accept and agree to the terms of the notice.\n","readmeFilename":"README.md","gitHead":"03efc7407caaec8664e02036c4d5cf0adc497c69","bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"homepage":"https://github.com/EOSIO/eosjs#readme","_id":"eosjs@21.1.0-23-08dc543","_nodeVersion":"12.14.1","_npmVersion":"6.13.4","dist":{"integrity":"sha512-DEVxDty7HHHq7gTtHBPTnE2Je3keVbfYJ/vDjiNNs+jCIJKLSiyAOxUyFvBC5h47QqqPIrCRbjsRFkjVTpSxTA==","shasum":"e75db0ab8eaf5a68691916676aa7561a0227bb59","tarball":"https://registry.npmjs.org/eosjs/-/eosjs-21.1.0-23-08dc543.tgz","fileCount":58,"unpackedSize":389631,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfaLZlCRA9TVsSAnZWagAAvisP/3mmCa6CgAZFtxSGj/U7\naLfBWUwydVZWFj9K5442PMTW+o740bCc7MmoueQYcrzFHWXyEkmayNYDHItZ\nQAUFxkyaSO3ReiKzBYWwRL40i/5tHXhv0ZcLTpPBnL4LFqHVyHoKSGLcnMEu\nKRMDw/Asejdf7fEG4JjAjbBMys6McUuSDIoSobSv3JsmWY6xAteNIHTUbV77\nLBGGvbIc6Ek0R1nPGmbpI8S0GgZ1J23kr+zq7OTbKFC30iWLj4eAxlYeWY96\nd5tRNUkqKLh42i2bo0FhVgRAVzRgOv1KE2yUz2NHLZ3AyLvQlxLHDQLiTnRJ\nvFjp/lHP4vIVp7NnTSyUb0xRvsHi8U0VeQ0Y8GgZiW4U4W9P0ubAnWXrWrUR\nJRl4/acn1Cp2F5fIT9w8jlIKcKpNWzrcHONY82xtzNC4ji+yzYgXYDUXl0mz\nK+MAQqAG5G/8OTmh6eqLJ+sfZh4ombXYbbLpwS3rXbxHUeYJ1HNkBhks/Gks\ng0sMp0kmMeTK00tgbyzvco5JIsDIkEOE69cAUWTbjnIQctYYlZ0h/xpEvwAi\nGVL2jLsIjw2AxFFnLZ5sTVCPs4He601GbH/Gizz082CWMQ4uF2PqcxkkCFTG\nQDAxMsZBtqrn3CkcMn43//vj5oXWWlqz225elKfVQh64E+OtgtP5eXDVDJ+6\n9V1M\r\n=OEco\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"jeffreyssmith2nd","email":"jeffreyssmith2nd@gmail.com"},{"name":"julienheller","email":"julien.heller@block.one"},{"name":"b1serviceaccount","email":"service.npm@block.one"},{"name":"mikemanfredi","email":"mike.manfredi@block.one"}],"_npmUser":{"name":"b1serviceaccount","email":"service.npm@block.one"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/eosjs_21.1.0-23-08dc543_1600697956300_0.029975373550976903"},"_hasShrinkwrap":false}},"readme":"","maintainers":[{"name":"jeffreyssmith2nd","email":"jeffreyssmith2nd@gmail.com"},{"name":"julienheller","email":"julien.heller@block.one"},{"name":"b1serviceaccount","email":"service.npm@block.one"},{"name":"mikemanfredi","email":"mike.manfredi@block.one"}],"time":{"modified":"2020-09-21T14:19:21.612Z","created":"2017-07-02T11:30:21.562Z","1.0.0":"2017-07-02T11:30:21.562Z","0.0.2":"2017-07-02T11:32:20.034Z","1.0.1":"2017-07-06T16:26:07.112Z","1.0.2":"2017-07-06T16:47:51.401Z","1.0.3":"2017-07-06T16:50:22.279Z","1.0.4":"2017-07-07T18:06:13.246Z","1.0.5":"2017-07-08T11:47:57.307Z","1.0.6":"2017-07-08T12:03:22.945Z","1.0.7":"2017-07-11T20:01:12.884Z","1.0.8":"2017-07-12T16:52:17.660Z","1.0.9":"2017-07-30T02:24:21.172Z","1.0.10":"2017-08-01T15:00:05.414Z","1.0.11":"2017-08-03T14:03:16.213Z","1.0.12":"2017-08-03T15:31:01.619Z","1.0.13":"2017-08-23T02:58:31.347Z","1.0.14":"2017-08-26T18:44:40.943Z","1.0.15":"2017-08-26T19:04:00.653Z","1.1.0":"2017-09-05T20:51:57.655Z","1.2.0":"2017-09-09T01:08:29.469Z","1.3.0":"2017-09-11T17:08:43.836Z","1.4.0":"2017-09-14T15:04:17.051Z","1.4.1":"2017-09-20T14:33:08.861Z","1.4.2":"2017-09-22T14:59:09.961Z","1.4.3":"2017-09-26T17:09:33.918Z","1.4.6":"2017-10-03T14:42:29.631Z","2.0.0":"2017-10-13T18:46:42.632Z","2.0.1":"2017-10-13T18:57:23.836Z","2.1.0":"2017-10-14T20:16:01.657Z","2.1.1":"2017-10-15T01:53:29.706Z","3.0.0":"2017-10-16T20:22:08.707Z","3.0.1":"2017-10-20T14:50:34.142Z","3.0.2":"2017-10-20T16:57:45.694Z","3.0.3":"2017-10-27T19:54:41.730Z","3.0.4":"2017-11-13T22:09:27.716Z","3.0.5":"2017-11-14T18:06:41.568Z","4.0.1":"2017-11-20T17:36:14.118Z","4.0.2":"2017-11-22T22:28:14.112Z","5.0.0":"2017-12-05T14:50:30.672Z","5.1.0":"2017-12-07T21:38:12.841Z","5.1.1":"2017-12-07T21:54:59.776Z","5.1.2":"2017-12-13T16:46:28.604Z","6.0.0":"2017-12-14T19:10:03.619Z","6.0.1":"2017-12-19T22:54:30.889Z","6.0.2":"2018-01-18T14:58:13.670Z","6.0.3":"2018-01-18T18:08:42.033Z","6.1.0":"2018-01-23T19:05:16.381Z","6.1.1":"2018-02-01T21:28:50.119Z","6.1.2":"2018-02-06T19:49:38.920Z","6.1.3":"2018-02-08T15:28:23.600Z","6.1.4":"2018-02-08T16:56:32.216Z","6.1.5":"2018-02-12T23:09:26.140Z","6.1.6":"2018-02-14T18:55:34.278Z","6.1.7":"2018-02-26T15:54:48.221Z","6.1.8":"2018-02-26T17:31:27.016Z","7.0.0":"2018-03-09T16:00:29.593Z","7.0.1":"2018-03-09T18:15:50.058Z","7.0.2":"2018-03-12T14:49:28.393Z","6.1.9":"2018-03-12T15:32:06.900Z","6.1.10":"2018-03-19T16:00:58.453Z","7.1.1":"2018-03-23T14:32:21.129Z","6.1.11":"2018-03-26T21:48:18.963Z","7.1.2":"2018-03-27T15:11:55.468Z","7.1.3":"2018-04-05T14:10:48.277Z","7.1.4":"2018-04-05T17:45:40.120Z","7.1.5":"2018-04-06T17:24:19.448Z","7.1.6":"2018-04-12T14:31:12.453Z","8.0.0":"2018-04-18T18:21:29.233Z","8.0.1":"2018-04-24T17:44:41.511Z","9.0.0":"2018-04-27T15:40:19.390Z","9.0.1":"2018-04-27T23:49:24.666Z","10.0.0":"2018-05-04T18:53:34.756Z","11.0.0":"2018-05-16T01:36:46.615Z","11.0.1":"2018-05-18T15:47:30.748Z","12.0.0":"2018-05-19T02:09:29.065Z","12.0.1":"2018-05-21T12:40:03.599Z","12.0.2":"2018-05-24T15:18:34.569Z","12.0.3":"2018-05-25T17:47:46.948Z","13.0.0":"2018-05-26T12:29:33.495Z","13.0.1":"2018-05-30T22:52:06.116Z","13.1.0":"2018-05-31T20:31:25.168Z","14.0.0":"2018-06-02T01:45:48.815Z","14.1.0":"2018-06-02T21:46:18.179Z","14.1.1":"2018-06-09T06:13:27.917Z","14.2.0":"2018-06-15T14:15:05.409Z","15.0.0":"2018-06-15T18:27:40.617Z","15.0.1":"2018-06-20T21:50:51.709Z","15.0.2":"2018-06-22T12:48:32.806Z","15.0.3":"2018-06-22T21:14:42.486Z","15.0.4":"2018-07-17T19:26:41.009Z","15.0.6":"2018-07-17T19:45:38.144Z","16.0.0":"2018-07-23T21:28:32.458Z","16.0.1":"2018-08-14T01:53:30.945Z","16.0.2":"2018-08-14T01:58:02.741Z","16.0.3":"2018-08-18T16:26:38.599Z","16.0.5":"2018-08-19T23:26:51.242Z","16.0.6":"2018-08-22T14:40:19.472Z","16.0.7":"2018-09-11T16:31:04.690Z","16.0.8":"2018-09-15T21:08:07.764Z","16.0.9":"2018-09-23T12:50:56.033Z","20.0.0-beta1":"2018-10-03T22:13:51.667Z","20.0.0-beta2":"2018-10-19T18:46:43.081Z","20.0.0-beta2.0":"2018-11-26T19:04:52.391Z","20.0.0-beta2.1":"2018-11-27T16:08:15.678Z","20.0.0-beta2.2":"2018-11-28T20:53:55.833Z","20.0.0-336bd5d.0":"2018-11-29T17:00:39.885Z","20.0.0-8b096ed.0":"2018-12-04T14:52:06.974Z","20.0.0-73152ad.0":"2018-12-11T16:45:51.873Z","20.0.0-251387f.0":"2018-12-18T17:16:22.744Z","20.0.0-beta3":"2018-12-18T22:17:58.297Z","20.0.0-ae00a08.0":"2019-01-11T21:33:25.898Z","20.0.0-83491be.0":"2019-01-15T21:14:52.884Z","20.0.0-0d537ba.0":"2019-02-05T21:19:33.421Z","20.0.0-c04336f.0":"2019-02-05T21:31:29.083Z","20.0.0-bf85117.0":"2019-02-05T21:44:33.486Z","20.0.0-9ff971c.0":"2019-02-07T19:17:17.205Z","20.0.0-519f746.0":"2019-02-12T20:59:05.193Z","20.0.0-f6c2e54.0":"2019-02-19T21:39:33.329Z","20.0.0-18cab6c.0":"2019-02-21T15:43:12.563Z","20.0.0-0c18f69.0":"2019-02-22T14:41:11.730Z","20.0.0-92da292.0":"2019-02-22T15:53:09.441Z","20.0.0-08d2a9b.0":"2019-02-26T19:56:09.167Z","20.0.0-abc6e0e.0":"2019-02-27T20:41:05.944Z","20.0.0-9d39604.0":"2019-02-28T17:30:08.840Z","20.0.0-2b26a3c.0":"2019-02-28T21:47:26.619Z","20.0.0-ffffff.0":"2019-02-28T21:57:40.266Z","20.0.0-b06ca22.0":"2019-02-28T22:36:17.873Z","20.0.0-56c14a9.0":"2019-03-05T16:42:15.191Z","20.0.0-ac84c38.0":"2019-03-07T14:40:00.648Z","20.0.0-6b2a494.0":"2019-03-19T14:25:57.520Z","20.0.0-ba6d627.0":"2019-03-19T19:04:30.675Z","20.0.0-80f0215.0":"2019-03-25T13:25:58.992Z","20.0.0-80e73f2.0":"2019-03-26T15:10:43.498Z","20.0.0-53d8efc.0":"2019-04-01T15:22:06.062Z","20.0.0-08d7252.0":"2019-04-01T15:56:47.042Z","20.0.1-d100296.0":"2019-04-01T16:38:24.939Z","20.0.1-a2c7836.0":"2019-04-01T16:51:56.659Z","20.0.0":"2019-04-01T17:19:07.177Z","20.0.1-e2045ab.0":"2019-04-13T13:05:06.358Z","20.0.1-8ca3a69.0":"2019-04-16T15:00:38.797Z","20.0.1-e34c16e.0":"2019-04-22T13:29:14.217Z","20.0.1-6f4bb5c.0":"2019-05-29T16:58:15.655Z","20.0.1-1fed0be.0":"2019-06-07T14:14:19.480Z","20.0.2-9ee5235.0":"2019-07-03T22:18:37.172Z","20.0.2-cea185c.0":"2019-07-05T19:06:39.777Z","20.0.2-cbcef42.0":"2019-07-15T14:51:19.616Z","20.0.2-d85dbee.0":"2019-08-08T19:37:54.140Z","20.0.2-3d6c39c.0":"2019-08-09T17:29:19.796Z","20.0.2-4a27bf1.0":"2019-08-12T19:23:45.859Z","20.0.2-9487f32.0":"2019-08-12T19:37:03.520Z","20.0.2-11fbd89.0":"2019-08-14T22:03:08.250Z","20.0.2-2b2e331.0":"2019-08-29T13:56:36.559Z","20.0.2-a53eecb.0":"2019-09-04T19:42:12.844Z","20.0.2-27905cc.0":"2019-10-15T19:24:24.818Z","20.0.2-af47366.0":"2019-11-09T05:42:27.722Z","20.0.2":"2019-11-12T20:38:34.665Z","20.0.3-cd2fb09.0":"2019-11-12T20:39:31.739Z","20.0.3-7fd6f84.0":"2019-12-05T21:33:34.819Z","20.0.3-a61e5ff.0":"2019-12-06T16:31:04.313Z","20.0.3-f9082b3.0":"2019-12-09T23:24:38.042Z","20.0.2-f9082b3.0":"2019-12-09T23:43:07.858Z","20.0.2-2f859a0.0":"2019-12-09T23:45:37.422Z","20.0.4-67ee21f.0":"2019-12-09T23:55:39.899Z","20.0.4-e2c667e.0":"2019-12-11T18:04:19.011Z","20.0.4-b3eb443.0":"2020-01-03T17:07:16.865Z","20.0.4-ccbd83e.0":"2020-01-03T17:07:38.109Z","20.0.4-7938e1a.0":"2020-01-03T19:30:11.458Z","20.0.4-3f9295a.0":"2020-01-16T15:30:53.164Z","21.0.0-0a31612.0":"2020-01-16T16:19:41.163Z","21.0.0-rc1":"2020-01-16T17:03:52.456Z","21.0.0-92cf49f.0":"2020-01-16T17:05:36.017Z","20.0.3":"2020-01-16T17:25:28.856Z","21.0.1-rc1":"2020-01-16T19:07:39.700Z","21.0.0-443b8c8.0":"2020-01-23T20:35:05.465Z","21.0.0-131a987.0":"2020-01-23T21:22:28.791Z","21.0.0-ea5150e.0":"2020-01-29T20:48:33.551Z","21.0.0-75f449c.0":"2020-01-31T14:36:34.921Z","21.0.0-60fa818.0":"2020-02-04T16:40:03.057Z","21.0.0-37d6d0f.0":"2020-02-04T20:06:40.918Z","21.0.0-489474c.0":"2020-02-05T18:34:02.036Z","21.0.0-9b03ef8.0":"2020-02-06T14:31:45.365Z","21.0.0-2f4c99f.0":"2020-02-06T16:28:07.355Z","21.0.1-rc2":"2020-02-07T15:10:49.988Z","21.0.0-3c17dd8.0":"2020-02-10T22:36:37.493Z","21.0.0-b64e61e.0":"2020-02-11T14:45:50.381Z","21.0.0-01fbd4a.0":"2020-02-11T20:38:38.480Z","21.0.0-28594c3.0":"2020-02-12T18:12:39.141Z","21.0.0-45854c1.0":"2020-03-13T13:37:08.790Z","21.0.0-a6ad012.0":"2020-04-06T16:10:11.359Z","21.0.0-b10b79d.0":"2020-04-10T17:36:06.627Z","21.0.0-646cad9.0":"2020-05-21T20:30:43.950Z","21.0.0-8deba86.0":"2020-05-28T19:32:36.610Z","21.0.0-ccc1b7e.0":"2020-05-29T18:14:39.463Z","21.0.0-6c2ef05.0":"2020-06-05T19:37:03.843Z","21.0.0-2-f93a703-rc1":"2020-06-08T19:00:09.504Z","21.0.1-3-e95c391":"2020-06-08T19:46:30.905Z","21.0.1-4-edd9641":"2020-06-08T19:55:26.627Z","21.0.1-5-f0b92e8":"2020-06-08T20:12:21.564Z","21.0.1-6-5bba805":"2020-06-08T20:28:43.583Z","21.0.1-7-52bdc54":"2020-06-09T04:26:22.860Z","21.0.1-8-f252e2a":"2020-06-09T05:00:03.483Z","21.0.1-9-c4814f3":"2020-06-12T20:21:30.129Z","21.0.1-rc3":"2020-06-16T21:34:34.935Z","21.0.1-10-275c3bb":"2020-06-24T16:03:13.643Z","21.0.2-rc3":"2020-06-24T18:26:52.013Z","21.0.2":"2020-07-14T20:32:12.819Z","21.0.3-11-6da6936":"2020-07-15T19:29:40.995Z","21.0.3-12-8c17f52":"2020-07-15T20:00:04.625Z","21.0.3-14-3d0b936":"2020-07-24T14:04:50.732Z","21.0.3-15-12c1d1e":"2020-07-27T18:17:10.555Z","21.0.3-16-61a8bdf":"2020-07-28T15:01:09.371Z","21.0.3-17-796555b":"2020-08-05T13:36:27.610Z","21.0.3-18-7739b8c":"2020-08-11T14:36:00.962Z","21.1.0-19-ed75695":"2020-08-12T17:29:44.570Z","21.0.3":"2020-08-12T17:48:45.149Z","21.1.0-20-c31c737":"2020-08-19T22:01:28.262Z","21.1.0-21-ca1b301":"2020-09-11T14:01:09.967Z","21.1.0-22-95f1f9b":"2020-09-11T15:14:10.159Z","21.1.0-23-08dc543":"2020-09-21T14:19:16.546Z"},"license":"MIT","readmeFilename":"","description":"Talk to eos API","homepage":"https://github.com/EOSIO/eosjs#readme","repository":{"type":"git","url":"git+https://github.com/EOSIO/eosjs.git"},"bugs":{"url":"https://github.com/EOSIO/eosjs/issues"},"users":{"jamesc":true},"author":{"name":"block.one"},"_etag":"W/\"881d0587539e685495768cd248ef732f\"","_lastModified":"Mon, 21 Sep 2020 14:19:24 GMT"}